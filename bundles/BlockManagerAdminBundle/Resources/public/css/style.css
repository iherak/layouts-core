/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

/* Roboto */
@font-face {
  font-family: 'Roboto';
  font-weight: 300;
  font-style: normal;
  src: url("../fonts/Roboto/Roboto-300.eot");
  src: url("../fonts/Roboto/Roboto-300.eot?#iefix") format("embedded-opentype"), local("Roboto Light"), local("Roboto-300"), url("../fonts/Roboto/Roboto-300.woff2") format("woff2"), url("../fonts/Roboto/Roboto-300.woff") format("woff"), url("../fonts/Roboto/Roboto-300.ttf") format("truetype"), url("../fonts/Roboto/Roboto-300.svg#Roboto") format("svg"); }

@font-face {
  font-family: 'Roboto';
  font-weight: 400;
  font-style: normal;
  src: url("../fonts/Roboto/Roboto-regular.eot");
  src: url("../fonts/Roboto/Roboto-regular.eot?#iefix") format("embedded-opentype"), local("Roboto"), local("Roboto-regular"), url("../fonts/Roboto/Roboto-regular.woff2") format("woff2"), url("../fonts/Roboto/Roboto-regular.woff") format("woff"), url("../fonts/Roboto/Roboto-regular.ttf") format("truetype"), url("../fonts/Roboto/Roboto-regular.svg#Roboto") format("svg"); }

@font-face {
  font-family: 'Roboto';
  font-weight: 500;
  font-style: normal;
  src: url("../fonts/Roboto/Roboto-500.eot");
  src: url("../fonts/Roboto/Roboto-500.eot?#iefix") format("embedded-opentype"), local("Roboto Medium"), local("Roboto-500"), url("../fonts/Roboto/Roboto-500.woff2") format("woff2"), url("../fonts/Roboto/Roboto-500.woff") format("woff"), url("../fonts/Roboto/Roboto-500.ttf") format("truetype"), url("../fonts/Roboto/Roboto-500.svg#Roboto") format("svg"); }

@font-face {
  font-family: 'Roboto';
  font-weight: 700;
  font-style: normal;
  src: url("../fonts/Roboto/Roboto-700.eot");
  src: url("../fonts/Roboto/Roboto-700.eot?#iefix") format("embedded-opentype"), local("Roboto Bold"), local("Roboto-700"), url("../fonts/Roboto/Roboto-700.woff2") format("woff2"), url("../fonts/Roboto/Roboto-700.woff") format("woff"), url("../fonts/Roboto/Roboto-700.ttf") format("truetype"), url("../fonts/Roboto/Roboto-700.svg#Roboto") format("svg"); }

@font-face {
  font-family: 'Roboto';
  font-weight: 400;
  font-style: italic;
  src: url("../fonts/Roboto/Roboto-italic.eot");
  src: url("../fonts/Roboto/Roboto-italic.eot?#iefix") format("embedded-opentype"), local("Roboto"), local("Roboto-italic"), url("../fonts/Roboto/Roboto-italic.woff2") format("woff2"), url("../fonts/Roboto/Roboto-italic.woff") format("woff"), url("../fonts/Roboto/Roboto-italic.ttf") format("truetype"), url("../fonts/Roboto/Roboto-italic.svg#Roboto") format("svg"); }

/* material icons */
@font-face {
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/MaterialIcons-Regular.eot");
  /* For IE6-8 */
  src: local("Material Icons"), local("MaterialIcons-Regular"), url("../fonts/MaterialIcons-Regular.woff2") format("woff2"), url("../fonts/MaterialIcons-Regular.woff") format("woff"), url("../fonts/MaterialIcons-Regular.ttf") format("truetype"); }

.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  /* Preferred icon size */
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;
  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  /* Support for IE. */
  -webkit-font-feature-settings: 'liga';
          font-feature-settings: 'liga'; }

.ng-layouts-app .multientry-items .multientry-item .icon-close, .nl-modal-mask .nl-modal .close-modal, .nl-modal-mask form input[type="checkbox"] + label::before, #rules input[type='checkbox'] + label::before, .nl-rule .rule-details::after, .nl-rule .settings-list .settings-value.editable-value::after, .js-change-layouts-view::before, .nl-layout-export-checkbox input + label::before {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased; }

.nl-rule.show-body .nl-rule-body, .nl-rule.show-actions .nl-rule-actions {
  -webkit-animation: fadeIn 350ms ease-out;
          animation: fadeIn 350ms ease-out; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

@keyframes fadeIn {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

.nl-grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-left: -20px;
  margin-right: -20px; }
  .nl-grid > [class^='col-'] {
    padding-left: 20px;
    padding-right: 20px;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    width: 100%; }
  .nl-grid .col-xxs1 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 8.3333333333%;
            flex: 0 0 8.3333333333%;
    max-width: 8.3333333333%; }
  .nl-grid .col-xxs2 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 16.666666667%;
            flex: 0 0 16.666666667%;
    max-width: 16.666666667%; }
  .nl-grid .col-xxs3 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    max-width: 25%; }
  .nl-grid .col-xxs4 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.333333333%;
            flex: 0 0 33.333333333%;
    max-width: 33.333333333%; }
  .nl-grid .col-xxs5 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 41.666666667%;
            flex: 0 0 41.666666667%;
    max-width: 41.666666667%; }
  .nl-grid .col-xxs6 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    max-width: 50%; }
  .nl-grid .col-xxs7 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 58.333333333%;
            flex: 0 0 58.333333333%;
    max-width: 58.333333333%; }
  .nl-grid .col-xxs8 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 66.666666666%;
            flex: 0 0 66.666666666%;
    max-width: 66.666666666%; }
  .nl-grid .col-xxs9 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 75%;
            flex: 0 0 75%;
    max-width: 75%; }
  .nl-grid .col-xxs10 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 83.333333333%;
            flex: 0 0 83.333333333%;
    max-width: 83.333333333%; }
  .nl-grid .col-xxs11 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 91.666666666%;
            flex: 0 0 91.666666666%;
    max-width: 91.666666666%; }
  .nl-grid .col-xxs12 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%; }
  @media screen and (min-width: 480px) {
    .nl-grid .col-xs1 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 8.3333333333%;
              flex: 0 0 8.3333333333%;
      max-width: 8.3333333333%; }
    .nl-grid .col-xs2 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 16.666666667%;
              flex: 0 0 16.666666667%;
      max-width: 16.666666667%; }
    .nl-grid .col-xs3 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 25%;
              flex: 0 0 25%;
      max-width: 25%; }
    .nl-grid .col-xs4 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 33.333333333%;
              flex: 0 0 33.333333333%;
      max-width: 33.333333333%; }
    .nl-grid .col-xs5 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 41.666666667%;
              flex: 0 0 41.666666667%;
      max-width: 41.666666667%; }
    .nl-grid .col-xs6 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 50%;
              flex: 0 0 50%;
      max-width: 50%; }
    .nl-grid .col-xs7 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 58.333333333%;
              flex: 0 0 58.333333333%;
      max-width: 58.333333333%; }
    .nl-grid .col-xs8 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 66.666666666%;
              flex: 0 0 66.666666666%;
      max-width: 66.666666666%; }
    .nl-grid .col-xs9 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 75%;
              flex: 0 0 75%;
      max-width: 75%; }
    .nl-grid .col-xs10 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 83.333333333%;
              flex: 0 0 83.333333333%;
      max-width: 83.333333333%; }
    .nl-grid .col-xs11 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 91.666666666%;
              flex: 0 0 91.666666666%;
      max-width: 91.666666666%; }
    .nl-grid .col-xs12 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 100%;
              flex: 0 0 100%; } }
  @media screen and (min-width: 768px) {
    .nl-grid .col-s1 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 8.3333333333%;
              flex: 0 0 8.3333333333%;
      max-width: 8.3333333333%; }
    .nl-grid .col-s2 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 16.666666667%;
              flex: 0 0 16.666666667%;
      max-width: 16.666666667%; }
    .nl-grid .col-s3 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 25%;
              flex: 0 0 25%;
      max-width: 25%; }
    .nl-grid .col-s4 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 33.333333333%;
              flex: 0 0 33.333333333%;
      max-width: 33.333333333%; }
    .nl-grid .col-s5 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 41.666666667%;
              flex: 0 0 41.666666667%;
      max-width: 41.666666667%; }
    .nl-grid .col-s6 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 50%;
              flex: 0 0 50%;
      max-width: 50%; }
    .nl-grid .col-s7 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 58.333333333%;
              flex: 0 0 58.333333333%;
      max-width: 58.333333333%; }
    .nl-grid .col-s8 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 66.666666666%;
              flex: 0 0 66.666666666%;
      max-width: 66.666666666%; }
    .nl-grid .col-s9 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 75%;
              flex: 0 0 75%;
      max-width: 75%; }
    .nl-grid .col-s10 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 83.333333333%;
              flex: 0 0 83.333333333%;
      max-width: 83.333333333%; }
    .nl-grid .col-s11 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 91.666666666%;
              flex: 0 0 91.666666666%;
      max-width: 91.666666666%; }
    .nl-grid .col-s12 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 100%;
              flex: 0 0 100%; } }
  @media screen and (min-width: 992px) {
    .nl-grid .col-m1 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 8.3333333333%;
              flex: 0 0 8.3333333333%;
      max-width: 8.3333333333%; }
    .nl-grid .col-m2 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 16.666666667%;
              flex: 0 0 16.666666667%;
      max-width: 16.666666667%; }
    .nl-grid .col-m3 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 25%;
              flex: 0 0 25%;
      max-width: 25%; }
    .nl-grid .col-m4 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 33.333333333%;
              flex: 0 0 33.333333333%;
      max-width: 33.333333333%; }
    .nl-grid .col-m5 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 41.666666667%;
              flex: 0 0 41.666666667%;
      max-width: 41.666666667%; }
    .nl-grid .col-m6 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 50%;
              flex: 0 0 50%;
      max-width: 50%; }
    .nl-grid .col-m7 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 58.333333333%;
              flex: 0 0 58.333333333%;
      max-width: 58.333333333%; }
    .nl-grid .col-m8 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 66.666666666%;
              flex: 0 0 66.666666666%;
      max-width: 66.666666666%; }
    .nl-grid .col-m9 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 75%;
              flex: 0 0 75%;
      max-width: 75%; }
    .nl-grid .col-m10 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 83.333333333%;
              flex: 0 0 83.333333333%;
      max-width: 83.333333333%; }
    .nl-grid .col-m11 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 91.666666666%;
              flex: 0 0 91.666666666%;
      max-width: 91.666666666%; }
    .nl-grid .col-m12 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 100%;
              flex: 0 0 100%; } }
  @media screen and (min-width: 1200px) {
    .nl-grid .col-l1 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 8.3333333333%;
              flex: 0 0 8.3333333333%;
      max-width: 8.3333333333%; }
    .nl-grid .col-l2 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 16.666666667%;
              flex: 0 0 16.666666667%;
      max-width: 16.666666667%; }
    .nl-grid .col-l3 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 25%;
              flex: 0 0 25%;
      max-width: 25%; }
    .nl-grid .col-l4 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 33.333333333%;
              flex: 0 0 33.333333333%;
      max-width: 33.333333333%; }
    .nl-grid .col-l5 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 41.666666667%;
              flex: 0 0 41.666666667%;
      max-width: 41.666666667%; }
    .nl-grid .col-l6 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 50%;
              flex: 0 0 50%;
      max-width: 50%; }
    .nl-grid .col-l7 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 58.333333333%;
              flex: 0 0 58.333333333%;
      max-width: 58.333333333%; }
    .nl-grid .col-l8 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 66.666666666%;
              flex: 0 0 66.666666666%;
      max-width: 66.666666666%; }
    .nl-grid .col-l9 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 75%;
              flex: 0 0 75%;
      max-width: 75%; }
    .nl-grid .col-l10 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 83.333333333%;
              flex: 0 0 83.333333333%;
      max-width: 83.333333333%; }
    .nl-grid .col-l11 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 91.666666666%;
              flex: 0 0 91.666666666%;
      max-width: 91.666666666%; }
    .nl-grid .col-l12 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 100%;
              flex: 0 0 100%; } }

html,
body {
  height: 100%; }

.nl-rules {
  position: relative; }

.layouts-controls {
  margin: 0 0 1em;
  text-align: right; }
  .layouts-controls .sorting-show {
    display: none; }
  .layout-export .layouts-controls {
    display: none; }

.export-layouts-controls {
  display: none;
  float: right;
  margin: 0 0 1em;
  text-align: right; }
  .layout-export .export-layouts-controls {
    display: block; }

.ng-layouts-app {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  background-color: whitesmoke;
  font-family: "Roboto", Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  color: #404040;
  min-height: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  .ng-layouts-app * {
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
  .ng-layouts-app.ajax-loading,
  .ng-layouts-app.ajax-loading * {
    cursor: wait !important; }
  .ng-layouts-app a:not(.nl-btn) {
    color: #0098c7; }
  .ng-layouts-app h1 {
    font-size: 1.625em;
    margin: 1em 0 3em; }
  .ng-layouts-app .ng-layouts-container {
    margin: 0 auto;
    max-width: 1200px;
    width: 98%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .ng-layouts-app .layouts-sidebar {
    width: 20%;
    background: #e6e5e5; }
    .ng-layouts-app .layouts-sidebar .main-menu {
      padding-top: 40px; }
      .ng-layouts-app .layouts-sidebar .main-menu > ul {
        list-style-type: none;
        padding: 0;
        margin: 0; }
        .ng-layouts-app .layouts-sidebar .main-menu > ul > li {
          border-bottom: 1px solid rgba(0, 0, 0, 0.02); }
          .ng-layouts-app .layouts-sidebar .main-menu > ul > li:first-child {
            border-top: 1px solid rgba(0, 0, 0, 0.02); }
          .ng-layouts-app .layouts-sidebar .main-menu > ul > li > a {
            padding: 10px 15px;
            display: block;
            font-size: 0.875em;
            font-weight: 300;
            text-decoration: none; }
            .ng-layouts-app .layouts-sidebar .main-menu > ul > li > a:hover {
              background: rgba(0, 0, 0, 0.02); }
          .ng-layouts-app .layouts-sidebar .main-menu > ul > li.current > a {
            background: whitesmoke;
            color: #ec417a;
            cursor: default; }
  .ng-layouts-app .layouts-content {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    padding: 30px;
    position: relative; }
  .ng-layouts-app.sorting .layouts-controls .sorting-show {
    display: inline-block; }
  .ng-layouts-app.sorting .layouts-controls .sorting-hide,
  .ng-layouts-app.sorting .layouts-controls .nl-filter-dropdown {
    display: none !important; }
  .ng-layouts-app.sorting .js-add-rule {
    display: none; }
  .ng-layouts-app.sorting .nl-no-filtered-items {
    display: none !important; }
  .ng-layouts-app .multientry-items .multientry-item {
    position: relative; }
    .ng-layouts-app .multientry-items .multientry-item .icon-close {
      position: absolute;
      right: 6px;
      top: 9px;
      width: 18px;
      height: 18px;
      line-height: 18px;
      font-size: 14px;
      cursor: pointer;
      text-align: center;
      -webkit-transition: background 0.15s;
      -o-transition: background 0.15s;
      transition: background 0.15s; }
      .ng-layouts-app .multientry-items .multientry-item .icon-close::before {
        content: "clear"; }
      .ng-layouts-app .multientry-items .multientry-item .icon-close:hover {
        background: rgba(0, 0, 0, 0.05); }
    .ng-layouts-app .multientry-items .multientry-item input[type=text] {
      padding-right: 3em; }
    .ng-layouts-app .multientry-items .multientry-item:first-child:nth-last-child(1) .icon-close {
      display: none; }
  .ng-layouts-app .multientry[data-last_item_can_be_removed="true"] .multientry-items .multientry-item .icon-close {
    display: block; }
  .ng-layouts-app .multientry .no-items-msg {
    display: none;
    font-size: 13px;
    padding: .5em;
    background: #f1f1f1;
    margin: 0 0 1em; }
  .ng-layouts-app .multientry.show-message .no-items-msg {
    display: block; }

.layouts-header {
  margin: 0 0 2em; }
  .layouts-header .layouts-title {
    font-size: 21px;
    font-weight: 400;
    margin: 0;
    float: left; }
  .layouts-header .layouts-controls {
    float: right; }
    .layouts-header .layouts-controls .nl-dropdown {
      display: inline-block; }
  .layouts-header::after {
    content: "";
    display: table;
    clear: both; }
  .layouts-header p {
    clear: both;
    font-size: 14px; }

.nl-modal-mask {
  position: fixed;
  z-index: 1000;
  background: rgba(0, 0, 0, 0.5);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  padding: 15px;
  -webkit-animation: maskFadeIn 0.2s;
          animation: maskFadeIn 0.2s; }
  .nl-modal-mask * {
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
  .nl-modal-mask .nl-modal {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    background: #fff;
    border-radius: 0px;
    width: 500px;
    max-width: 98%;
    max-height: 98%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-animation: modalSlide 0.4s ease-out;
            animation: modalSlide 0.4s ease-out; }
    .nl-modal-mask .nl-modal .close-modal {
      position: absolute;
      right: 15px;
      top: 16px;
      display: block;
      color: #fff;
      border: none;
      padding: 0;
      font-size: 24px;
      text-align: center;
      background: transparent;
      text-decoration: none; }
      .nl-modal-mask .nl-modal .close-modal::before {
        content: "clear"; }
    .nl-modal-mask .nl-modal .nl-modal-body {
      padding: 25px 15px;
      overflow-y: auto;
      font-size: 16px; }
    .nl-modal-mask .nl-modal .nl-modal-head {
      padding: 15px 35px 15px 15px;
      background: #404040;
      color: #fff;
      border-radius: 0px 0px 0 0;
      font-size: 20px;
      min-height: 58px; }
    .nl-modal-mask .nl-modal .nl-modal-actions {
      padding: 15px;
      text-align: right;
      border-top: 1px solid rgba(0, 0, 0, 0.1); }
      .nl-modal-mask .nl-modal .nl-modal-actions .nl-btn {
        margin-left: .5em; }
    .nl-modal-mask .nl-modal .errors {
      list-style-type: none;
      margin: -0.5em 0 1.5em;
      padding: 0;
      font-size: 15px; }
      .nl-modal-mask .nl-modal .errors li {
        color: red; }
  .nl-modal-mask form label {
    display: block;
    font-weight: normal;
    font-size: 14px;
    margin: 0 0 4px; }
  .nl-modal-mask form input[type="text"],
  .nl-modal-mask form input[type="number"],
  .nl-modal-mask form input[type="url"],
  .nl-modal-mask form input[type="email"],
  .nl-modal-mask form textarea {
    display: block;
    margin: 0 0 1em;
    border-radius: 2px;
    width: 100%;
    padding: 0 0.75em;
    font-size: 14px;
    height: 44px;
    border: 1px solid #b3b2b2;
    background: #fff; }
    .nl-modal-mask form input[type="text"]::-webkit-input-placeholder,
    .nl-modal-mask form input[type="number"]::-webkit-input-placeholder,
    .nl-modal-mask form input[type="url"]::-webkit-input-placeholder,
    .nl-modal-mask form input[type="email"]::-webkit-input-placeholder,
    .nl-modal-mask form textarea::-webkit-input-placeholder {
      color: #b3b2b2; }
    .nl-modal-mask form input[type="text"]::-ms-input-placeholder,
    .nl-modal-mask form input[type="number"]::-ms-input-placeholder,
    .nl-modal-mask form input[type="url"]::-ms-input-placeholder,
    .nl-modal-mask form input[type="email"]::-ms-input-placeholder,
    .nl-modal-mask form textarea::-ms-input-placeholder {
      color: #b3b2b2; }
    .nl-modal-mask form input[type="text"]::placeholder,
    .nl-modal-mask form input[type="number"]::placeholder,
    .nl-modal-mask form input[type="url"]::placeholder,
    .nl-modal-mask form input[type="email"]::placeholder,
    .nl-modal-mask form textarea::placeholder {
      color: #b3b2b2; }
  .nl-modal-mask form textarea {
    height: auto;
    min-height: 120px;
    padding-top: 0.375em;
    resize: vertical; }
  .nl-modal-mask form input[type="checkbox"] {
    position: absolute;
    left: -9999em; }
    .nl-modal-mask form input[type="checkbox"] + label {
      display: block;
      position: relative;
      padding: 0.3846153846em 0.3846153846em 0.3846153846em 2em !important;
      margin: 0 0 0.5em;
      cursor: pointer; }
      .nl-modal-mask form input[type="checkbox"] + label::before {
        font-size: 24px;
        content: "check_box_outline_blank";
        position: absolute;
        left: 0;
        top: 0.1em;
        color: #666666; }
    .nl-modal-mask form input[type="checkbox"]:checked + label::before {
      content: "check_box";
      color: #0098c7; }
    .nl-modal-mask form input[type="checkbox"]:indeterminate + label::before {
      content: "indeterminate_check_box"; }
  .nl-modal-mask .form-actions {
    text-align: right; }
  .nl-modal-mask .nl-modal-loader {
    color: #fff;
    font-size: 14px;
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    display: none; }
  .nl-modal-mask.modal-loading .nl-modal-loader {
    display: block; }
  .nl-modal-mask.modal-loading .nl-modal {
    display: none; }

@-webkit-keyframes maskFadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes maskFadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@-webkit-keyframes modalSlide {
  from {
    margin-top: 50px;
    opacity: 0; }
  top {
    margin-top: 0;
    opacity: 1; } }

@keyframes modalSlide {
  from {
    margin-top: 50px;
    opacity: 0; }
  top {
    margin-top: 0;
    opacity: 1; } }

.nl-tooltip {
  display: none;
  position: fixed;
  width: 300px;
  z-index: 1010; }
  .nl-tooltip .nl-tooltip-inner {
    background: rgba(51, 51, 51, 0.9);
    color: #fff;
    text-align: center;
    font-size: 10px;
    padding: 0.5em 1em;
    font-weight: 200;
    position: absolute;
    border-radius: 2px; }
    .nl-tooltip .nl-tooltip-inner::before {
      content: "";
      width: 0;
      height: 0;
      position: absolute;
      display: block; }
  .nl-tooltip.nl-tooltip-top .nl-tooltip-inner, .nl-tooltip.nl-tooltip-bottom .nl-tooltip-inner {
    left: 0;
    -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
            transform: translateX(-50%); }
    .nl-tooltip.nl-tooltip-top .nl-tooltip-inner::before, .nl-tooltip.nl-tooltip-bottom .nl-tooltip-inner::before {
      left: 50%;
      -webkit-transform: translateX(-50%);
          -ms-transform: translateX(-50%);
              transform: translateX(-50%);
      border-left: 4px solid transparent;
      border-right: 4px solid transparent; }
  .nl-tooltip.nl-tooltip-top .nl-tooltip-inner {
    bottom: 10px; }
    .nl-tooltip.nl-tooltip-top .nl-tooltip-inner::before {
      top: 100%;
      border-top: 6px solid rgba(51, 51, 51, 0.9); }
  .nl-tooltip.nl-tooltip-bottom .nl-tooltip-inner {
    top: 10px; }
    .nl-tooltip.nl-tooltip-bottom .nl-tooltip-inner::before {
      bottom: 100%;
      border-bottom: 6px solid rgba(51, 51, 51, 0.9); }
  .nl-tooltip.nl-tooltip-left .nl-tooltip-inner, .nl-tooltip.nl-tooltip-right .nl-tooltip-inner {
    top: 0;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%); }
    .nl-tooltip.nl-tooltip-left .nl-tooltip-inner::before, .nl-tooltip.nl-tooltip-right .nl-tooltip-inner::before {
      top: 50%;
      -webkit-transform: translateY(-50%);
          -ms-transform: translateY(-50%);
              transform: translateY(-50%);
      border-top: 4px solid transparent;
      border-bottom: 4px solid transparent; }
  .nl-tooltip.nl-tooltip-left .nl-tooltip-inner {
    right: 10px; }
    .nl-tooltip.nl-tooltip-left .nl-tooltip-inner::before {
      left: 100%;
      border-left: 6px solid rgba(51, 51, 51, 0.9); }
  .nl-tooltip.nl-tooltip-right .nl-tooltip-inner {
    left: 10px; }
    .nl-tooltip.nl-tooltip-right .nl-tooltip-inner::before {
      right: 100%;
      border-right: 6px solid rgba(51, 51, 51, 0.9); }
  .nl-tooltip.nl-tooltip-active {
    display: block;
    -webkit-animation: showTT 200ms ease-out;
            animation: showTT 200ms ease-out; }

@-webkit-keyframes showTT {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

@keyframes showTT {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

.nl-dropdown {
  position: relative; }
  .nl-dropdown[data-position='right'] {
    text-align: right; }
    .nl-dropdown[data-position='right'] .nl-dropdown-menu {
      right: 0;
      left: auto; }
  .nl-dropdown .nl-dropdown-menu {
    visibility: hidden;
    position: absolute;
    bottom: 100%;
    left: 0;
    border-radius: 0;
    background: #404040;
    color: #fff;
    z-index: -10;
    margin: 0;
    padding: .5em 0;
    list-style-type: none; }
    .nl-dropdown .nl-dropdown-menu > li {
      padding: 0;
      margin: 0; }
      .nl-dropdown .nl-dropdown-menu > li > a,
      .nl-dropdown .nl-dropdown-menu > li > span,
      .nl-dropdown .nl-dropdown-menu > li > button {
        display: block;
        font-size: 13px;
        padding: .6em 1em;
        white-space: nowrap;
        text-decoration: none;
        -webkit-transition: background-color .2s ease;
        -o-transition: background-color .2s ease;
        transition: background-color .2s ease;
        border: 0;
        background: transparent;
        width: 100%;
        text-align: inherit; }
        .nl-dropdown .nl-dropdown-menu > li > a[disabled],
        .nl-dropdown .nl-dropdown-menu > li > span[disabled],
        .nl-dropdown .nl-dropdown-menu > li > button[disabled] {
          opacity: .2;
          cursor: default; }
      .nl-dropdown .nl-dropdown-menu > li > a,
      .nl-dropdown .nl-dropdown-menu > li > button {
        color: inherit; }
        .nl-dropdown .nl-dropdown-menu > li > a:hover:not([disabled]),
        .nl-dropdown .nl-dropdown-menu > li > button:hover:not([disabled]) {
          background: rgba(255, 255, 255, 0.05); }
        .nl-dropdown .nl-dropdown-menu > li > a .note,
        .nl-dropdown .nl-dropdown-menu > li > button .note {
          display: block;
          font-size: .6923076923em;
          color: #a6a6a6; }
  .nl-dropdown.nl-dropdown-active .nl-dropdown-menu {
    visibility: visible;
    z-index: 1000;
    top: 100%;
    bottom: auto;
    -webkit-animation: showDropdown 200ms ease-out;
            animation: showDropdown 200ms ease-out; }
  .nl-dropdown.nl-dropdown-active.nl-dropdown-top .nl-dropdown-menu {
    top: auto;
    bottom: 100%; }
  .nl-dropdown.nl-dropdown-active .nl-dropdown-toggle,
  .nl-dropdown.nl-dropdown-active .nl-dropdown-toggle:hover {
    background: #404040;
    color: #fff; }
  .nl-dropdown .checkbox {
    text-align: left;
    padding: 0 1em;
    font-size: 13px; }
    .nl-dropdown .checkbox label {
      white-space: nowrap; }
  .nl-dropdown .filter-checked-amount {
    display: inline-block;
    position: absolute;
    right: 1em;
    top: 0;
    font-size: 10px;
    padding: .5em;
    min-width: 2em;
    font-weight: 700;
    text-align: center;
    line-height: 1;
    -webkit-transform: translate3d(0, -50%, 0);
            transform: translate3d(0, -50%, 0);
    background: #F3590A;
    color: #fff;
    border-radius: 500em;
    z-index: 2; }

@-webkit-keyframes showDropdown {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

@keyframes showDropdown {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

.nl-btn {
  background: 0 0;
  border: none;
  border-radius: 2px;
  color: #404040;
  position: relative;
  height: 36px;
  margin: 0;
  min-width: 64px;
  padding: 0 12px;
  display: inline-block;
  font-family: "Roboto", Helvetica, Arial, sans-serif;
  font-size: 13px;
  overflow: hidden;
  will-change: box-shadow;
  -webkit-transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1);
  transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1);
  -o-transition: box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1);
  outline: none;
  cursor: pointer;
  text-decoration: none;
  text-align: center;
  line-height: 36px;
  vertical-align: middle; }
  .nl-btn:hover {
    background: rgba(158, 158, 158, 0.2);
    text-decoration: none; }
  .nl-btn:focus:not(:active) {
    background: rgba(158, 158, 158, 0.3); }
  .nl-btn:active {
    background: rgba(158, 158, 158, 0.4); }
  .nl-btn.nl-btn-link {
    color: #0098c7; }
  .nl-btn.nl-btn-icon {
    border-radius: 50%;
    width: 36px;
    min-width: 36px;
    padding: 0;
    font-size: 24px; }
    .nl-btn.nl-btn-icon i {
      font-size: inherit;
      display: block; }
  .nl-btn.nl-btn-primary {
    background: #0098c7;
    color: #fff; }
    .nl-btn.nl-btn-primary:hover {
      background: #0089b3; }
    .nl-btn.nl-btn-primary:focus:not(:active) {
      background: #0085ad; }
    .nl-btn.nl-btn-primary:active {
      background: #0081a8; }
  .nl-btn.nl-btn-white {
    background: #fff; }
    .nl-btn.nl-btn-white:hover {
      background: rgba(158, 158, 158, 0.2); }
    .nl-btn.nl-btn-white:focus:not(:active) {
      background: rgba(158, 158, 158, 0.3); }
    .nl-btn.nl-btn-white:active {
      background: rgba(158, 158, 158, 0.4); }
  .nl-btn i {
    vertical-align: middle;
    font-size: 15px; }
  .nl-btn:disabled {
    opacity: 0.5; }
  .nl-dropdown-active > .nl-btn {
    border-radius: 2px 2px 0 0; }

.nl-select, .nl-rule .nl-rule-body form select:not([multiple]) {
  border: none;
  color: #404040;
  font-family: "Roboto", Helvetica, Arial, sans-serif;
  border-radius: 2px;
  height: 36px;
  padding: 4px 32px 4px 10px;
  font-size: 13px;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  background-color: whitesmoke;
  -webkit-transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  background-image: -o-linear-gradient(45deg, transparent 50%, gray 50%), -o-linear-gradient(315deg, gray 50%, transparent 50%);
  background-image: linear-gradient(45deg, transparent 50%, gray 50%), linear-gradient(135deg, gray 50%, transparent 50%);
  background-position: calc(100% - 16px) 50%, calc(100% - 11px) 50%;
  background-size: 4px 5px, 5px 5px;
  background-repeat: no-repeat;
  max-width: 100%;
  vertical-align: middle; }
  .nl-select:hover, .nl-rule .nl-rule-body form select:hover:not([multiple]) {
    background-color: #f0f0f0; }
  .nl-select:focus:not(:active), .nl-rule .nl-rule-body form select:focus:not(:active):not([multiple]) {
    outline: none;
    background-color: #ebebeb; }

.layout-icon {
  display: block;
  width: 50px;
  height: 75px;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: contain; }
  .ngcb .preview-panel .layout-icon {
    width: 90%;
    height: 0;
    padding-bottom: 130%;
    margin: 1em auto 0;
    border: 2px solid #a1a1a1;
    background-size: 95%;
    border-radius: 3px; }

.loading-ng-icon, .nl-modal-mask .nl-modal-loader > span {
  display: inline-block;
  position: relative;
  font-size: 1em;
  width: 1.375em;
  height: 2.375em;
  margin: 0em 1.5em -0.3em;
  -webkit-transform: rotate(-48deg);
      -ms-transform: rotate(-48deg);
          transform: rotate(-48deg);
  -webkit-animation: loadRotate 1.5s infinite cubic-bezier(0.45, 0.05, 0.55, 0.95);
          animation: loadRotate 1.5s infinite cubic-bezier(0.45, 0.05, 0.55, 0.95); }
  .loading-ng-icon::before, .nl-modal-mask .nl-modal-loader > span::before, .loading-ng-icon::after, .nl-modal-mask .nl-modal-loader > span::after {
    content: "";
    display: block;
    background: currentColor;
    border-radius: 50%;
    position: absolute;
    left: 50%; }
  .loading-ng-icon::before, .nl-modal-mask .nl-modal-loader > span::before {
    width: 1em;
    height: 1em;
    margin-left: -0.5em;
    bottom: 1.375em;
    -webkit-animation: loadBounceTopSquash 0.75s alternate infinite ease, loadBounceTopFlow 0.75s alternate infinite ease;
            animation: loadBounceTopSquash 0.75s alternate infinite ease, loadBounceTopFlow 0.75s alternate infinite ease; }
  .loading-ng-icon::after, .nl-modal-mask .nl-modal-loader > span::after {
    width: 1.375em;
    height: 1.375em;
    margin-left: -0.6875em;
    bottom: 0;
    -webkit-animation: loadBounceBottomSquash 0.75s alternate infinite ease, loadBounceBottomFlow 0.75s alternate infinite ease;
            animation: loadBounceBottomSquash 0.75s alternate infinite ease, loadBounceBottomFlow 0.75s alternate infinite ease; }

@-webkit-keyframes loadBounceTopSquash {
  0% {
    height: 0.375em;
    border-radius: 3.75em 3.75em 1.25em 1.25em;
    -webkit-transform: scaleX(2);
            transform: scaleX(2); }
  15% {
    height: 1em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  100% {
    height: 1em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@keyframes loadBounceTopSquash {
  0% {
    height: 0.375em;
    border-radius: 3.75em 3.75em 1.25em 1.25em;
    -webkit-transform: scaleX(2);
            transform: scaleX(2); }
  15% {
    height: 1em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  100% {
    height: 1em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@-webkit-keyframes loadBounceBottomSquash {
  0% {
    height: 1em;
    border-radius: 1.25em 1.25em 3.75em 3.75em;
    -webkit-transform: scaleX(1.5);
            transform: scaleX(1.5); }
  15% {
    height: 1.375em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  100% {
    height: 1.375em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@keyframes loadBounceBottomSquash {
  0% {
    height: 1em;
    border-radius: 1.25em 1.25em 3.75em 3.75em;
    -webkit-transform: scaleX(1.5);
            transform: scaleX(1.5); }
  15% {
    height: 1.375em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  100% {
    height: 1.375em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@-webkit-keyframes loadBounceTopFlow {
  0% {
    bottom: 1.125em; }
  50% {
    bottom: 2.25em;
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19);
            animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19); }
  90% {
    bottom: 1.75em; }
  100% {
    bottom: 1.75em; } }

@keyframes loadBounceTopFlow {
  0% {
    bottom: 1.125em; }
  50% {
    bottom: 2.25em;
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19);
            animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19); }
  90% {
    bottom: 1.75em; }
  100% {
    bottom: 1.75em; } }

@-webkit-keyframes loadBounceBottomFlow {
  0% {
    bottom: 0.1875em; }
  50% {
    bottom: -0.9375em;
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19);
            animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19); }
  90% {
    bottom: 0em; }
  100% {
    bottom: 0em; } }

@keyframes loadBounceBottomFlow {
  0% {
    bottom: 0.1875em; }
  50% {
    bottom: -0.9375em;
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19);
            animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19); }
  90% {
    bottom: 0em; }
  100% {
    bottom: 0em; } }

@-webkit-keyframes loadRotate {
  0% {
    -webkit-transform: rotate(-228deg);
            transform: rotate(-228deg); }
  49% {
    -webkit-transform: rotate(-48deg);
            transform: rotate(-48deg); }
  51% {
    -webkit-transform: rotate(-48deg);
            transform: rotate(-48deg); }
  92% {
    -webkit-transform: rotate(132deg);
            transform: rotate(132deg); }
  100% {
    -webkit-transform: rotate(132deg);
            transform: rotate(132deg); } }

@keyframes loadRotate {
  0% {
    -webkit-transform: rotate(-228deg);
            transform: rotate(-228deg); }
  49% {
    -webkit-transform: rotate(-48deg);
            transform: rotate(-48deg); }
  51% {
    -webkit-transform: rotate(-48deg);
            transform: rotate(-48deg); }
  92% {
    -webkit-transform: rotate(132deg);
            transform: rotate(132deg); }
  100% {
    -webkit-transform: rotate(132deg);
            transform: rotate(132deg); } }

#rules {
  visibility: hidden; }
  #rules input[type='checkbox'] {
    position: absolute;
    left: -9999em; }
    #rules input[type='checkbox'] + label {
      display: block;
      position: relative;
      padding: 0 0 0 1.75em;
      margin: .5em 0 1em;
      cursor: pointer;
      font-size: 1em;
      line-height: 1.4; }
      #rules input[type='checkbox'] + label::before {
        content: 'check_box_outline_blank';
        font-size: 18px;
        position: absolute;
        left: 0;
        top: 0; }
    #rules input[type='checkbox']:checked + label::before {
      content: 'check_box'; }

.nl-rules-head {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: 12px;
  color: #575757;
  padding: 0 0 2px; }
  .nl-rules-head .nl-rules-head-wrapper {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding-left: 20px; }
  .nl-rules-head .rule-priority {
    text-transform: uppercase; }

.nl-rule-cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 4px 20px 4px 0; }
  .nl-rule-cell.rule-priority {
    width: 40px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    font-size: 12px;
    padding-right: 0; }
  .nl-rule-cell.rule-layout {
    width: 25%; }
  .nl-rule-cell.rule-targets {
    width: 25%;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
  .nl-rule-cell.rule-conditions {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    min-width: 0; }
    .nl-rule-cell.rule-conditions ul {
      line-height: 1.4;
      max-height: 4.2em;
      overflow: hidden;
      display: block;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      -o-text-overflow: ellipsis;
         text-overflow: ellipsis;
      width: 100%; }
      .nl-rule-cell.rule-conditions ul.nl-inline {
        display: block; }
        .nl-rule-cell.rule-conditions ul.nl-inline > li {
          display: inline-block;
          margin-right: 2px; }
          .nl-rule-cell.rule-conditions ul.nl-inline > li::after {
            content: ',';
            display: inline-block; }
          .nl-rule-cell.rule-conditions ul.nl-inline > li:last-child::after {
            content: ''; }
      .nl-rule-cell.rule-conditions ul.nl-ellipsis > li {
        -o-text-overflow: ellipsis;
           text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden; }
  .nl-rule-cell p {
    margin: 0; }
  .nl-rule-cell ul {
    margin: 0;
    padding: 0;
    list-style-type: none; }
    .nl-rule-cell ul > li {
      margin: 0; }
    .nl-rule-cell ul .unique {
      font-weight: 700;
      color: #333333; }

.nl-rule {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin: 0 0 10px;
  font-size: 12px; }
  .nl-rule.nl-rule-hidden {
    display: none; }
  .nl-rule .rule-priority {
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    padding-top: 20px; }
  .nl-rule.show-body .nl-rule-body {
    display: block; }
  .nl-rule.show-body .rule-details::after {
    content: 'keyboard_arrow_up'; }
  .nl-rule.show-actions .nl-rule-actions {
    display: block; }
  .nl-rule.show-actions.show-body .nl-rule-actions {
    background: #e6e5e5; }
  .nl-rule .rule-details {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    cursor: pointer;
    padding: 20px 12px;
    background: #e6e5e5;
    line-height: 1.6666666667;
    color: #333333; }
    .nl-rule .rule-details::after {
      font-size: 16px;
      margin: 1px 0 0 .125em;
      content: 'keyboard_arrow_down'; }
  .nl-rule .nl-rule-head {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding-left: 20px;
    color: #666666; }
    .nl-rule .nl-rule-head .rule-layout {
      font-size: 14px;
      font-weight: 700;
      color: #333333; }
    .nl-rule .nl-rule-head .nl-dropdown {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: stretch;
          -ms-flex-align: stretch;
              align-items: stretch; }
      .nl-rule .nl-rule-head .nl-dropdown .nl-dropdown-toggle {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center;
        height: auto;
        min-width: auto;
        font-size: 24px;
        padding: 0 .75em;
        border-radius: 0; }
        .nl-rule .nl-rule-head .nl-dropdown .nl-dropdown-toggle i {
          font-size: inherit; }
    .nl-rule .nl-rule-head .no-layout {
      font-weight: 400;
      color: #999999;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center; }
      .nl-rule .nl-rule-head .no-layout a {
        border-left: 1px solid #e6e5e5;
        padding: .6em .6em .6em 1em;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        margin-left: 1em;
        text-decoration: none;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center; }
        .nl-rule .nl-rule-head .no-layout a i {
          color: #b3b2b2;
          margin-right: .25em; }
  .nl-rule .nl-rule-body {
    display: none;
    padding: 20px;
    background: #e6e5e5; }
    .nl-rule .nl-rule-body h4 {
      font-size: 12px;
      font-weight: 700;
      margin: 0 0 1.6666666667em; }
    .nl-rule .nl-rule-body p.note {
      margin: 1.5em 0 0;
      font-style: italic; }
    .nl-rule .nl-rule-body .rule-layout-info {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
      -webkit-box-align: start;
          -ms-flex-align: start;
              align-items: flex-start; }
      .nl-rule .nl-rule-body .rule-layout-info .rule-layout-info-icon {
        margin-right: 12px;
        border: 1px solid #a1a1a1;
        padding: 2px;
        width: 56px;
        opacity: .65; }
        .nl-rule .nl-rule-body .rule-layout-info .rule-layout-info-icon .layout-icon {
          display: block;
          width: 100%;
          height: 0;
          padding-bottom: 150%; }
      .nl-rule .nl-rule-body .rule-layout-info .rule-layout-info-text {
        min-width: 80px;
        -webkit-box-flex: 1;
            -ms-flex: 1;
                flex: 1; }
        .nl-rule .nl-rule-body .rule-layout-info .rule-layout-info-text p {
          word-break: break-word; }
    .nl-rule .nl-rule-body form {
      background: whitesmoke;
      padding: .8em;
      margin: .5em 0;
      font-size: 13px; }
      .nl-rule .nl-rule-body form label {
        display: block;
        margin: 0 0 .25em;
        font-weight: 400;
        font-size: .9em; }
      .nl-rule .nl-rule-body form input[type='text'] {
        display: block;
        border: 0;
        padding: .5em;
        margin: 0 0 1em;
        width: 100%;
        line-height: 1.8; }
      .nl-rule .nl-rule-body form select:not([multiple]) {
        background-color: #fff;
        margin: 0 0 1em; }
      .nl-rule .nl-rule-body form select[multiple] {
        width: 100%;
        border: 0;
        margin: 0 0 1em; }
        .nl-rule .nl-rule-body form select[multiple] option {
          padding: .25em; }
      .nl-rule .nl-rule-body form .form-actions {
        text-align: right; }
      .nl-rule .nl-rule-body form .nl-btn {
        height: 28px;
        line-height: 28px; }
      .nl-rule .nl-rule-body form .js-input-browse .js-clear {
        background: #fff;
        border-radius: 0;
        border-right: 1px solid whitesmoke; }
        .nl-rule .nl-rule-body form .js-input-browse .js-clear:hover {
          background: #fafafa; }
      .nl-rule .nl-rule-body form .js-input-browse .js-trigger {
        background: #fff;
        color: inherit;
        height: 32px;
        font-size: 1em;
        border-radius: 0; }
        .nl-rule .nl-rule-body form .js-input-browse .js-trigger span {
          line-height: 32px; }
        .nl-rule .nl-rule-body form .js-input-browse .js-trigger::after {
          background: #0098c7;
          color: #fff;
          line-height: 32px;
          -webkit-transition: background .15s ease, color .15s ease;
          -o-transition: background .15s ease, color .15s ease;
          transition: background .15s ease, color .15s ease;
          border-radius: 0;
          font-size: 20px; }
        .nl-rule .nl-rule-body form .js-input-browse .js-trigger:hover::after {
          background: #0089b3; }
      .nl-rule .nl-rule-body form .errors {
        list-style-type: none;
        margin: -.5em 0 1em;
        padding: 0; }
        .nl-rule .nl-rule-body form .errors li {
          color: #f00; }
      .nl-rule .nl-rule-body form label + .errors {
        margin: .25em 0 .125em; }
  .nl-rule .nl-rule-actions {
    display: none;
    border-top: 1px solid rgba(0, 0, 0, 0.075);
    padding: 20px;
    background: #fff;
    text-align: right; }
  .nl-rule .settings-loader {
    display: none;
    color: #bfbfbf;
    font-size: 10px;
    padding: 1em 0;
    text-align: center; }
  .nl-rule .settings-list {
    list-style-type: none;
    margin: 0;
    padding: 0; }
    .nl-rule .settings-list > li {
      padding: .5em 2.5em .5em 1em;
      margin: 0 0 .5em;
      position: relative;
      background-color: rgba(255, 255, 255, 0.5); }
      .nl-rule .settings-list > li .remove-setting {
        position: absolute;
        right: 6px;
        top: 7px;
        width: 18px;
        text-align: center;
        height: 18px;
        line-height: 18px;
        display: block;
        color: #ff0080;
        -webkit-transition: background .15s;
        -o-transition: background .15s;
        transition: background .15s; }
        .nl-rule .settings-list > li .remove-setting i {
          font-size: 1.3333333333em;
          line-height: inherit; }
        .nl-rule .settings-list > li .remove-setting:hover {
          background: rgba(0, 0, 0, 0.08); }
    .nl-rule .settings-list .settings-value {
      display: inline-block;
      line-height: 1.5; }
      .nl-rule .settings-list .settings-value.editable-value {
        cursor: pointer;
        border-bottom: 1px dashed rgba(0, 0, 0, 0.2); }
        .nl-rule .settings-list .settings-value.editable-value::after {
          content: 'edit';
          font-size: 1.1666666667em;
          color: #0098c7;
          margin: 0 0 2px .5em;
          vertical-align: middle; }
  .nl-rule .disabled-label {
    font-size: 10px;
    text-transform: uppercase;
    padding: .5em 1.25em;
    display: inline-block;
    margin: 0 20px;
    background: #ec417a;
    color: #fff; }
  .sorting .nl-rule .nl-rule-content {
    cursor: move;
    cursor: grab;
    cursor: -webkit-grab;
    -webkit-box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3); }
    .sorting .nl-rule .nl-rule-content:active {
      cursor: grabbing;
      cursor: -webkit-grabbing; }
  .sorting .nl-rule .nl-rule-head {
    position: relative; }
    .sorting .nl-rule .nl-rule-head::before {
      content: '';
      position: absolute;
      background: transparent url("data: image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAAMAAAADCAYAAABWKLW/AAAAF0lEQVQIW2NkYGD4z8DAwMgAI0AMDA4AI3EBBCKrOnQAAAAASUVORK5CYII=") repeat;
      width: 8px;
      left: 4px;
      top: 8px;
      bottom: 8px;
      opacity: .25; }
    .sorting .nl-rule .nl-rule-head .nl-dropdown {
      opacity: .3;
      pointer-events: none; }
  .sorting .nl-rule .nl-rule-actions,
  .sorting .nl-rule .remove-setting,
  .sorting .nl-rule .settings-action,
  .sorting .nl-rule a.js-link-layout,
  .sorting .nl-rule .js-open-bm {
    display: none !important; }
  .sorting .nl-rule .editable-value {
    border: 0 !important; }
    .sorting .nl-rule .editable-value::after {
      display: none !important; }
  .sorting .nl-rule.nl-rule-hidden {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .nl-rule.ui-sortable-placeholder {
    visibility: visible !important;
    background: transparent;
    -webkit-box-shadow: none;
            box-shadow: none;
    outline: 1px dashed #b3bccb;
    outline-offset: 4px; }
    .nl-rule.ui-sortable-placeholder * {
      visibility: hidden; }

.nl-rule-content {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  background: #fff;
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
          box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2); }

.nl-rules {
  overflow-y: auto;
  position: absolute;
  left: 0;
  right: 0;
  top: 164px;
  bottom: 30px;
  padding: 4px 30px 80px 30px; }
  .nl-rules .nl-rule-between {
    text-align: center;
    margin: .75em 0;
    position: relative; }
    .sorting .nl-rules .nl-rule-between {
      display: none; }
    .nl-rules .nl-rule-between i {
      vertical-align: middle;
      font-size: 1.75em; }
    .nl-rules .nl-rule-between .hidden-amount {
      position: absolute;
      left: 50%;
      top: 50%;
      -webkit-transform: translate3d(0, -50%, 0);
              transform: translate3d(0, -50%, 0);
      font-size: .8em;
      margin-left: 1em; }

.nl-no-items,
.nl-no-filtered-items {
  display: none;
  text-align: center;
  font-style: italic;
  margin: 3em 0; }
  .nl-no-items::before, .nl-no-items::after,
  .nl-no-filtered-items::before,
  .nl-no-filtered-items::after {
    content: '-';
    display: inline-block;
    margin: 0 .5em; }

.no-filtered-items .nl-rule-between {
  display: none; }

.no-filtered-items .nl-no-filtered-items {
  display: block; }

.nl-mappings-filter {
  text-align: left; }

#layouts {
  display: none; }

.js-change-layouts-view::before {
  content: "view_comfy";
  line-height: inherit;
  font-size: 24px; }

.nl-layout-icon {
  border: 1px solid #a1a1a1;
  padding: 1px;
  opacity: 0.65; }
  .nl-layout-icon .layout-icon {
    display: block;
    width: 100%;
    height: 0;
    padding-bottom: 150%; }

.nl-layout-info .nl-layout-description p {
  margin: 0;
  word-break: break-word; }

.nl-layout-content {
  background: #fff;
  color: #666666;
  font-size: 12px; }
  .nl-layout-content .nl-layout-name {
    color: #333333;
    font-size: 14px;
    font-weight: 700; }
    .nl-layout-content .nl-layout-name a {
      color: inherit;
      text-decoration: none; }
  .nl-layout-content .unpublished-label {
    text-transform: uppercase;
    display: inline-block;
    text-align: center;
    margin: 0 1em;
    padding: 0.5em 0.7em;
    font-size: 8px;
    color: #fff;
    background: #668899;
    line-height: 1.375;
    font-weight: 700; }

.nl-layout-actions {
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }
  .nl-layout-actions .nl-layout-data {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    .nl-layout-actions .nl-layout-data .meta-info {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center; }
      .nl-layout-actions .nl-layout-data .meta-info i {
        font-size: 20px;
        margin-right: 0.25em; }
  .nl-layout-actions .nl-dropdown {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: stretch;
        -ms-flex-align: stretch;
            align-items: stretch; }
    .nl-layout-actions .nl-dropdown .nl-btn {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center;
      height: auto;
      min-width: auto;
      font-size: 24px;
      border-radius: 0; }
      .nl-layout-actions .nl-dropdown .nl-btn i {
        font-size: inherit; }

/* grid view */
.nl-layouts-view-grid .js-change-layouts-view::before {
  content: "view_list"; }

.nl-layouts-view-grid .nl-layouts {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: 0 -15px; }

.nl-layouts-view-grid .nl-layout {
  width: 25%;
  padding: 0 15px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  .nl-layouts-view-grid .nl-layout .nl-layout-content {
    -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    margin: 0 0 30px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
    .nl-layouts-view-grid .nl-layout .nl-layout-content:hover .nl-layout-actions {
      background-color: #0098c7;
      color: #fff; }
    .nl-layouts-view-grid .nl-layout .nl-layout-content .unpublished-label {
      margin: 10px 0 0; }
  .nl-layouts-view-grid .nl-layout .nl-layout-info {
    padding: 10px 10px 15px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1; }
    .nl-layouts-view-grid .nl-layout .nl-layout-info .nl-layout-text {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1; }
    .nl-layouts-view-grid .nl-layout .nl-layout-info .nl-layout-name {
      margin: 0 0 0.5em; }
    .nl-layouts-view-grid .nl-layout .nl-layout-info .nl-layout-modified {
      font-size: 11px;
      margin: 1em 0 0;
      color: #999999; }
      .nl-layouts-view-grid .nl-layout .nl-layout-info .nl-layout-modified p {
        margin: 0; }
  .nl-layouts-view-grid .nl-layout .nl-layout-type {
    width: 40px;
    margin: 0 10px 0 0; }
    .nl-layouts-view-grid .nl-layout .nl-layout-type p {
      display: none; }
  .nl-layouts-view-grid .nl-layout .nl-layout-actions {
    background-color: #d4d4d4;
    height: 30px;
    position: relative;
    -webkit-transition: background .2s;
    -o-transition: background .2s;
    transition: background .2s;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
    .nl-layouts-view-grid .nl-layout .nl-layout-actions .nl-layout-data {
      padding: 0 10px; }
      .nl-layouts-view-grid .nl-layout .nl-layout-actions .nl-layout-data .meta-info i {
        color: inherit; }
    .nl-layouts-view-grid .nl-layout .nl-layout-actions .nl-dropdown {
      position: static; }
      .nl-layouts-view-grid .nl-layout .nl-layout-actions .nl-dropdown .nl-btn {
        padding: 0 10px;
        color: inherit; }
      .nl-layouts-view-grid .nl-layout .nl-layout-actions .nl-dropdown .nl-dropdown-menu {
        left: 0;
        right: 0; }

.nl-layouts-view-grid .nl-layouts-head {
  display: none !important; }

.nl-layouts-view-grid .layout-sorting-controls {
  float: left;
  padding: 0 1em 0 0; }
  .nl-layouts-view-grid .layout-sorting-controls .nl-select, .nl-layouts-view-grid .layout-sorting-controls .nl-rule .nl-rule-body form select:not([multiple]), .nl-rule .nl-rule-body form .nl-layouts-view-grid .layout-sorting-controls select:not([multiple]) {
    background-color: #fff; }
  .nl-layouts-view-grid .layout-sorting-controls label {
    margin: 0;
    vertical-align: middle; }
    .nl-layouts-view-grid .layout-sorting-controls label i {
      vertical-align: middle; }

@media screen and (max-width: 1100px) {
  .nl-layouts-view-grid .layout-sorting-controls {
    float: none;
    padding: 1em 0 0; } }

@media screen and (max-width: 1400px) {
  .nl-layouts-view-grid .nl-layout {
    width: 33.333333333333%; } }

@media screen and (max-width: 992px) {
  .nl-layouts-view-grid .nl-layout {
    width: 50%; } }

/* list view */
.nl-layouts-view-list .nl-layout-info {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  padding: 0 20px; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-text {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-name {
    padding-right: 20px;
    width: 30%; }
    .nl-layouts-view-list .nl-layout-info .nl-layout-name .nl-layout-export-checkbox {
      vertical-align: middle; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-description {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    padding-right: 20px; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-modified {
    width: 180px;
    text-align: right;
    padding-right: 20px; }

.nl-layouts-view-list .nl-layout-type {
  margin: 0 0 0 20px;
  width: 100px;
  -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
          order: 1; }

.nl-layouts-view-list .nl-layout-actions {
  -webkit-box-ordinal-group: 3;
      -ms-flex-order: 2;
          order: 2;
  width: 180px; }
  .nl-layouts-view-list .nl-layout-actions > * {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .nl-layouts-view-list .nl-layout-actions .nl-layout-data {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    padding: 0 20px; }

.nl-layouts-view-list .nl-layout .nl-layout-content {
  border: 1px solid #d9d9d9;
  margin: 0 0 -1px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  min-height: 60px; }
  .nl-layouts-view-list .nl-layout .nl-layout-content > * {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }

.nl-layouts-view-list .nl-layout .nl-layout-type {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 60px;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

.nl-layouts-view-list .nl-layout .nl-layout-icon {
  width: 32px;
  margin: 0 10px 0 0; }

.nl-layouts-view-list .nl-layout .nl-layout-actions {
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }
  .nl-layouts-view-list .nl-layout .nl-layout-actions .nl-layout-data .meta-info i {
    color: #999999; }
  .nl-layouts-view-list .nl-layout .nl-layout-actions .nl-dropdown .nl-btn {
    padding: 0 0.75em; }

.nl-layouts-view-list .nl-layout .nl-layout-description p {
  line-height: 1.5;
  max-height: 3em;
  overflow: hidden;
  display: block;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  width: 100%; }

.nl-layouts-view-list .nl-layout .nl-layout-modified {
  font-size: 11px; }

.nl-layouts-view-list .nl-layouts-head {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: 12px; }
  .nl-layouts-view-list .nl-layouts-head > * {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts {
    color: #404040;
    text-decoration: none;
    display: inline-block;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    padding: .5em 1em;
    margin: 0 -1em;
    white-space: nowrap; }
    .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts .sort-icon {
      display: none;
      position: relative;
      width: 6px;
      height: 13px;
      vertical-align: middle;
      margin: 0 0 0 .5em;
      pointer-events: none; }
      .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts .sort-icon::before {
        content: '';
        position: absolute;
        left: 50%;
        top: 50%;
        -webkit-transform: translate3d(-50%, -50%, 0);
                transform: translate3d(-50%, -50%, 0);
        border-left: 4px solid transparent;
        border-right: 4px solid transparent;
        border-bottom: 8px solid currentColor; }
    .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts.active {
      font-weight: 500;
      background: #e6e5e5; }
      .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts.active .sort-icon {
        display: inline-block; }
      .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts.active.sorting-asc .sort-icon::before {
        border-top: 8px solid currentColor;
        border-bottom: 0; }

.nl-layouts-view-list .layout-sorting-controls {
  display: none !important; }

@media screen and (max-width: 1200px) {
  .nl-layouts-view-list .nl-layout-type {
    margin: 0;
    width: 80px; }
    .nl-layouts-view-list .nl-layout-type p {
      display: none; }
  .nl-layouts-view-list .nl-layout-actions {
    width: 140px;
    padding: 0; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-name {
    width: 40%; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-modified {
    padding-right: 20px;
    width: 100px; }
  .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts {
    padding: .5em .75em;
    margin: 0 -.75em; } }

@media screen and (max-width: 992px) {
  .nl-layouts-view-list .nl-layout-info {
    padding: 0 0 0 20px; }
    .nl-layouts-view-list .nl-layout-info .nl-layout-name {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1;
      width: auto; }
    .nl-layouts-view-list .nl-layout-info .nl-layout-description {
      display: none; } }

.nl-shared-layouts .meta-info i {
  -webkit-transform: translate3d(0, 0.1em, 0) rotate(210deg);
          transform: translate3d(0, 0.1em, 0) rotate(210deg); }

.nl-layout-export-checkbox {
  display: none; }
  .nl-layout-export-checkbox input {
    position: absolute;
    pointer-events: all;
    opacity: 0;
    left: -9999em; }
    .nl-layout-export-checkbox input + label {
      position: relative;
      margin: 0;
      padding-left: 1em;
      cursor: pointer;
      display: block;
      min-height: 1em;
      font-size: 24px; }
      .nl-layout-export-checkbox input + label::before {
        position: absolute;
        font-size: 1em;
        line-height: 1;
        left: 0;
        top: 0;
        content: "check_box_outline_blank"; }
    .nl-layout-export-checkbox input:checked + label::before {
      content: "check_box";
      color: #0098c7; }
    .nl-layout-export-checkbox input:disabled + label {
      opacity: .2;
      cursor: not-allowed; }
  .layout-export .nl-layout-export-checkbox {
    display: inline-block; }

.nl-modal-cache .nl-modal {
  width: 600px; }
  .nl-modal-cache .nl-modal .nl-modal-body {
    padding: 0; }
    .nl-modal-cache .nl-modal .nl-modal-body .errors {
      padding: 15px;
      margin: 0; }

.nl-caches-table {
  width: 100%;
  border-collapse: collapse;
  margin-top: -1px; }
  .nl-caches-table th,
  .nl-caches-table td {
    padding: 15px 15px 14px 0;
    font-size: 12px;
    line-height: 1.5; }
    .nl-caches-table th:first-child,
    .nl-caches-table td:first-child {
      padding-left: 15px; }
  .nl-caches-table th {
    background: #f2f2f2;
    font-weight: 700;
    text-transform: uppercase;
    text-align: left; }
    .nl-caches-table th .nl-btn {
      text-transform: none;
      font-weight: 500; }
  .nl-caches-table td {
    color: #4d4c4c; }
    .nl-caches-table td p {
      margin: 0;
      line-height: inherit; }
    .nl-caches-table td.nl-caches-ttl {
      font-size: 14px; }
  .nl-caches-table .nl-caches-action {
    text-align: right; }
  .nl-caches-table tbody tr {
    border-bottom: 1px solid #d1d1d1; }
    .nl-caches-table tbody tr:last-child {
      border-bottom: none; }
  .nl-caches-table input[type="checkbox"] + label {
    overflow: hidden;
    text-indent: -999em; }
    .nl-caches-table input[type="checkbox"] + label::before {
      text-indent: 0; }
    .nl-modal-mask .nl-caches-table input[type="checkbox"] + label {
      padding: 0 !important;
      width: 2em;
      height: 2em;
      margin: 0;
      display: inline-block; }

.nl-caches-empty {
  padding: 15px;
  margin: 1em 0;
  text-align: center; }

/*!
 * Datetimepicker for Bootstrap 3
 * version : 4.17.47
 * https://github.com/Eonasdan/bootstrap-datetimepicker/
 */
.bootstrap-datetimepicker-widget {
  list-style: none; }

.bootstrap-datetimepicker-widget.dropdown-menu {
  display: block;
  margin: 2px 0;
  padding: 4px;
  width: 19em; }

@media (min-width: 768px) {
  .bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs {
    width: 38em; } }

@media (min-width: 992px) {
  .bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs {
    width: 38em; } }

@media (min-width: 1200px) {
  .bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs {
    width: 38em; } }

.bootstrap-datetimepicker-widget.dropdown-menu:before,
.bootstrap-datetimepicker-widget.dropdown-menu:after {
  content: '';
  display: inline-block;
  position: absolute; }

.bootstrap-datetimepicker-widget.dropdown-menu.bottom:before {
  border-left: 7px solid transparent;
  border-right: 7px solid transparent;
  border-bottom: 7px solid #ccc;
  border-bottom-color: rgba(0, 0, 0, 0.2);
  top: -7px;
  left: 7px; }

.bootstrap-datetimepicker-widget.dropdown-menu.bottom:after {
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-bottom: 6px solid white;
  top: -6px;
  left: 8px; }

.bootstrap-datetimepicker-widget.dropdown-menu.top:before {
  border-left: 7px solid transparent;
  border-right: 7px solid transparent;
  border-top: 7px solid #ccc;
  border-top-color: rgba(0, 0, 0, 0.2);
  bottom: -7px;
  left: 6px; }

.bootstrap-datetimepicker-widget.dropdown-menu.top:after {
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-top: 6px solid white;
  bottom: -6px;
  left: 7px; }

.bootstrap-datetimepicker-widget.dropdown-menu.pull-right:before {
  left: auto;
  right: 6px; }

.bootstrap-datetimepicker-widget.dropdown-menu.pull-right:after {
  left: auto;
  right: 7px; }

.bootstrap-datetimepicker-widget .list-unstyled {
  margin: 0; }

.bootstrap-datetimepicker-widget a[data-action] {
  padding: 6px 0; }

.bootstrap-datetimepicker-widget a[data-action]:active {
  -webkit-box-shadow: none;
          box-shadow: none; }

.bootstrap-datetimepicker-widget .timepicker-hour,
.bootstrap-datetimepicker-widget .timepicker-minute,
.bootstrap-datetimepicker-widget .timepicker-second {
  width: 54px;
  font-weight: bold;
  font-size: 1.2em;
  margin: 0; }

.bootstrap-datetimepicker-widget button[data-action] {
  padding: 6px; }

.bootstrap-datetimepicker-widget .btn[data-action="incrementHours"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Increment Hours"; }

.bootstrap-datetimepicker-widget .btn[data-action="incrementMinutes"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Increment Minutes"; }

.bootstrap-datetimepicker-widget .btn[data-action="decrementHours"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Decrement Hours"; }

.bootstrap-datetimepicker-widget .btn[data-action="decrementMinutes"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Decrement Minutes"; }

.bootstrap-datetimepicker-widget .btn[data-action="showHours"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Show Hours"; }

.bootstrap-datetimepicker-widget .btn[data-action="showMinutes"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Show Minutes"; }

.bootstrap-datetimepicker-widget .btn[data-action="togglePeriod"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Toggle AM/PM"; }

.bootstrap-datetimepicker-widget .btn[data-action="clear"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Clear the picker"; }

.bootstrap-datetimepicker-widget .btn[data-action="today"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Set the date to today"; }

.bootstrap-datetimepicker-widget .picker-switch {
  text-align: center; }

.bootstrap-datetimepicker-widget .picker-switch::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Toggle Date and Time Screens"; }

.bootstrap-datetimepicker-widget .picker-switch td {
  padding: 0;
  margin: 0;
  height: auto;
  width: auto;
  line-height: inherit; }

.bootstrap-datetimepicker-widget .picker-switch td span {
  line-height: 2.5;
  height: 2.5em;
  width: 100%; }

.bootstrap-datetimepicker-widget table {
  width: 100%;
  margin: 0; }

.bootstrap-datetimepicker-widget table td,
.bootstrap-datetimepicker-widget table th {
  text-align: center;
  border-radius: 4px; }

.bootstrap-datetimepicker-widget table th {
  height: 20px;
  line-height: 20px;
  width: 20px; }

.bootstrap-datetimepicker-widget table th.picker-switch {
  width: 145px; }

.bootstrap-datetimepicker-widget table th.disabled,
.bootstrap-datetimepicker-widget table th.disabled:hover {
  background: none;
  color: #777777;
  cursor: not-allowed; }

.bootstrap-datetimepicker-widget table th.prev::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Previous Month"; }

.bootstrap-datetimepicker-widget table th.next::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Next Month"; }

.bootstrap-datetimepicker-widget table thead tr:first-child th {
  cursor: pointer; }

.bootstrap-datetimepicker-widget table thead tr:first-child th:hover {
  background: #eeeeee; }

.bootstrap-datetimepicker-widget table td {
  height: 54px;
  line-height: 54px;
  width: 54px; }

.bootstrap-datetimepicker-widget table td.cw {
  font-size: .8em;
  height: 20px;
  line-height: 20px;
  color: #777777; }

.bootstrap-datetimepicker-widget table td.day {
  height: 20px;
  line-height: 20px;
  width: 20px; }

.bootstrap-datetimepicker-widget table td.day:hover,
.bootstrap-datetimepicker-widget table td.hour:hover,
.bootstrap-datetimepicker-widget table td.minute:hover,
.bootstrap-datetimepicker-widget table td.second:hover {
  background: #eeeeee;
  cursor: pointer; }

.bootstrap-datetimepicker-widget table td.old,
.bootstrap-datetimepicker-widget table td.new {
  color: #777777; }

.bootstrap-datetimepicker-widget table td.today {
  position: relative; }

.bootstrap-datetimepicker-widget table td.today:before {
  content: '';
  display: inline-block;
  border: solid transparent;
  border-width: 0 0 7px 7px;
  border-bottom-color: #337ab7;
  border-top-color: rgba(0, 0, 0, 0.2);
  position: absolute;
  bottom: 4px;
  right: 4px; }

.bootstrap-datetimepicker-widget table td.active,
.bootstrap-datetimepicker-widget table td.active:hover {
  background-color: #337ab7;
  color: #fff;
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25); }

.bootstrap-datetimepicker-widget table td.active.today:before {
  border-bottom-color: #fff; }

.bootstrap-datetimepicker-widget table td.disabled,
.bootstrap-datetimepicker-widget table td.disabled:hover {
  background: none;
  color: #777777;
  cursor: not-allowed; }

.bootstrap-datetimepicker-widget table td span {
  display: inline-block;
  width: 54px;
  height: 54px;
  line-height: 54px;
  margin: 2px 1.5px;
  cursor: pointer;
  border-radius: 4px; }

.bootstrap-datetimepicker-widget table td span:hover {
  background: #eeeeee; }

.bootstrap-datetimepicker-widget table td span.active {
  background-color: #337ab7;
  color: #fff;
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25); }

.bootstrap-datetimepicker-widget table td span.old {
  color: #777777; }

.bootstrap-datetimepicker-widget table td span.disabled,
.bootstrap-datetimepicker-widget table td span.disabled:hover {
  background: none;
  color: #777777;
  cursor: not-allowed; }

.bootstrap-datetimepicker-widget.usetwentyfour td.hour {
  height: 27px;
  line-height: 27px; }

.bootstrap-datetimepicker-widget.wider {
  width: 21em; }

.bootstrap-datetimepicker-widget .datepicker-decades .decade {
  line-height: 1.8em !important; }

.input-group.date .input-group-addon {
  cursor: pointer; }

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0; }

.material-icon-left::before {
  content: 'keyboard_arrow_left'; }

.material-icon-right::before {
  content: 'keyboard_arrow_right'; }

.material-icon-up::before {
  content: 'keyboard_arrow_up'; }

.material-icon-down::before {
  content: 'keyboard_arrow_down'; }

.material-icon-time::before {
  content: 'access_time'; }

.material-icon-calendar::before {
  content: 'today'; }

.material-icon-down::before {
  content: 'keyboard_arrow_down'; }

.material-icon-trash::before {
  content: 'delete'; }

.material-icon-close::before {
  content: 'close'; }

.material-icon-today::before {
  content: 'my_location'; }

.datetimepicker {
  padding-right: 2rem;
  position: relative; }
  .datetimepicker .input-group {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .datetimepicker .js-clear-input {
    opacity: 0;
    position: absolute;
    right: 0;
    width: 2rem;
    top: 50%;
    height: 2rem;
    margin-top: -1rem;
    border: 0;
    background: transparent;
    pointer-events: none;
    -webkit-transition: opacity .25s;
    -o-transition: opacity .25s;
    transition: opacity .25s;
    color: #d0021b; }
    .datetimepicker .js-clear-input i {
      vertical-align: middle; }
    .datetimepicker .js-clear-input:focus {
      outline: none; }
  .datetimepicker .datetime {
    position: relative;
    margin: 0 0 .5em; }
    .datetimepicker .datetime input[type="text"] {
      margin: 0;
      padding-right: 3em;
      cursor: pointer; }
    .datetimepicker .datetime .input-icon {
      position: absolute;
      right: 0;
      top: 50%;
      -webkit-transform: translateY(-50%);
          -ms-transform: translateY(-50%);
              transform: translateY(-50%);
      padding: .25em .5em;
      pointer-events: none; }
  .datetimepicker .datetime-formatted {
    position: absolute;
    left: -999em;
    top: -999em;
    width: 0px !important;
    height: 0px !important;
    visibility: hidden; }
  .datetimepicker.date-entered .js-clear-input {
    opacity: 1;
    pointer-events: initial; }
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUtc2Nzcy9zYXNzL25vcm1hbGl6ZS9fbm9ybWFsaXplLW1peGluLnNjc3MiLCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLXNjc3Mvc2Fzcy9ub3JtYWxpemUvX3ZlcnRpY2FsLXJoeXRobS5zY3NzIiwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS1zY3NzL3Nhc3Mvbm9ybWFsaXplL192YXJpYWJsZXMuc2NzcyIsIi4uLy4uLy4uLy50bXAvY3NzL3N0eWxlLmNzcyIsIi4uLy4uLy4uL1Jlc291cmNlcy9zYXNzL19mb250cy5zY3NzIiwiLi4vLi4vLi4vUmVzb3VyY2VzL3Nhc3MvX3ZhcmlhYmxlcy5zY3NzIiwiLi4vLi4vLi4vUmVzb3VyY2VzL3Nhc3MvX2dyaWQuc2NzcyIsIi4uLy4uLy4uL1Jlc291cmNlcy9zYXNzL19iYXNlLnNjc3MiLCIuLi8uLi8uLi9SZXNvdXJjZXMvc2Fzcy9fbW9kYWwuc2NzcyIsIi4uLy4uLy4uL1Jlc291cmNlcy9zYXNzL190b29sdGlwLnNjc3MiLCIuLi8uLi8uLi9SZXNvdXJjZXMvc2Fzcy9fZHJvcGRvd24uc2NzcyIsIi4uLy4uLy4uL1Jlc291cmNlcy9zYXNzL19lbGVtZW50cy5zY3NzIiwiLi4vLi4vLi4vUmVzb3VyY2VzL3Nhc3MvX3J1bGVzLnNjc3MiLCIuLi8uLi8uLi9SZXNvdXJjZXMvc2Fzcy9fbGF5b3V0cy5zY3NzIiwiLi4vLi4vLi4vUmVzb3VyY2VzL3Nhc3MvX2NhY2hlcy5zY3NzIiwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2VvbmFzZGFuLWJvb3RzdHJhcC1kYXRldGltZXBpY2tlci9idWlsZC9jc3MvYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLmNzcyIsIi4uLy4uLy4uL1Jlc291cmNlcy9zYXNzL19kYXRldGltZV9waWNrZXIuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQ0UsaUVBQWlFO0FBRy9EO29GQUNnRjtBQUVoRjs7OztPQUlHO0FBRUg7RUFjSSxrQkFBaUI7RUFBRSxPQUFPO0VBRTVCLDJCQUEwQjtFQUFFLE9BQU87RUFDbkMsK0JBQThCO0VBQUUsT0FBTyxFQUN4Qzs7QUFJRDtvRkFDZ0Y7QUFFaEY7O09BRUc7QUFFSDtFQUNFLFVBQVMsRUFDVjs7QUFFRDs7T0FFRztBQUVIOzs7Ozs7RUFNRSxlQUFjLEVBQ2Y7O0FBRUQ7OztPQUdHO0FBRUg7RUNoRkYsZUFYdUM7RURzR2pDLGlCQUFnQixFQUVuQjs7QUFvQ0Q7b0ZBQ2dGO0FBdUNoRjs7T0FFRztBQUVIOztFQUVFLGVBQWMsRUFDZjs7QUFFRDs7T0FFRztBQUVIO0VBS0ksaUJFekxZLEVGMkxmOztBQUVEOzs7T0FHRztBQUVIO0VBQ0UsZ0NBQXVCO1VBQXZCLHdCQUF1QjtFQUFFLE9BQU87RUFDaEMsVUFBUztFQUFFLE9BQU87RUFDbEIsa0JBQWlCO0VBQUUsT0FBTyxFQUMzQjs7QUFFRDs7T0FFRztBQUVIO0VBQ0UsZUFBYyxFQUNmOztBQWFEOzs7T0FHRztBQUVIO0VBQ0Usa0NBQWlDO0VBQUUsT0FBTztFQUMxQyxlQUFjO0VBQUUsT0FBTyxFQUN4Qjs7QUFJRDtvRkFDZ0Y7QUFFaEY7OztPQUdHO0FBRUg7RUFDRSw4QkFBNkI7RUFBRSxPQUFPO0VBQ3RDLHNDQUFxQztFQUFFLE9BQU8sRUFDL0M7O0FBSUQ7b0ZBQ2dGO0FBRWhGOzs7T0FHRztBQUVIO0VBQ0Usb0JBQW1CO0VBQUUsT0FBTztFQUM1QiwyQkFBMEI7RUFBRSxPQUFPO0VBQ25DLDBDQUFpQztVQUFqQyxrQ0FBaUM7RUFBRSxPQUFPLEVBQzNDOztBQUVEOztPQUVHO0FBRUg7O0VBRUUscUJBQW9CLEVBQ3JCOztBQUVEOztPQUVHO0FBUEg7O0VBV0Usb0JBQW1CLEVBQ3BCOztBQUVEOzs7T0FHRztBQUVIOzs7RUFHRSxrQ0FBaUM7RUFBRSxPQUFPO0VBQzFDLGVBQWM7RUFBRSxPQUFPLEVBQ3hCOztBQUVEOztPQUVHO0FBRUg7RUFDRSxtQkFBa0IsRUFDbkI7O0FBRUQ7O09BRUc7QUFFSDtFQUNFLHVCQUFzQjtFQUN0QixZQUFXLEVBQ1o7O0FBRUQ7O09BRUc7QUFFSDtFQUNFLGVBQWMsRUFDZjs7QUFFRDs7O09BR0c7QUFFSDs7RUFFRSxlQUFjO0VBQ2QsZUFBYztFQUNkLG1CQUFrQjtFQUNsQix5QkFBd0IsRUFDekI7O0FBRUQ7RUFDRSxnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLFlBQVcsRUFDWjs7QUFJRDtvRkFDZ0Y7QUFFaEY7O09BRUc7QUFFSDs7RUFFRSxzQkFBcUIsRUFDdEI7O0FBRUQ7O09BRUc7QUFFSDtFQUNFLGNBQWE7RUFDYixVQUFTLEVBQ1Y7O0FBRUQ7O09BRUc7QUFFSDtFQUNFLG1CQUFrQixFQUNuQjs7QUFFRDs7T0FFRztBQUVIO0VBQ0UsaUJBQWdCLEVBQ2pCOztBQUlEO29GQUNnRjtBQUVoRjs7O09BR0c7QUFFSDs7Ozs7RUFLRSx3QkFBZ0U7RUFBRyxPQUFPO0VBQzFFLGdCQUFlO0VBQUUsT0FBTztFQUt0QixrQkFBaUI7RUFBRSxPQUFPO0VBRTVCLFVBQVM7RUFBRSxPQUFPLEVBQ25COztBQUVEOztPQUVHO0FBRUg7RUFDRSxrQkFBaUIsRUFDbEI7O0FBRUQ7OztPQUdHO0FBRUg7O0VBQ1MsT0FBTztFQUNkLHFCQUFvQixFQUNyQjs7QUFFRDs7OztPQUlHO0FBRUg7Ozs7RUFJRSwyQkFBMEI7RUFBRSxPQUFPLEVBQ3BDOztBQUVEOzs7O0VBS0U7O1NBRUc7RUFPSDs7U0FFRyxFQUtKO0VBckJEOzs7O0lBVUksbUJBQWtCO0lBQ2xCLFdBQVUsRUFDWDtFQVpIOzs7O0lBbUJJLCtCQUE4QixFQUMvQjs7QUFHSDs7T0FFRztBQUVIO0VBQ0Usa0JBQWlCLEVBQ2xCOztBQUVEOzs7T0FHRztBR3JOUDs7RUh5Tk0sK0JBQXNCO1VBQXRCLHVCQUFzQjtFQUFFLE9BQU87RUFDL0IsV0FBVTtFQUFFLE9BQU8sRUFDcEI7O0FBRUQ7O09BRUc7QUdyTlA7O0VIeU5NLGFBQVksRUFDYjs7QUFFRDs7O09BR0c7QUd2TlA7RUgwTk0sOEJBQTZCO0VBQUUsT0FBTztFQUN0QyxxQkFBb0I7RUFBRSxPQUFPO0VBRTdCOztTQUVHLEVBTUo7RUc3Tkg7SUgyTk0seUJBQXdCLEVBQ3pCOztBQUdIOzs7T0FHRztBQUVIO0VBQ0UsMkJBQTBCO0VBQUUsT0FBTztFQUNuQyxjQUFhO0VBQUUsT0FBTyxFQUN2Qjs7QUFFRDs7T0FFRztBQUVIO0VBQ0UsK0JBQThCLEVBQy9COztBQUVEOzs7OztPQUtHO0FBRUg7RUFDRSwrQkFBc0I7VUFBdEIsdUJBQXNCO0VBQUUsT0FBTztFQUMvQixlQUFjO0VBQUUsT0FBTztFQUN2QixnQkFBZTtFQUFFLE9BQU87RUFDeEIsV0FBVTtFQUFFLE9BQU87RUFDbkIsZUFBYztFQUFFLE9BQU87RUFDdkIsb0JBQW1CO0VBQUUsT0FBTyxFQUM3Qjs7QUFFRDs7O09BR0c7QUFFSDtFQUNFLHNCQUFxQjtFQUFFLE9BQU87RUFDOUIseUJBQXdCO0VBQUUsT0FBTyxFQUNsQzs7QUFFRDs7T0FFRztBQUVIO0VBQ0UsZUFBYyxFQUNmOztBQUlEO29GQUNnRjtBQUVoRjs7T0FFRztBQUVIO0VBQ0UsZUFBYyxFQUNmOztBQUVEOztPQUVHO0FBRUg7RUFDRSxtQkFBa0IsRUFDbkI7O0FBRUQ7O09BRUc7QUFFSDtFQUNFLGVBQWMsRUFxQmY7O0FBSUQ7b0ZBQ2dGO0FBRWhGOztPQUVHO0FBRUg7RUFDRSxzQkFBcUIsRUFDdEI7O0FBRUQ7O09BRUc7QUFFSDtFQUNFLGNBQWEsRUFDZDs7QUFJRDtvRkFDZ0Y7QUFFaEY7O09BRUc7QUdsUVA7RUhxUU0sY0FBYSxFQUNkOztBSXZwQkwsWUFBWTtBQUNaO0VBQ0Usc0JBQXFCO0VBQ3JCLGlCQUFnQjtFQUNoQixtQkFBa0I7RUFDbEIsMkNBQTBDO0VBQzFDLGdXQU0rRCxFQUFBOztBQUdqRTtFQUNFLHNCQUFxQjtFQUNyQixpQkFBZ0I7RUFDaEIsbUJBQWtCO0VBQ2xCLCtDQUE4QztFQUM5QyxrWEFNbUUsRUFBQTs7QUFHckU7RUFDRSxzQkFBcUI7RUFDckIsaUJBQWdCO0VBQ2hCLG1CQUFrQjtFQUNsQiwyQ0FBMEM7RUFDMUMsaVdBTStELEVBQUE7O0FBR2pFO0VBQ0Usc0JBQXFCO0VBQ3JCLGlCQUFnQjtFQUNoQixtQkFBa0I7RUFDbEIsMkNBQTBDO0VBQzFDLCtWQU0rRCxFQUFBOztBQUdqRTtFQUNFLHNCQUFxQjtFQUNyQixpQkFBZ0I7RUFDaEIsbUJBQWtCO0VBQ2xCLDhDQUE2QztFQUM3Qyw0V0FNa0UsRUFBQTs7QUFHcEUsb0JBQW9CO0FBQ3BCO0VBQ0UsOEJBQTZCO0VBQzdCLG1CQUFrQjtFQUNsQixpQkFBZ0I7RUFDaEIsK0NBQThDO0VBQUUsZUFBZTtFQUMvRCxtUEFJaUUsRUFBQTs7QUFFbkU7RUFDRSw4QkFBNkI7RUFDN0Isb0JBQW1CO0VBQ25CLG1CQUFrQjtFQUNsQixnQkFBZTtFQUFHLHlCQUF5QjtFQUMzQyxzQkFBcUI7RUFDckIsZUFBYztFQUNkLHFCQUFvQjtFQUNwQix1QkFBc0I7RUFDdEIsa0JBQWlCO0VBQ2pCLG9CQUFtQjtFQUNuQixlQUFjO0VBRWQsc0NBQXNDO0VBQ3RDLG9DQUFtQztFQUNuQyxvQ0FBb0M7RUFDcEMsbUNBQWtDO0VBRWxDLDBCQUEwQjtFQUMxQixtQ0FBa0M7RUFFbEMscUJBQXFCO0VBQ3JCLHNDQUE2QjtVQUE3Qiw4QkFBNkIsRUFDOUI7O0FDbEZEO0VBQ0ksOEJBQTZCO0VBQzdCLG9CQUFtQjtFQUNuQixtQkFBa0I7RUFDbEIsZ0JBQWU7RUFDZixlQUFjO0VBQ2QsdUJBQXNCO0VBQ3RCLHFCQUFvQjtFQUNwQixzQkFBcUI7RUFDckIsb0JBQW1CO0VBQ25CLGtCQUFpQjtFQUNqQixlQUFjO0VBQ2Qsc0NBQXFDO0VBQ3JDLG9DQUFtQyxFQUN0Qzs7QUFTRDtFQUNJLHlDQUErQjtVQUEvQixpQ0FBK0IsRUFDbEM7O0FBQ0Q7RUFDSTtJQUNJLFdBQVMsRUFBQTtFQUViO0lBQ0ksV0FBUyxFQUFBLEVBQUE7O0FBTGpCO0VBQ0k7SUFDSSxXQUFTLEVBQUE7RUFFYjtJQUNJLFdBQVMsRUFBQSxFQUFBOztBQ3ZEakI7RUFDSSxxQkFBWTtFQUFaLHFCQUFZO0VBQVosY0FBWTtFQUNaLG9CQUFjO01BQWQsZ0JBQWM7RUFDZCxtQkRNUztFQ0xULG9CREtTLEVDcVBaO0VBOVBEO0lBTVEsbUJER0s7SUNGTCxvQkRFSztJQ0RMLG9CQUFhO1FBQWIsbUJBQWE7WUFBYixlQUFhO0lBQ2IsWUFBVyxFQUNkO0VBVkw7SUFZUSxvQkFBc0I7UUFBdEIsNEJBQXNCO1lBQXRCLHdCQUFzQjtJQUN0Qix5QkFBd0IsRUFDM0I7RUFkTDtJQWdCUSxvQkFBc0I7UUFBdEIsNEJBQXNCO1lBQXRCLHdCQUFzQjtJQUN0Qix5QkFBd0IsRUFDM0I7RUFsQkw7SUFvQlEsb0JBQVk7UUFBWixrQkFBWTtZQUFaLGNBQVk7SUFDWixlQUFjLEVBQ2pCO0VBdEJMO0lBd0JRLG9CQUFzQjtRQUF0Qiw0QkFBc0I7WUFBdEIsd0JBQXNCO0lBQ3RCLHlCQUF3QixFQUMzQjtFQTFCTDtJQTRCUSxvQkFBc0I7UUFBdEIsNEJBQXNCO1lBQXRCLHdCQUFzQjtJQUN0Qix5QkFBd0IsRUFDM0I7RUE5Qkw7SUFnQ1Esb0JBQVk7UUFBWixrQkFBWTtZQUFaLGNBQVk7SUFDWixlQUFjLEVBQ2pCO0VBbENMO0lBb0NRLG9CQUFzQjtRQUF0Qiw0QkFBc0I7WUFBdEIsd0JBQXNCO0lBQ3RCLHlCQUF3QixFQUMzQjtFQXRDTDtJQXdDUSxvQkFBc0I7UUFBdEIsNEJBQXNCO1lBQXRCLHdCQUFzQjtJQUN0Qix5QkFBd0IsRUFDM0I7RUExQ0w7SUE0Q1Esb0JBQVk7UUFBWixrQkFBWTtZQUFaLGNBQVk7SUFDWixlQUFjLEVBQ2pCO0VBOUNMO0lBZ0RRLG9CQUFzQjtRQUF0Qiw0QkFBc0I7WUFBdEIsd0JBQXNCO0lBQ3RCLHlCQUF3QixFQUMzQjtFQWxETDtJQW9EUSxvQkFBc0I7UUFBdEIsNEJBQXNCO1lBQXRCLHdCQUFzQjtJQUN0Qix5QkFBd0IsRUFDM0I7RUF0REw7SUF3RFEsb0JBQWE7UUFBYixtQkFBYTtZQUFiLGVBQWEsRUFDaEI7RUFDRDtJQTFESjtNQTREWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUE5RFQ7TUFnRVksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBbEVUO01Bb0VZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQXRFVDtNQXdFWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUExRVQ7TUE0RVksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBOUVUO01BZ0ZZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQWxGVDtNQW9GWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUF0RlQ7TUF3Rlksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBMUZUO01BNEZZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQTlGVDtNQWdHWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUFsR1Q7TUFvR1ksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBdEdUO01Bd0dZLG9CQUFhO1VBQWIsbUJBQWE7Y0FBYixlQUFhLEVBQ2hCLEVBQUE7RUFFTDtJQTNHSjtNQTZHWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUEvR1Q7TUFpSFksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBbkhUO01BcUhZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQXZIVDtNQXlIWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUEzSFQ7TUE2SFksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBL0hUO01BaUlZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQW5JVDtNQXFJWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUF2SVQ7TUF5SVksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBM0lUO01BNklZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQS9JVDtNQWlKWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUFuSlQ7TUFxSlksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBdkpUO01BeUpZLG9CQUFhO1VBQWIsbUJBQWE7Y0FBYixlQUFhLEVBQ2hCLEVBQUE7RUFFTDtJQTVKSjtNQThKWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUFoS1Q7TUFrS1ksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBcEtUO01Bc0tZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQXhLVDtNQTBLWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUE1S1Q7TUE4S1ksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBaExUO01Ba0xZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQXBMVDtNQXNMWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUF4TFQ7TUEwTFksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBNUxUO01BOExZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQWhNVDtNQWtNWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUFwTVQ7TUFzTVksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBeE1UO01BME1ZLG9CQUFhO1VBQWIsbUJBQWE7Y0FBYixlQUFhLEVBQ2hCLEVBQUE7RUFFTDtJQTdNSjtNQStNWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUFqTlQ7TUFtTlksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBck5UO01BdU5ZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQXpOVDtNQTJOWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUE3TlQ7TUErTlksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBak9UO01BbU9ZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQXJPVDtNQXVPWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUF6T1Q7TUEyT1ksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBN09UO01BK09ZLG9CQUFZO1VBQVosa0JBQVk7Y0FBWixjQUFZO01BQ1osZUFBYyxFQUNqQjtJQWpQVDtNQW1QWSxvQkFBc0I7VUFBdEIsNEJBQXNCO2NBQXRCLHdCQUFzQjtNQUN0Qix5QkFBd0IsRUFDM0I7SUFyUFQ7TUF1UFksb0JBQXNCO1VBQXRCLDRCQUFzQjtjQUF0Qix3QkFBc0I7TUFDdEIseUJBQXdCLEVBQzNCO0lBelBUO01BMlBZLG9CQUFhO1VBQWIsbUJBQWE7Y0FBYixlQUFhLEVBQ2hCLEVBQUE7O0FDNVBUOztFQUVJLGFBQVcsRUFDZDs7QUFFRDtFQUNJLG1CQUFpQixFQUNwQjs7QUFFRDtFQUNJLGdCQUFjO0VBQ2Qsa0JBQWdCLEVBT25CO0VBVEQ7SUFJUSxjQUFZLEVBQ2Y7RUFDRDtJQUNJLGNBQWEsRUFDaEI7O0FBR0w7RUFDSSxjQUFhO0VBQ2IsYUFBWTtFQUNaLGdCQUFjO0VBQ2Qsa0JBQWdCLEVBSW5CO0VBSEc7SUFDSSxlQUFjLEVBQ2pCOztBQUdMO0VBUUkscUJBQVk7RUFBWixxQkFBWTtFQUFaLGNBQVk7RUFDWiw2QkZyQ21CO0VFc0NuQixvREYxQjZDO0VFMkI3QyxnQkFBYztFQUNkLGlCQUFlO0VBQ2YsZUYxQ3FCO0VFMkNyQixpQkFBZTtFQUNmLG9DQUFtQztFQUNuQyxtQ0FBa0MsRUErSHJDO0VBL0lEO0lBRVEsK0JBQXFCO1lBQXJCLHVCQUFxQixFQUN4QjtFQUhMOztJQU1RLHdCQUFzQixFQUN6QjtFQVBMO0lBa0JRLGVGM0NxQixFRTRDeEI7RUFuQkw7SUFxQlEsbUJBQWlCO0lBQ2pCLGtCQUFnQixFQUNuQjtFQXZCTDtJQXlCUSxlQUFhO0lBQ2Isa0JBQWdCO0lBQ2hCLFdBQVM7SUFDVCxxQkFBWTtJQUFaLHFCQUFZO0lBQVosY0FBWSxFQUNmO0VBN0JMO0lBK0JRLFdBQVM7SUFDVCxvQkFBd0IsRUFnQzNCO0lBaEVMO01Ba0NZLGtCQUFxQixFQTZCeEI7TUEvRFQ7UUFvQ2dCLHNCQUFvQjtRQUNwQixXQUFTO1FBQ1QsVUFBUSxFQXdCWDtRQTlEYjtVQXdDb0IsNkNBQTJDLEVBcUI5QztVQTdEakI7WUEwQ3dCLDBDQUF3QyxFQUMzQztVQTNDckI7WUE2Q3dCLG1CQUFpQjtZQUNqQixlQUFhO1lBQ2IsbUJBQWlCO1lBQ2pCLGlCQUFlO1lBQ2Ysc0JBQW9CLEVBSXZCO1lBckRyQjtjQW1ENEIsZ0NBQThCLEVBQ2pDO1VBcER6QjtZQXdENEIsdUJGcEZMO1lFcUZLLGVGakZLO1lFa0ZMLGdCQUFjLEVBQ2pCO0VBM0R6QjtJQWtFUSxvQkFBTTtRQUFOLFlBQU07WUFBTixRQUFNO0lBQ04sY0FBbUI7SUFDbkIsbUJBQWlCLEVBQ3BCO0VBckVMO0lBeUVnQixzQkFBcUIsRUFDeEI7RUExRWI7O0lBNkVnQix5QkFBd0IsRUFDM0I7RUE5RWI7SUFpRlksY0FBYSxFQUNoQjtFQWxGVDtJQW9GWSx5QkFBd0IsRUFDM0I7RUFyRlQ7SUF5RlksbUJBQWlCLEVBNEJwQjtJQXJIVDtNQTRGZ0IsbUJBQWlCO01BQ2pCLFdBQVM7TUFDVCxTQUFPO01BQ1AsWUFBVTtNQUNWLGFBQVc7TUFDWCxrQkFBZ0I7TUFDaEIsZ0JBQWM7TUFDZCxnQkFBYztNQUNkLG1CQUFpQjtNQUNqQixxQ0FBMkI7TUFBM0IsZ0NBQTJCO01BQTNCLDZCQUEyQixFQU85QjtNQTVHYjtRQXVHb0IsaUJBQWUsRUFDbEI7TUF4R2pCO1FBMEdvQixnQ0FBOEIsRUFDakM7SUEzR2pCO01BOEdnQixtQkFBaUIsRUFDcEI7SUEvR2I7TUFrSG9CLGNBQWEsRUFDaEI7RUFuSGpCO0lBMkhvQixlQUFjLEVBRWpCO0VBN0hqQjtJQW1JWSxjQUFhO0lBQ2IsZ0JBQWU7SUFDZixjQUFhO0lBQ2Isb0JBQW1CO0lBQ25CLGdCQUFlLEVBQ2xCO0VBeElUO0lBMklnQixlQUFjLEVBQ2pCOztBQUtiO0VBQ0ksZ0JBQWMsRUFzQmpCO0VBdkJEO0lBR1EsZ0JBQWM7SUFDZCxpQkFBZTtJQUNmLFVBQVE7SUFDUixZQUFVLEVBQ2I7RUFQTDtJQVNRLGFBQVcsRUFJZDtJQWJMO01BV1ksc0JBQXFCLEVBQ3hCO0VBWlQ7SUFlUSxZQUFVO0lBQ1YsZUFBYTtJQUNiLFlBQVUsRUFDYjtFQWxCTDtJQW9CUSxZQUFVO0lBQ1YsZ0JBQWMsRUFDakI7O0FDck1MO0VBRUksZ0JBQWM7RUFDZCxjQUFZO0VBQ1osK0JBQTZCO0VBQzdCLE9BQUs7RUFDTCxRQUFNO0VBQ04sWUFBVTtFQUNWLGFBQVc7RUFDWCxpQkFBZTtFQUNmLGNBQVk7RUFDWixtQ0FBeUI7VUFBekIsMkJBQXlCLEVBMko1QjtFQXRLRDtJQWFRLCtCQUFxQjtZQUFyQix1QkFBcUIsRUFDeEI7RUFkTDtJQWdCUSxtQkFBaUI7SUFDakIsU0FBTztJQUNQLFVBQVE7SUFDUix5Q0FBK0I7UUFBL0IscUNBQStCO1lBQS9CLGlDQUErQjtJQUMvQixpQkFBZTtJQUNmLG1CQXBCa0I7SUFxQmxCLGFBQVc7SUFDWCxlQUFhO0lBQ2IsZ0JBQWM7SUFDZCxxQkFBWTtJQUFaLHFCQUFZO0lBQVosY0FBWTtJQUNaLDZCQUFxQjtJQUFyQiw4QkFBcUI7UUFBckIsMkJBQXFCO1lBQXJCLHVCQUFxQjtJQUNyQiw0Q0FBa0M7WUFBbEMsb0NBQWtDLEVBZ0RyQztJQTNFTDtNQTZCWSxtQkFBaUI7TUFDakIsWUFBVTtNQUNWLFVBQVE7TUFDUixlQUFhO01BQ2IsWUFBVTtNQUNWLGFBQVc7TUFDWCxXQUFTO01BQ1QsZ0JBQWM7TUFDZCxtQkFBaUI7TUFDakIsd0JBQXNCO01BQ3RCLHNCQUFvQixFQUt2QjtNQTVDVDtRQTBDZ0IsaUJBQWUsRUFDbEI7SUEzQ2I7TUE4Q1ksbUJBQWlCO01BQ2pCLGlCQUFlO01BQ2YsZ0JBQWUsRUFDbEI7SUFqRFQ7TUFtRFksNkJBQTJCO01BQzNCLG9CQUF3QjtNQUN4QixZQUFVO01BQ1YsMkJBQXVEO01BQ3ZELGdCQUFjO01BQ2QsaUJBQWUsRUFDbEI7SUF6RFQ7TUEyRFksY0FBYTtNQUNiLGtCQUFpQjtNQUNqQix5Q0FBK0IsRUFJbEM7TUFqRVQ7UUErRGdCLGtCQUFpQixFQUNwQjtJQWhFYjtNQW1FWSxzQkFBb0I7TUFDcEIsdUJBQXFCO01BQ3JCLFdBQVM7TUFDVCxnQkFBYyxFQUlqQjtNQTFFVDtRQXdFZ0IsV0FBUyxFQUNaO0VBekViO0lBOEVZLGVBQWE7SUFDYixvQkFBa0I7SUFDbEIsZ0JBQWM7SUFDZCxnQkFBYyxFQUNqQjtFQWxGVDs7Ozs7SUF3RlksZUFBYTtJQUNiLGdCQUFjO0lBQ2QsbUJBQWlCO0lBQ2pCLFlBQVU7SUFDVixrQkFBZ0I7SUFDaEIsZ0JBQWM7SUFDZCxhQUFXO0lBQ1gsMEJBQThCO0lBQzlCLGlCQUFnQixFQUluQjtJQXBHVDs7Ozs7TUFrR2dCLGVBQW1CLEVBQ3RCO0lBbkdiOzs7OztNQWtHZ0IsZUFBbUIsRUFDdEI7SUFuR2I7Ozs7O01Ba0dnQixlQUFtQixFQUN0QjtFQW5HYjtJQXNHWSxhQUFXO0lBQ1gsa0JBQWdCO0lBQ2hCLHFCQUFtQjtJQUNuQixpQkFBZSxFQUNsQjtFQTFHVDtJQTRHWSxtQkFBaUI7SUFDakIsY0FBWSxFQWdDZjtJQTdJVDtNQStHZ0IsZUFBYTtNQUNiLG1CQUFpQjtNQUNqQixxRUFBbUU7TUFDbkUsa0JBQWdCO01BQ2hCLGdCQUFjLEVBVWpCO01BN0hiO1FBc0hvQixnQkFBYztRQUNkLG1DQUFpQztRQUNqQyxtQkFBaUI7UUFDakIsUUFBTTtRQUNOLFdBQVM7UUFDVCxlQUFtQixFQUN0QjtJQTVIakI7TUFpSXdCLHFCQUFtQjtNQUNuQixlSDdISyxFRzhIUjtJQW5JckI7TUF5SXdCLG1DQUFpQyxFQUNwQztFQTFJckI7SUFnSlEsa0JBQWdCLEVBQ25CO0VBakpMO0lBbUpRLFlBQVU7SUFDVixnQkFBYztJQUNkLG1CQUFpQjtJQUNqQixTQUFPO0lBQ1AsVUFBUTtJQUNSLHlDQUErQjtRQUEvQixxQ0FBK0I7WUFBL0IsaUNBQStCO0lBQy9CLGNBQVksRUFJZjtFQTdKTDtJQWdLWSxlQUFhLEVBQ2hCO0VBaktUO0lBbUtZLGNBQVksRUFDZjs7QUFHVDtFQUNJO0lBQ0ksV0FBUyxFQUFBO0VBRWI7SUFDSSxXQUFTLEVBQUEsRUFBQTs7QUFMakI7RUFDSTtJQUNJLFdBQVMsRUFBQTtFQUViO0lBQ0ksV0FBUyxFQUFBLEVBQUE7O0FBR2pCO0VBQ0k7SUFDSSxpQkFBZTtJQUNmLFdBQVMsRUFBQTtFQUViO0lBQ0ksY0FBWTtJQUNaLFdBQVMsRUFBQSxFQUFBOztBQVBqQjtFQUNJO0lBQ0ksaUJBQWU7SUFDZixXQUFTLEVBQUE7RUFFYjtJQUNJLGNBQVk7SUFDWixXQUFTLEVBQUEsRUFBQTs7QUN0TGpCO0VBQ0ksY0FBWTtFQUNaLGdCQUFjO0VBQ2QsYUFBVztFQUNYLGNBQVksRUFvRmY7RUF4RkQ7SUFNUSxrQ0FBOEI7SUFDOUIsWUFBVTtJQUNWLG1CQUFpQjtJQUNqQixnQkFBYztJQUNkLG1CQUFpQjtJQUNqQixpQkFBZTtJQUNmLG1CQUFpQjtJQUNqQixtQkFBaUIsRUFRcEI7SUFyQkw7TUFlWSxZQUFVO01BQ1YsU0FBTztNQUNQLFVBQVE7TUFDUixtQkFBaUI7TUFDakIsZUFBYSxFQUNoQjtFQXBCVDtJQXlCWSxRQUFNO0lBQ04sb0NBQTBCO1FBQTFCLGdDQUEwQjtZQUExQiw0QkFBMEIsRUFPN0I7SUFqQ1Q7TUE0QmdCLFVBQVE7TUFDUixvQ0FBMEI7VUFBMUIsZ0NBQTBCO2NBQTFCLDRCQUEwQjtNQUMxQixtQ0FBaUM7TUFDakMsb0NBQWtDLEVBQ3JDO0VBaENiO0lBcUNZLGFBQVcsRUFLZDtJQTFDVDtNQXVDZ0IsVUFBUTtNQUNSLDRDQUF3QyxFQUMzQztFQXpDYjtJQThDWSxVQUFRLEVBS1g7SUFuRFQ7TUFnRGdCLGFBQVc7TUFDWCwrQ0FBMkMsRUFDOUM7RUFsRGI7SUF3RFksT0FBSztJQUNMLG9DQUEwQjtRQUExQixnQ0FBMEI7WUFBMUIsNEJBQTBCLEVBTzdCO0lBaEVUO01BMkRnQixTQUFPO01BQ1Asb0NBQTBCO1VBQTFCLGdDQUEwQjtjQUExQiw0QkFBMEI7TUFDMUIsa0NBQWdDO01BQ2hDLHFDQUFtQyxFQUN0QztFQS9EYjtJQW9FWSxZQUFVLEVBS2I7SUF6RVQ7TUFzRWdCLFdBQVM7TUFDVCw2Q0FBeUMsRUFDNUM7RUF4RWI7SUE2RVksV0FBUyxFQUtaO0lBbEZUO01BK0VnQixZQUFVO01BQ1YsOENBQTBDLEVBQzdDO0VBakZiO0lBcUZRLGVBQWE7SUFDYix5Q0FBK0I7WUFBL0IsaUNBQStCLEVBQ2xDOztBQUVMO0VBQ0k7SUFDSSxXQUFTLEVBQUE7RUFFYjtJQUNJLFdBQVMsRUFBQSxFQUFBOztBQUxqQjtFQUNJO0lBQ0ksV0FBUyxFQUFBO0VBRWI7SUFDSSxXQUFTLEVBQUEsRUFBQTs7QUM5RmpCO0VBQ0ksbUJBQWtCLEVBb0dyQjtFQXJHRDtJQUdRLGtCQUFpQixFQUtwQjtJQVJMO01BS1ksU0FBUTtNQUNSLFdBQVUsRUFDYjtFQVBUO0lBVVEsbUJBQWtCO0lBQ2xCLG1CQUFrQjtJQUNsQixhQUFZO0lBQ1osUUFBTztJQUNQLGlCQUFnQjtJQUNoQixvQkFBeUI7SUFDekIsWUFBVztJQUNYLGFBQVk7SUFDWixVQUFTO0lBQ1QsZ0JBQWU7SUFDZixzQkFBcUIsRUFtQ3hCO0lBdkRMO01Bc0JZLFdBQVU7TUFDVixVQUFTLEVBK0JaO01BdERUOzs7UUEyQmdCLGVBQWM7UUFDZCxnQkFBZTtRQUNmLGtCQUFpQjtRQUNqQixvQkFBbUI7UUFDbkIsc0JBQXFCO1FBQ3JCLDhDQUFxQztRQUFyQyx5Q0FBcUM7UUFBckMsc0NBQXFDO1FBQ3JDLFVBQVM7UUFDVCx3QkFBdUI7UUFDdkIsWUFBVztRQUNYLG9CQUFtQixFQUt0QjtRQXpDYjs7O1VBc0NvQixZQUFXO1VBQ1gsZ0JBQWUsRUFDbEI7TUF4Q2pCOztRQTRDZ0IsZUFBYyxFQVNqQjtRQXJEYjs7VUE4Q29CLHNDQUFnQyxFQUNuQztRQS9DakI7O1VBaURvQixlQUFjO1VBQ2QseUJBQXdCO1VBQ3hCLGVBQW9CLEVBQ3ZCO0VBcERqQjtJQTBEWSxvQkFBbUI7SUFDbkIsY0FBYTtJQUNiLFVBQVM7SUFDVCxhQUFZO0lBQ1osK0NBQXNDO1lBQXRDLHVDQUFzQyxFQUN6QztFQS9EVDtJQWtFZ0IsVUFBUztJQUNULGFBQVksRUFDZjtFQXBFYjs7SUF3RVksb0JBQXlCO0lBQ3pCLFlBQVcsRUFDZDtFQTFFVDtJQTZFUSxpQkFBZ0I7SUFDaEIsZUFBYztJQUNkLGdCQUFlLEVBSWxCO0lBbkZMO01BaUZZLG9CQUFtQixFQUN0QjtFQWxGVDtJQXFGUSxzQkFBcUI7SUFDckIsbUJBQWtCO0lBQ2xCLFdBQVU7SUFDVixPQUFNO0lBQ04sZ0JBQWU7SUFDZixjQUFhO0lBQ2IsZUFBYztJQUNkLGlCQUFnQjtJQUNoQixtQkFBa0I7SUFDbEIsZUFBYztJQUNkLDJDQUFrQztZQUFsQyxtQ0FBa0M7SUFDbEMsb0JBQW1CO0lBQ25CLFlBQVc7SUFDWCxxQkFBb0I7SUFDcEIsV0FBVSxFQUNiOztBQUdMO0VBQ0k7SUFDSSxXQUFVLEVBQUE7RUFFZDtJQUNJLFdBQVUsRUFBQSxFQUFBOztBQUxsQjtFQUNJO0lBQ0ksV0FBVSxFQUFBO0VBRWQ7SUFDSSxXQUFVLEVBQUEsRUFBQTs7QUg3RGI7RUk5Q0QsZ0JBQWM7RUFDZCxhQUFXO0VBQ1gsbUJBQWlCO0VBQ2pCLGVOSHFCO0VNSXJCLG1CQUFpQjtFQUNqQixhTktZO0VNSlosVUFBUTtFQUNSLGdCQUFjO0VBQ2QsZ0JBQWM7RUFDZCxzQkFBb0I7RUFDcEIsb0RORzZDO0VNRjdDLGdCQUFjO0VBQ2QsaUJBQWU7RUFDZix3QkFBc0I7RUFDdEIsb0tBQWlJO0VBQWpJLDRKQUFpSTtFQUFqSSx1SkFBaUk7RUFBakksb0pBQWlJO0VBQWpJLHdNQUFpSTtFQUNqSSxjQUFZO0VBQ1osZ0JBQWM7RUFDZCxzQkFBb0I7RUFDcEIsbUJBQWlCO0VBQ2pCLGtCTlRZO0VNVVosdUJBQXFCLEVBa0V4QjtFQXZGRDtJQXVCUSxxQ0FBOEI7SUFDOUIsc0JBQW9CLEVBQ3ZCO0VBekJMO0lBMkJRLHFDQUE4QixFQUNqQztFQTVCTDtJQThCUSxxQ0FBOEIsRUFDakM7RUEvQkw7SUFrQ1EsZU43QnFCLEVNOEJ4QjtFQW5DTDtJQXNDUSxtQkFBaUI7SUFDakIsWU41QlE7SU02QlIsZ0JON0JRO0lNOEJSLFdBQVM7SUFDVCxnQkFBYyxFQUtqQjtJQS9DTDtNQTRDWSxtQkFBaUI7TUFDakIsZUFBYSxFQUNoQjtFQTlDVDtJQWtEUSxvQk43Q3FCO0lNOENyQixZQUFVLEVBVWI7SUE3REw7TUFxRFksb0JBQWlDLEVBQ3BDO0lBdERUO01Bd0RZLG9CQUFpQyxFQUNwQztJQXpEVDtNQTJEWSxvQkFBaUMsRUFDcEM7RUE1RFQ7SUFnRVEsaUJBQWUsRUFVbEI7SUExRUw7TUFrRVkscUNBQThCLEVBQ2pDO0lBbkVUO01BcUVZLHFDQUE4QixFQUNqQztJQXRFVDtNQXdFWSxxQ0FBOEIsRUFDakM7RUF6RVQ7SUE2RVEsdUJBQXFCO0lBQ3JCLGdCQUFjLEVBQ2pCO0VBL0VMO0lBa0ZRLGFBQVcsRUFDZDtFQUNEO0lBQ0ksMkJBQTBCLEVBQzdCOztBQUdMO0VBQ0ksYUFBVztFQUNYLGVOMUZxQjtFTTJGckIsb0ROOUU2QztFTStFN0MsbUJBQWlCO0VBQ2pCLGFObkZZO0VNb0ZaLDJCQUF5QjtFQUN6QixnQk50RmdCO0VNdUZoQix5QkFBZTtLQUFmLHNCQUFlO1VBQWYsaUJBQWU7RUFDZixnQkFBYztFQUNkLDZCQUE4QjtFQUM5QixnSEFBMEY7RUFBMUYsMkdBQTBGO0VBQTFGLHdHQUEwRjtFQUMxRiw4SEFFc0Q7RUFGdEQsd0hBRXNEO0VBQ3RELGtFQUV5QjtFQUN6QixrQ0FFVztFQUNYLDZCQUE0QjtFQUM1QixnQkFBZTtFQUNmLHVCQUFzQixFQVF6QjtFQS9CRDtJQXlCUSwwQkFBOEIsRUFDakM7RUExQkw7SUE0QlEsY0FBWTtJQUNaLDBCQUE4QixFQUNqQzs7QUFHTDtFQUNJLGVBQWE7RUFDYixZQUFVO0VBQ1YsYUFBVztFQUNYLDZCQUEyQjtFQUMzQiw2QkFBMkI7RUFDM0IseUJBQXVCLEVBVTFCO0VBVEc7SUFDSSxXQUFTO0lBQ1QsVUFBUTtJQUNSLHFCQUFtQjtJQUNuQixtQkFBaUI7SUFDakIsMEJBQThCO0lBQzlCLHFCQUFtQjtJQUNuQixtQkFBaUIsRUFDcEI7O0FBR0w7RUFDRSxzQkFBb0I7RUFDcEIsbUJBQWlCO0VBQ2pCLGVBQWE7RUFDYixlQUFhO0VBQ2IsZ0JBQWM7RUFDZCx5QkFBdUI7RUFDdkIsa0NBQXdCO01BQXhCLDhCQUF3QjtVQUF4QiwwQkFBd0I7RUFDeEIsaUZBQXVFO1VBQXZFLHlFQUF1RSxFQXdCeEU7RUFoQ0Q7SUFXSSxZQUFVO0lBQ1YsZUFBYTtJQUNiLHlCQUF1QjtJQUN2QixtQkFBaUI7SUFDakIsbUJBQWlCO0lBQ2pCLFVBQVEsRUFDVDtFQWpCSDtJQW1CSSxXQUFTO0lBQ1QsWUFBVTtJQUNWLG9CQUFrQjtJQUNsQixnQkFBYztJQUNkLHNIQUE0RztZQUE1Ryw4R0FBNEcsRUFDN0c7RUF4Qkg7SUEwQkksZUFBYTtJQUNiLGdCQUFjO0lBQ2QsdUJBQXFCO0lBQ3JCLFVBQVE7SUFDUiw0SEFBa0g7WUFBbEgsb0hBQWtILEVBQ25IOztBQUVIO0VBQ0U7SUFDRSxnQkFBYztJQUNkLDJDQUF5QztJQUN6Qyw2QkFBbUI7WUFBbkIscUJBQW1CLEVBQUE7RUFFckI7SUFDRSxZQUFVO0lBQ1YsbUJBQWlCO0lBQ2pCLDZCQUFtQjtZQUFuQixxQkFBbUIsRUFBQTtFQUVyQjtJQUNFLFlBQVU7SUFDVixtQkFBaUI7SUFDakIsNkJBQW1CO1lBQW5CLHFCQUFtQixFQUFBLEVBQUE7O0FBZHZCO0VBQ0U7SUFDRSxnQkFBYztJQUNkLDJDQUF5QztJQUN6Qyw2QkFBbUI7WUFBbkIscUJBQW1CLEVBQUE7RUFFckI7SUFDRSxZQUFVO0lBQ1YsbUJBQWlCO0lBQ2pCLDZCQUFtQjtZQUFuQixxQkFBbUIsRUFBQTtFQUVyQjtJQUNFLFlBQVU7SUFDVixtQkFBaUI7SUFDakIsNkJBQW1CO1lBQW5CLHFCQUFtQixFQUFBLEVBQUE7O0FBR3ZCO0VBQ0U7SUFDRSxZQUFVO0lBQ1YsMkNBQXlDO0lBQ3pDLCtCQUFxQjtZQUFyQix1QkFBcUIsRUFBQTtFQUV2QjtJQUNFLGdCQUFjO0lBQ2QsbUJBQWlCO0lBQ2pCLDZCQUFtQjtZQUFuQixxQkFBbUIsRUFBQTtFQUVyQjtJQUNFLGdCQUFjO0lBQ2QsbUJBQWlCO0lBQ2pCLDZCQUFtQjtZQUFuQixxQkFBbUIsRUFBQSxFQUFBOztBQWR2QjtFQUNFO0lBQ0UsWUFBVTtJQUNWLDJDQUF5QztJQUN6QywrQkFBcUI7WUFBckIsdUJBQXFCLEVBQUE7RUFFdkI7SUFDRSxnQkFBYztJQUNkLG1CQUFpQjtJQUNqQiw2QkFBbUI7WUFBbkIscUJBQW1CLEVBQUE7RUFFckI7SUFDRSxnQkFBYztJQUNkLG1CQUFpQjtJQUNqQiw2QkFBbUI7WUFBbkIscUJBQW1CLEVBQUEsRUFBQTs7QUFHdkI7RUFDRTtJQUNFLGdCQUFjLEVBQUE7RUFFaEI7SUFDRSxlQUFhO0lBQ2Isd0VBQThEO1lBQTlELGdFQUE4RCxFQUFBO0VBRWhFO0lBQ0UsZUFBYSxFQUFBO0VBRWY7SUFDRSxlQUFhLEVBQUEsRUFBQTs7QUFaakI7RUFDRTtJQUNFLGdCQUFjLEVBQUE7RUFFaEI7SUFDRSxlQUFhO0lBQ2Isd0VBQThEO1lBQTlELGdFQUE4RCxFQUFBO0VBRWhFO0lBQ0UsZUFBYSxFQUFBO0VBRWY7SUFDRSxlQUFhLEVBQUEsRUFBQTs7QUFHakI7RUFDRTtJQUNFLGlCQUFlLEVBQUE7RUFFakI7SUFDRSxrQkFBZ0I7SUFDaEIsd0VBQThEO1lBQTlELGdFQUE4RCxFQUFBO0VBRWhFO0lBQ0UsWUFBVSxFQUFBO0VBRVo7SUFDRSxZQUFVLEVBQUEsRUFBQTs7QUFaZDtFQUNFO0lBQ0UsaUJBQWUsRUFBQTtFQUVqQjtJQUNFLGtCQUFnQjtJQUNoQix3RUFBOEQ7WUFBOUQsZ0VBQThELEVBQUE7RUFFaEU7SUFDRSxZQUFVLEVBQUE7RUFFWjtJQUNFLFlBQVUsRUFBQSxFQUFBOztBQUdkO0VBQ0U7SUFDRSxtQ0FBeUI7WUFBekIsMkJBQXlCLEVBQUE7RUFFM0I7SUFDRSxrQ0FBd0I7WUFBeEIsMEJBQXdCLEVBQUE7RUFFMUI7SUFDRSxrQ0FBd0I7WUFBeEIsMEJBQXdCLEVBQUE7RUFFMUI7SUFDRSxrQ0FBd0I7WUFBeEIsMEJBQXdCLEVBQUE7RUFFMUI7SUFDRSxrQ0FBd0I7WUFBeEIsMEJBQXdCLEVBQUEsRUFBQTs7QUFkNUI7RUFDRTtJQUNFLG1DQUF5QjtZQUF6QiwyQkFBeUIsRUFBQTtFQUUzQjtJQUNFLGtDQUF3QjtZQUF4QiwwQkFBd0IsRUFBQTtFQUUxQjtJQUNFLGtDQUF3QjtZQUF4QiwwQkFBd0IsRUFBQTtFQUUxQjtJQUNFLGtDQUF3QjtZQUF4QiwwQkFBd0IsRUFBQTtFQUUxQjtJQUNFLGtDQUF3QjtZQUF4QiwwQkFBd0IsRUFBQSxFQUFBOztBQzNQNUI7RUFDSSxtQkFBa0IsRUE2QnJCO0VBOUJEO0lBR1EsbUJBQWtCO0lBQ2xCLGNBQWEsRUF5QmhCO0lBN0JMO01BTVksZUFBYztNQUNkLG1CQUFrQjtNQUNsQixzQkFBcUI7TUFDckIsbUJBQWtCO01BQ2xCLGdCQUFlO01BQ2YsZUFBYztNQUNkLGlCQUFnQixFQVNuQjtNQXJCVDtRQWVnQixtQ0FBa0M7UUFDbEMsZ0JBQWU7UUFDZixtQkFBa0I7UUFDbEIsUUFBTztRQUNQLE9BQU0sRUFDVDtJQXBCYjtNQXlCb0IscUJBQW9CLEVBQ3ZCOztBQU1qQjtFQUNJLHFCQUFhO0VBQWIscUJBQWE7RUFBYixjQUFhO0VBQ2IsZ0JBQWU7RUFDZixlQUFvQjtFQUNwQixpQkFBZ0IsRUFTbkI7RUFiRDtJQU1RLG9CQUFPO1FBQVAsWUFBTztZQUFQLFFBQU87SUFDUCxxQkFBYTtJQUFiLHFCQUFhO0lBQWIsY0FBYTtJQUNiLG1CUC9CSyxFT2dDUjtFQVRMO0lBV1EsMEJBQXlCLEVBQzVCOztBQUdMO0VBQ0kscUJBQWE7RUFBYixxQkFBYTtFQUFiLGNBQWE7RUFDYiwwQkFBbUI7TUFBbkIsdUJBQW1CO1VBQW5CLG9CQUFtQjtFQUNuQix3QkFBMEIsRUF3RTdCO0VBM0VEO0lBS1EsWUFBVztJQUNYLHFCQUFhO0lBQWIscUJBQWE7SUFBYixjQUFhO0lBQ2IsZ0JBQWU7SUFDZixpQkFBZ0IsRUFDbkI7RUFUTDtJQVdRLFdBQVUsRUFDYjtFQVpMO0lBY1EsV0FBVTtJQUNWLDZCQUFzQjtJQUF0Qiw4QkFBc0I7UUFBdEIsMkJBQXNCO1lBQXRCLHVCQUFzQjtJQUN0Qix5QkFBdUI7UUFBdkIsc0JBQXVCO1lBQXZCLHdCQUF1QjtJQUN2Qix5QkFBdUI7UUFBdkIsc0JBQXVCO1lBQXZCLHdCQUF1QixFQUMxQjtFQWxCTDtJQW9CUSxvQkFBTztRQUFQLFlBQU87WUFBUCxRQUFPO0lBQ1AsNkJBQXNCO0lBQXRCLDhCQUFzQjtRQUF0QiwyQkFBc0I7WUFBdEIsdUJBQXNCO0lBQ3RCLHlCQUF1QjtRQUF2QixzQkFBdUI7WUFBdkIsd0JBQXVCO0lBQ3ZCLHlCQUF1QjtRQUF2QixzQkFBdUI7WUFBdkIsd0JBQXVCO0lBQ3ZCLGFBQVksRUFtQ2Y7SUEzREw7TUEwQlksaUJBQWdCO01BQ2hCLGtCQUFpQjtNQUNqQixpQkFBZ0I7TUFDaEIsZUFBYztNQUNkLHFCQUFvQjtNQUNwQixzQkFBcUI7TUFDckIsNkJBQTRCO01BQzVCLDJCQUF1QjtTQUF2Qix3QkFBdUI7TUFDdkIsWUFBVyxFQXdCZDtNQTFEVDtRQW9DZ0IsZUFBYyxFQWNqQjtRQWxEYjtVQXNDb0Isc0JBQXFCO1VBQ3JCLGtCQUFpQixFQVVwQjtVQWpEakI7WUF5Q3dCLGFBQVk7WUFDWixzQkFBcUIsRUFDeEI7VUEzQ3JCO1lBOEM0QixZQUFXLEVBQ2Q7TUEvQ3pCO1FBcURvQiwyQkFBdUI7V0FBdkIsd0JBQXVCO1FBQ3ZCLG9CQUFtQjtRQUNuQixpQkFBZ0IsRUFDbkI7RUF4RGpCO0lBNkRRLFVBQVMsRUFDWjtFQTlETDtJQWdFUSxVQUFTO0lBQ1QsV0FBVTtJQUNWLHNCQUFxQixFQVF4QjtJQTFFTDtNQW9FWSxVQUFTLEVBQ1o7SUFyRVQ7TUF1RVksaUJBQWdCO01BQ2hCLGVBQW9CLEVBQ3ZCOztBQUlUO0VBQ0kscUJBQWE7RUFBYixxQkFBYTtFQUFiLGNBQWE7RUFDYixpQkFBZ0I7RUFDaEIsZ0JBQWUsRUFxVmxCO0VBeFZEO0lBS1EsY0FBYSxFQUNoQjtFQU5MO0lBUVEseUJBQXVCO1FBQXZCLHNCQUF1QjtZQUF2Qix3QkFBdUI7SUFDdkIsa0JQNUhLLEVPNkhSO0VBVkw7SUFhWSxlQUFjLEVBRWpCO0VBZlQ7SUFrQmdCLDZCQUE0QixFQUMvQjtFQW5CYjtJQXdCWSxlQUFjLEVBRWpCO0VBMUJUO0lBNkJnQixvQkFBeUIsRUFDNUI7RUE5QmI7SUFtQ1EscUJBQWE7SUFBYixxQkFBYTtJQUFiLGNBQWE7SUFDYixnQkFBZTtJQUNmLG1CQUFxQjtJQUNyQixvQkFBeUI7SUFDekIsMEJBQXlCO0lBQ3pCLGVBQW9CLEVBT3ZCO0lBL0NMO01BMENZLGdCQUFlO01BQ2YsdUJBQXNCO01BRXRCLCtCQUE4QixFQUNqQztFQTlDVDtJQWlEUSxxQkFBYTtJQUFiLHFCQUFhO0lBQWIsY0FBYTtJQUNiLG1CUHJLSztJT3NLTCxlQUFvQixFQXdDdkI7SUEzRkw7TUFxRFksZ0JBQWU7TUFDZixpQkFBZ0I7TUFDaEIsZUFBb0IsRUFDdkI7SUF4RFQ7TUEwRFkscUJBQWE7TUFBYixxQkFBYTtNQUFiLGNBQWE7TUFDYiwyQkFBb0I7VUFBcEIsd0JBQW9CO2NBQXBCLHFCQUFvQixFQWF2QjtNQXhFVDtRQTZEZ0IscUJBQWE7UUFBYixxQkFBYTtRQUFiLGNBQWE7UUFDYiwwQkFBbUI7WUFBbkIsdUJBQW1CO2dCQUFuQixvQkFBbUI7UUFDbkIsYUFBWTtRQUNaLGdCQUFlO1FBQ2YsZ0JBQWU7UUFDZixpQkFBZ0I7UUFDaEIsaUJBQWdCLEVBSW5CO1FBdkViO1VBcUVvQixtQkFBa0IsRUFDckI7SUF0RWpCO01BMEVZLGlCQUFnQjtNQUNoQixlQUFvQjtNQUNwQixxQkFBYTtNQUFiLHFCQUFhO01BQWIsY0FBYTtNQUNiLDBCQUFtQjtVQUFuQix1QkFBbUI7Y0FBbkIsb0JBQW1CLEVBYXRCO01BMUZUO1FBK0VnQiwrQkFBb0M7UUFDcEMsNEJBQTJCO1FBQzNCLHFCQUFhO1FBQWIscUJBQWE7UUFBYixjQUFhO1FBQ2IsaUJBQWdCO1FBQ2hCLHNCQUFxQjtRQUNyQiwwQkFBbUI7WUFBbkIsdUJBQW1CO2dCQUFuQixvQkFBbUIsRUFLdEI7UUF6RmI7VUFzRm9CLGVBQW9CO1VBQ3BCLG9CQUFtQixFQUN0QjtFQXhGakI7SUE2RlEsY0FBYTtJQUNiLGNQak5LO0lPa05MLG9CQUF5QixFQTJINUI7SUExTkw7TUFpR1ksZ0JBQWU7TUFDZixpQkFBZ0I7TUFDaEIsMkJBQTBCLEVBQzdCO0lBcEdUO01Bc0dZLGtCQUFpQjtNQUNqQixtQkFBa0IsRUFDckI7SUF4R1Q7TUEwR1kscUJBQWE7TUFBYixxQkFBYTtNQUFiLGNBQWE7TUFDYixvQkFBZTtVQUFmLGdCQUFlO01BQ2YseUJBQXVCO1VBQXZCLHNCQUF1QjtjQUF2Qix3QkFBdUIsRUFxQjFCO01BaklUO1FBOEdnQixtQkFBa0I7UUFDbEIsMEJBQStCO1FBQy9CLGFBQVk7UUFDWixZQUFXO1FBQ1gsYUFBWSxFQU9mO1FBekhiO1VBb0hvQixlQUFjO1VBQ2QsWUFBVztVQUNYLFVBQVM7VUFDVCxxQkFBb0IsRUFDdkI7TUF4SGpCO1FBMkhnQixnQkFBZTtRQUNmLG9CQUFPO1lBQVAsWUFBTztnQkFBUCxRQUFPLEVBSVY7UUFoSWI7VUE4SG9CLHVCQUFzQixFQUN6QjtJQS9IakI7TUFvSVksdUJBQXlCO01BQ3pCLGNBQWE7TUFDYixlQUFjO01BQ2QsZ0JBQWUsRUFpRmxCO01BeE5UO1FBeUlnQixlQUFjO1FBQ2Qsa0JBQWlCO1FBQ2pCLGlCQUFnQjtRQUNoQixnQkFBZSxFQUNsQjtNQTdJYjtRQStJZ0IsZUFBYztRQUNkLFVBQVM7UUFDVCxjQUFhO1FBQ2IsZ0JBQWU7UUFDZixZQUFXO1FBQ1gsaUJBQWdCLEVBQ25CO01BckpiO1FBd0pnQix1QkFBc0I7UUFDdEIsZ0JBQWUsRUFDbEI7TUExSmI7UUE0SmdCLFlBQVc7UUFDWCxVQUFTO1FBQ1QsZ0JBQWUsRUFJbEI7UUFsS2I7VUFnS29CLGVBQWMsRUFDakI7TUFqS2pCO1FBb0tnQixrQkFBaUIsRUFDcEI7TUFyS2I7UUF1S2dCLGFBQVk7UUFDWixrQkFBaUIsRUFDcEI7TUF6S2I7UUE2S29CLGlCQUFnQjtRQUNoQixpQkFBZ0I7UUFDaEIsbUNBQXFDLEVBSXhDO1FBbkxqQjtVQWlMd0Isb0JBQXlCLEVBQzVCO01BbExyQjtRQXFMb0IsaUJBQWdCO1FBQ2hCLGVBQWM7UUFDZCxhUHZTRjtRT3dTRSxlQUFjO1FBQ2QsaUJBQWdCLEVBaUJuQjtRQTFNakI7VUEyTHdCLGtCUDNTTixFTzRTRztRQTVMckI7VUE4THdCLG9CUHJUSztVT3NUTCxZQUFXO1VBQ1gsa0JQaFROO1VPaVRNLDBEQUFpRDtVQUFqRCxxREFBaUQ7VUFBakQsa0RBQWlEO1VBQ2pELGlCQUFnQjtVQUNoQixnQkFBZSxFQUNsQjtRQXBNckI7VUF1TTRCLG9CQUFrQyxFQUNyQztNQXhNekI7UUE4TWdCLHNCQUFxQjtRQUNyQixvQkFBbUI7UUFDbkIsV0FBVSxFQUliO1FBcE5iO1VBa05vQixZQUFXLEVBQ2Q7TUFuTmpCO1FBc05nQix1QkFBc0IsRUFDekI7RUF2TmI7SUE0TlEsY0FBYTtJQUNiLDJDQUF5QztJQUN6QyxjUGpWSztJT2tWTCxpQkFBZ0I7SUFDaEIsa0JBQWlCLEVBQ3BCO0VBak9MO0lBbU9RLGNBQWE7SUFDYixlQUFvQjtJQUNwQixnQkFBZTtJQUNmLGVBQWM7SUFDZCxtQkFBa0IsRUFDckI7RUF4T0w7SUEwT1Esc0JBQXFCO0lBQ3JCLFVBQVM7SUFDVCxXQUFVLEVBMENiO0lBdFJMO01BOE9ZLDZCQUE0QjtNQUM1QixpQkFBZ0I7TUFDaEIsbUJBQWtCO01BQ2xCLDJDQUFxQyxFQW9CeEM7TUFyUVQ7UUFtUGdCLG1CQUFrQjtRQUNsQixXQUFVO1FBQ1YsU0FBUTtRQUNSLFlBQVc7UUFDWCxtQkFBa0I7UUFDbEIsYUFBWTtRQUNaLGtCQUFpQjtRQUNqQixlQUFjO1FBQ2QsZUFBd0I7UUFDeEIsb0NBQTJCO1FBQTNCLCtCQUEyQjtRQUEzQiw0QkFBMkIsRUFROUI7UUFwUWI7VUE4UG9CLDBCQUF5QjtVQUN6QixxQkFBb0IsRUFDdkI7UUFoUWpCO1VBa1FvQixnQ0FBOEIsRUFDakM7SUFuUWpCO01BdVFZLHNCQUFxQjtNQUNyQixpQkFBZ0IsRUFhbkI7TUFyUlQ7UUEwUWdCLGdCQUFlO1FBQ2YsNkNBQTJDLEVBUzlDO1FBcFJiO1VBOFFvQixnQkFBZTtVQUNmLDBCQUF5QjtVQUN6QixlUHZZUztVT3dZVCxxQkFBb0I7VUFDcEIsdUJBQXNCLEVBQ3pCO0VBblJqQjtJQXdSUSxnQkFBZTtJQUNmLDBCQUF5QjtJQUN6QixxQkFBb0I7SUFDcEIsc0JBQXFCO0lBQ3JCLGVQL1lLO0lPZ1pMLG9CUG5aeUI7SU9vWnpCLFlBQVcsRUFDZDtFQUVEO0lBRVEsYUFBWTtJQUNaLGFBQVk7SUFDWixxQkFBb0I7SUFDcEIsaURBQXVDO1lBQXZDLHlDQUF1QyxFQUsxQztJQVZMO01BT1ksaUJBQWdCO01BQ2hCLHlCQUF3QixFQUMzQjtFQVRUO0lBWVEsbUJBQWtCLEVBZXJCO0lBM0JMO01BY1ksWUFBVztNQUNYLG1CQUFrQjtNQUNsQiwwS0FBeUs7TUFDekssV0FBVTtNQUNWLFVBQVM7TUFDVCxTQUFRO01BQ1IsWUFBVztNQUNYLGFBQVksRUFDZjtJQXRCVDtNQXdCWSxZQUFXO01BQ1gscUJBQW9CLEVBQ3ZCO0VBMUJUOzs7OztJQWlDUSx5QkFBd0IsRUFDM0I7RUFsQ0w7SUFvQ1EscUJBQW9CLEVBSXZCO0lBeENMO01Bc0NZLHlCQUF3QixFQUMzQjtFQXZDVDtJQTBDUSxxQkFBYTtJQUFiLHFCQUFhO0lBQWIsY0FBYSxFQUNoQjtFQTVVVDtJQStVUSwrQkFBOEI7SUFDOUIsd0JBQXVCO0lBQ3ZCLHlCQUFnQjtZQUFoQixpQkFBZ0I7SUFDaEIsNEJQMWMwQjtJTzJjMUIsb0JBQW1CLEVBSXRCO0lBdlZMO01BcVZZLG1CQUFrQixFQUNyQjs7QUFJVDtFQUNJLG9CQUFPO01BQVAsWUFBTztVQUFQLFFBQU87RUFDUCxpQkFBZ0I7RUFDaEIsaURBQXVDO1VBQXZDLHlDQUF1QyxFQUMxQzs7QUxyZEQ7RUt3ZEksaUJBQWdCO0VBQ2hCLG1CQUFrQjtFQUNsQixRQUFPO0VBQ1AsU0FBUTtFQUNSLFdBQVU7RUFDVixhQUFxQjtFQUNyQiw0QkFBb0QsRUFxQnZEO0VBNUJEO0lBU1EsbUJBQWtCO0lBQ2xCLGdCQUFlO0lBQ2YsbUJBQWtCLEVBZ0JyQjtJQWZHO01BQ0ksY0FBYSxFQUNoQjtJQWRUO01BZ0JZLHVCQUFzQjtNQUN0QixrQkFBaUIsRUFDcEI7SUFsQlQ7TUFvQlksbUJBQWtCO01BQ2xCLFVBQVM7TUFDVCxTQUFRO01BQ1IsMkNBQWtDO2NBQWxDLG1DQUFrQztNQUNsQyxnQkFBZTtNQUNmLGlCQUFnQixFQUNuQjs7QUFJVDs7RUFFSSxjQUFhO0VBQ2IsbUJBQWtCO0VBQ2xCLG1CQUFrQjtFQUNsQixjQUFhLEVBT2hCO0VBWkQ7OztJQVFRLGFBQVk7SUFDWixzQkFBcUI7SUFDckIsZUFBYyxFQUNqQjs7QUFFTDtFQUVRLGNBQWEsRUFDaEI7O0FBSEw7RUFLUSxlQUFjLEVBQ2pCOztBQUdMO0VBQ0ksaUJBQWdCLEVBQ25COztBQ2xoQkQ7RUFDSSxjQUFZLEVBQ2Y7O0FBRUQ7RUFHUSxzQkFBb0I7RUFDcEIscUJBQW1CO0VBQ25CLGdCQUFjLEVBQ2pCOztBQUdMO0VBQ0ksMEJBQThCO0VBQzlCLGFBQVc7RUFDWCxjQUFZLEVBT2Y7RUFWRDtJQUtRLGVBQWE7SUFDYixZQUFVO0lBQ1YsVUFBUTtJQUNSLHFCQUFtQixFQUN0Qjs7QUFFTDtFQUdZLFVBQVM7RUFDVCx1QkFBc0IsRUFDekI7O0FBR1Q7RUFDSSxpQkFBZTtFQUNmLGVBQW1CO0VBQ25CLGdCQUFjLEVBc0JqQjtFQXpCRDtJQUtRLGVBQW1CO0lBQ25CLGdCQUFjO0lBQ2QsaUJBQWUsRUFLbEI7SUFaTDtNQVNZLGVBQWE7TUFDYixzQkFBb0IsRUFDdkI7RUFYVDtJQWNRLDBCQUF3QjtJQUN4QixzQkFBb0I7SUFDcEIsbUJBQWlCO0lBQ2pCLGNBQVk7SUFDWixxQkFBbUI7SUFDbkIsZUFBYTtJQUNiLFlBQVU7SUFDVixvQkFBMkI7SUFDM0IsbUJBQWlCO0lBQ2pCLGlCQUFlLEVBQ2xCOztBQUVMO0VBQ0ksMkJBQW1CO01BQW5CLHdCQUFtQjtVQUFuQixxQkFBbUIsRUE2QnRCO0VBOUJEO0lBR1EscUJBQVk7SUFBWixxQkFBWTtJQUFaLGNBQVk7SUFDWixvQkFBTTtRQUFOLFlBQU07WUFBTixRQUFNO0lBQ04sMEJBQWtCO1FBQWxCLHVCQUFrQjtZQUFsQixvQkFBa0IsRUFTckI7SUFkTDtNQU9ZLHFCQUFZO01BQVoscUJBQVk7TUFBWixjQUFZO01BQ1osMEJBQWtCO1VBQWxCLHVCQUFrQjtjQUFsQixvQkFBa0IsRUFLckI7TUFiVDtRQVVnQixnQkFBYztRQUNkLHFCQUFtQixFQUN0QjtFQVpiO0lBZ0JRLHFCQUFZO0lBQVoscUJBQVk7SUFBWixjQUFZO0lBQ1osMkJBQW1CO1FBQW5CLHdCQUFtQjtZQUFuQixxQkFBbUIsRUFZdEI7SUE3Qkw7TUFtQlkscUJBQVk7TUFBWixxQkFBWTtNQUFaLGNBQVk7TUFDWiwwQkFBa0I7VUFBbEIsdUJBQWtCO2NBQWxCLG9CQUFrQjtNQUNsQixhQUFXO01BQ1gsZ0JBQWM7TUFDZCxnQkFBYztNQUNkLGlCQUFlLEVBSWxCO01BNUJUO1FBMEJnQixtQkFBaUIsRUFDcEI7O0FBS2IsZUFBZTtBQUNmO0VBR1kscUJBQW1CLEVBQ3RCOztBQUpUO0VBT1EscUJBQVk7RUFBWixxQkFBWTtFQUFaLGNBQVk7RUFDWixvQkFBYztNQUFkLGdCQUFjO0VBQ2QsZ0JBQXNCLEVBQ3pCOztBQVZMO0VBWVEsV0FBUztFQUNULGdCQUFzQjtFQUN0QixxQkFBWTtFQUFaLHFCQUFZO0VBQVosY0FBWSxFQXNFZjtFQXBGTDtJQWdCWSxpREFBdUM7WUFBdkMseUNBQXVDO0lBQ3ZDLGlCQUFzQjtJQUN0QixxQkFBWTtJQUFaLHFCQUFZO0lBQVosY0FBWTtJQUNaLG9CQUFNO1FBQU4sWUFBTTtZQUFOLFFBQU07SUFDTiw2QkFBcUI7SUFBckIsOEJBQXFCO1FBQXJCLDJCQUFxQjtZQUFyQix1QkFBcUIsRUFVeEI7SUE5QlQ7TUF1Qm9CLDBCUjdHUztNUThHVCxZQUFVLEVBQ2I7SUF6QmpCO01BNEJnQixpQkFBZSxFQUNsQjtFQTdCYjtJQWdDWSx3QkFBc0I7SUFDdEIscUJBQVk7SUFBWixxQkFBWTtJQUFaLGNBQVk7SUFDWix5QkFBc0I7UUFBdEIsc0JBQXNCO1lBQXRCLHdCQUFzQjtJQUN0QixvQkFBTTtRQUFOLFlBQU07WUFBTixRQUFNLEVBZVQ7SUFsRFQ7TUFxQ2dCLG9CQUFNO1VBQU4sWUFBTTtjQUFOLFFBQU0sRUFDVDtJQXRDYjtNQXdDZ0Isa0JBQWdCLEVBQ25CO0lBekNiO01BMkNnQixnQkFBYztNQUNkLGdCQUFjO01BQ2QsZUFBbUIsRUFJdEI7TUFqRGI7UUErQ29CLFVBQVEsRUFDWDtFQWhEakI7SUFvRFksWUFBVTtJQUNWLG1CQUFpQixFQUlwQjtJQXpEVDtNQXVEZ0IsY0FBWSxFQUNmO0VBeERiO0lBMkRZLDBCQUE4QjtJQUM5QixhQUFXO0lBQ1gsbUJBQWlCO0lBQ2pCLG1DQUF5QjtJQUF6Qiw4QkFBeUI7SUFBekIsMkJBQXlCO0lBQ3pCLHFCQUFZO0lBQVoscUJBQVk7SUFBWixjQUFZLEVBb0JmO0lBbkZUO01BaUVnQixnQkFBYyxFQU1qQjtNQXZFYjtRQW9Fd0IsZUFBYSxFQUNoQjtJQXJFckI7TUF5RWdCLGlCQUFlLEVBU2xCO01BbEZiO1FBMkVvQixnQkFBYztRQUNkLGVBQWEsRUFDaEI7TUE3RWpCO1FBK0VvQixRQUFNO1FBQ04sU0FBTyxFQUNWOztBQWpGakI7RUFzRlEseUJBQXVCLEVBQzFCOztBQXZGTDtFQXlGUSxZQUFXO0VBQ1gsbUJBQWtCLEVBV3JCO0VBckdMO0lBNEZZLHVCQUFzQixFQUN6QjtFQTdGVDtJQStGWSxVQUFTO0lBQ1QsdUJBQXNCLEVBSXpCO0lBcEdUO01Ba0dnQix1QkFBc0IsRUFDekI7O0FBR1Q7RUF0R0o7SUF3R1ksWUFBVztJQUNYLGlCQUFnQixFQUNuQixFQUFBOztBQUVMO0VBNUdKO0lBOEdZLHdCQUFzQixFQUN6QixFQUFBOztBQUVMO0VBakhKO0lBbUhZLFdBQVMsRUFDWixFQUFBOztBQUlULGVBQWU7QUFDZjtFQUVRLG9CQUFNO01BQU4sWUFBTTtVQUFOLFFBQU07RUFDTixnQlI5TUssRVFvT1I7RUF6Qkw7SUFLWSxxQkFBWTtJQUFaLHFCQUFZO0lBQVosY0FBWTtJQUNaLDBCQUFrQjtRQUFsQix1QkFBa0I7WUFBbEIsb0JBQWtCO0lBQ2xCLG9CQUFNO1FBQU4sWUFBTTtZQUFOLFFBQU0sRUFDVDtFQVJUO0lBVVksb0JSck5DO0lRc05ELFdBQVMsRUFJWjtJQWZUO01BYWdCLHVCQUFzQixFQUN6QjtFQWRiO0lBaUJZLG9CQUFNO1FBQU4sWUFBTTtZQUFOLFFBQU07SUFDTixvQlI3TkMsRVE4Tko7RUFuQlQ7SUFxQlksYUFBVztJQUNYLGtCQUFnQjtJQUNoQixvQkFBa0IsRUFDckI7O0FBeEJUO0VBMkJRLG1CUnRPSztFUXVPTCxhQUFXO0VBQ1gsNkJBQU87TUFBUCxrQkFBTztVQUFQLFNBQU8sRUFDVjs7QUE5Qkw7RUFnQ1EsNkJBQU87TUFBUCxrQkFBTztVQUFQLFNBQU87RUFDUCxhQUFXLEVBUWQ7RUF6Q0w7SUFtQ1kscUJBQVk7SUFBWixxQkFBWTtJQUFaLGNBQVksRUFDZjtFQXBDVDtJQXNDWSxvQkFBTTtRQUFOLFlBQU07WUFBTixRQUFNO0lBQ04sZ0JSbFBDLEVRbVBKOztBQXhDVDtFQTZDWSwwQkFBOEI7RUFDOUIsaUJBQWU7RUFDZixxQkFBWTtFQUFaLHFCQUFZO0VBQVosY0FBWTtFQUNaLGlCQUFlLEVBS2xCO0VBckRUO0lBa0RnQixxQkFBWTtJQUFaLHFCQUFZO0lBQVosY0FBWTtJQUNaLDBCQUFrQjtRQUFsQix1QkFBa0I7WUFBbEIsb0JBQWtCLEVBQ3JCOztBQXBEYjtFQXVEWSxxQkFBWTtFQUFaLHFCQUFZO0VBQVosY0FBWTtFQUNaLGFBQVc7RUFDWCwwQkFBa0I7TUFBbEIsdUJBQWtCO1VBQWxCLG9CQUFrQixFQUNyQjs7QUExRFQ7RUE0RFksWUFBVTtFQUNWLG1CQUFpQixFQUNwQjs7QUE5RFQ7RUFnRVksMkJBQW1CO01BQW5CLHdCQUFtQjtVQUFuQixxQkFBbUIsRUFhdEI7RUE3RVQ7SUFvRXdCLGVBQW1CLEVBQ3RCO0VBckVyQjtJQTBFb0Isa0JBQWdCLEVBQ25COztBQTNFakI7RUFnRmdCLGlCQUFlO0VBQ2YsZ0JBQWM7RUFDZCxpQkFBZTtFQUNmLGVBQWE7RUFDYixxQkFBbUI7RUFDbkIsc0JBQW9CO0VBQ3BCLDZCQUEyQjtFQUMzQiwyQkFBc0I7S0FBdEIsd0JBQXNCO0VBQ3RCLFlBQVUsRUFDYjs7QUF6RmI7RUE0RlksZ0JBQWMsRUFDakI7O0FBN0ZUO0VBZ0dRLHFCQUFZO0VBQVoscUJBQVk7RUFBWixjQUFZO0VBQ1osZ0JBQWMsRUE2Q2pCO0VBOUlMO0lBbUdZLHFCQUFZO0lBQVoscUJBQVk7SUFBWixjQUFZLEVBQ2Y7RUFwR1Q7SUFzR1ksZVJ6VGE7SVEwVGIsc0JBQXFCO0lBQ3JCLHNCQUFxQjtJQUNyQiwwQkFBaUI7T0FBakIsdUJBQWlCO1FBQWpCLHNCQUFpQjtZQUFqQixrQkFBaUI7SUFDakIsa0JBQWlCO0lBQ2pCLGVBQWM7SUFDZCxvQkFBbUIsRUFpQ3RCO0lBN0lUO01BOEdnQixjQUFhO01BQ2IsbUJBQWtCO01BQ2xCLFdBQVU7TUFDVixhQUFZO01BQ1osdUJBQXNCO01BQ3RCLG1CQUFrQjtNQUNsQixxQkFBb0IsRUFXdkI7TUEvSGI7UUFzSG9CLFlBQVc7UUFDWCxtQkFBa0I7UUFDbEIsVUFBUztRQUNULFNBQVE7UUFDUiw4Q0FBcUM7Z0JBQXJDLHNDQUFxQztRQUNyQyxtQ0FBa0M7UUFDbEMsb0NBQW1DO1FBQ25DLHNDQUFxQyxFQUN4QztJQTlIakI7TUFpSWdCLGlCQUFnQjtNQUNoQixvQkFBeUIsRUFVNUI7TUE1SWI7UUFvSW9CLHNCQUFxQixFQUN4QjtNQXJJakI7UUF3SXdCLG1DQUFrQztRQUNsQyxpQkFBZ0IsRUFDbkI7O0FBMUlyQjtFQWdKUSx5QkFBd0IsRUFDM0I7O0FBQ0Q7RUFsSko7SUFvSlksVUFBUTtJQUNSLFlBQVUsRUFJYjtJQXpKVDtNQXVKZ0IsY0FBWSxFQUNmO0VBeEpiO0lBMkpZLGFBQVc7SUFDWCxXQUFTLEVBQ1o7RUE3SlQ7SUFnS2dCLFdBQVMsRUFDWjtFQWpLYjtJQW1LZ0Isb0JBQWtCO0lBQ2xCLGFBQVcsRUFDZDtFQXJLYjtJQXlLZ0Isb0JBQW1CO0lBQ25CLGlCQUFnQixFQUNuQixFQUFBOztBQUdUO0VBOUtKO0lBZ0xZLG9CUjNYQyxFUW1ZSjtJQXhMVDtNQWtMZ0Isb0JBQU07VUFBTixZQUFNO2NBQU4sUUFBTTtNQUNOLFlBQVUsRUFDYjtJQXBMYjtNQXNMZ0IsY0FBWSxFQUNmLEVBQUE7O0FBS2I7RUFHWSwyREFBaUQ7VUFBakQsbURBQWlELEVBQ3BEOztBQUlUO0VBQ0ksY0FBYSxFQTBDaEI7RUEzQ0Q7SUFHUSxtQkFBa0I7SUFDbEIsb0JBQW1CO0lBQ25CLFdBQVU7SUFDVixjQUFhLEVBaUNoQjtJQXZDTDtNQVFZLG1CQUFrQjtNQUNsQixVQUFTO01BQ1Qsa0JBQWlCO01BQ2pCLGdCQUFlO01BQ2YsZUFBYztNQUNkLGdCQUFlO01BQ2YsZ0JBQWUsRUFVbEI7TUF4QlQ7UUFpQmdCLG1CQUFrQjtRQUNsQixlQUFjO1FBQ2QsZUFBYztRQUNkLFFBQU87UUFDUCxPQUFNO1FBQ04sbUNBQWtDLEVBQ3JDO0lBdkJiO01BNEJvQixxQkFBb0I7TUFDcEIsZVJoYlMsRVFpYlo7SUE5QmpCO01BbUNnQixZQUFXO01BQ1gsb0JBQW1CLEVBQ3RCO0VBR1Q7SUFDSSxzQkFBcUIsRUFDeEI7O0FDbGNMO0VBRVEsYUFBVyxFQVFkO0VBVkw7SUFJWSxXQUFTLEVBS1o7SUFUVDtNQU1nQixjQUFZO01BQ1osVUFBUSxFQUNYOztBQUliO0VBQ0ksWUFBVTtFQUNWLDBCQUF3QjtFQUN4QixpQkFBZSxFQXlEbEI7RUE1REQ7O0lBTVEsMEJBQXdCO0lBQ3hCLGdCQUFjO0lBQ2QsaUJBQWUsRUFJbEI7SUFaTDs7TUFVWSxtQkFBaUIsRUFDcEI7RUFYVDtJQWNRLG9CQUF3QjtJQUN4QixpQkFBZTtJQUNmLDBCQUF3QjtJQUN4QixpQkFBZSxFQUtsQjtJQXRCTDtNQW1CWSxxQkFBbUI7TUFDbkIsaUJBQWUsRUFDbEI7RUFyQlQ7SUF3QlEsZUFBbUIsRUFRdEI7SUFoQ0w7TUEwQlksVUFBUTtNQUNSLHFCQUFtQixFQUN0QjtJQTVCVDtNQThCWSxnQkFBYyxFQUNqQjtFQS9CVDtJQWtDUSxrQkFBZ0IsRUFDbkI7RUFuQ0w7SUFzQ1ksaUNBQXFDLEVBSXhDO0lBMUNUO01Bd0NnQixvQkFBa0IsRUFDckI7RUF6Q2I7SUE4Q1ksaUJBQWU7SUFDZixvQkFBa0IsRUFXckI7SUExRFQ7TUFpRGdCLGVBQWEsRUFDaEI7SUFDRDtNQUNJLHNCQUFvQjtNQUNwQixXQUFTO01BQ1QsWUFBVTtNQUNWLFVBQVE7TUFDUixzQkFBb0IsRUFDdkI7O0FBSWI7RUFDSSxjQUFZO0VBQ1osY0FBWTtFQUNaLG1CQUFpQixFQUNwQjs7QUM3RUQ7Ozs7R0FJRztBQUNIO0VBQ0UsaUJBQWdCLEVBQ2pCOztBQUNEO0VBQ0UsZUFBYztFQUNkLGNBQWE7RUFDYixhQUFZO0VBQ1osWUFBVyxFQUNaOztBQUNEO0VBQ0U7SUFDRSxZQUFXLEVBQ1osRUFBQTs7QUFFSDtFQUpFO0lBTUUsWUFBVyxFQUNaLEVBQUE7O0FBRUg7RUFURTtJQVdFLFlBQVcsRUFDWixFQUFBOztBQUVIOztFQUVFLFlBQVc7RUFDWCxzQkFBcUI7RUFDckIsbUJBQWtCLEVBQ25COztBQUNEO0VBQ0UsbUNBQWtDO0VBQ2xDLG9DQUFtQztFQUNuQyw4QkFBNkI7RUFDN0Isd0NBQXVDO0VBQ3ZDLFVBQVM7RUFDVCxVQUFTLEVBQ1Y7O0FBQ0Q7RUFDRSxtQ0FBa0M7RUFDbEMsb0NBQW1DO0VBQ25DLCtCQUE4QjtFQUM5QixVQUFTO0VBQ1QsVUFBUyxFQUNWOztBQUNEO0VBQ0UsbUNBQWtDO0VBQ2xDLG9DQUFtQztFQUNuQywyQkFBMEI7RUFDMUIscUNBQW9DO0VBQ3BDLGFBQVk7RUFDWixVQUFTLEVBQ1Y7O0FBQ0Q7RUFDRSxtQ0FBa0M7RUFDbEMsb0NBQW1DO0VBQ25DLDRCQUEyQjtFQUMzQixhQUFZO0VBQ1osVUFBUyxFQUNWOztBQUNEO0VBQ0UsV0FBVTtFQUNWLFdBQVUsRUFDWDs7QUFDRDtFQUNFLFdBQVU7RUFDVixXQUFVLEVBQ1g7O0FBQ0Q7RUFDRSxVQUFTLEVBQ1Y7O0FBQ0Q7RUFDRSxlQUFjLEVBQ2Y7O0FBQ0Q7RUFDRSx5QkFBZ0I7VUFBaEIsaUJBQWdCLEVBQ2pCOztBQUNEOzs7RUFHRSxZQUFXO0VBQ1gsa0JBQWlCO0VBQ2pCLGlCQUFnQjtFQUNoQixVQUFTLEVBQ1Y7O0FBQ0Q7RUFDRSxhQUFZLEVBQ2I7O0FBQ0Q7RUFDRSxtQkFBa0I7RUFDbEIsV0FBVTtFQUNWLFlBQVc7RUFDWCxhQUFZO0VBQ1osV0FBVTtFQUNWLGlCQUFnQjtFQUNoQix1QkFBc0I7RUFDdEIsVUFBUztFQUNULDJCQUEwQixFQUMzQjs7QUFDRDtFQUNFLG1CQUFrQjtFQUNsQixXQUFVO0VBQ1YsWUFBVztFQUNYLGFBQVk7RUFDWixXQUFVO0VBQ1YsaUJBQWdCO0VBQ2hCLHVCQUFzQjtFQUN0QixVQUFTO0VBQ1QsNkJBQTRCLEVBQzdCOztBQUNEO0VBQ0UsbUJBQWtCO0VBQ2xCLFdBQVU7RUFDVixZQUFXO0VBQ1gsYUFBWTtFQUNaLFdBQVU7RUFDVixpQkFBZ0I7RUFDaEIsdUJBQXNCO0VBQ3RCLFVBQVM7RUFDVCwyQkFBMEIsRUFDM0I7O0FBQ0Q7RUFDRSxtQkFBa0I7RUFDbEIsV0FBVTtFQUNWLFlBQVc7RUFDWCxhQUFZO0VBQ1osV0FBVTtFQUNWLGlCQUFnQjtFQUNoQix1QkFBc0I7RUFDdEIsVUFBUztFQUNULDZCQUE0QixFQUM3Qjs7QUFDRDtFQUNFLG1CQUFrQjtFQUNsQixXQUFVO0VBQ1YsWUFBVztFQUNYLGFBQVk7RUFDWixXQUFVO0VBQ1YsaUJBQWdCO0VBQ2hCLHVCQUFzQjtFQUN0QixVQUFTO0VBQ1Qsc0JBQXFCLEVBQ3RCOztBQUNEO0VBQ0UsbUJBQWtCO0VBQ2xCLFdBQVU7RUFDVixZQUFXO0VBQ1gsYUFBWTtFQUNaLFdBQVU7RUFDVixpQkFBZ0I7RUFDaEIsdUJBQXNCO0VBQ3RCLFVBQVM7RUFDVCx3QkFBdUIsRUFDeEI7O0FBQ0Q7RUFDRSxtQkFBa0I7RUFDbEIsV0FBVTtFQUNWLFlBQVc7RUFDWCxhQUFZO0VBQ1osV0FBVTtFQUNWLGlCQUFnQjtFQUNoQix1QkFBc0I7RUFDdEIsVUFBUztFQUNULHdCQUF1QixFQUN4Qjs7QUFDRDtFQUNFLG1CQUFrQjtFQUNsQixXQUFVO0VBQ1YsWUFBVztFQUNYLGFBQVk7RUFDWixXQUFVO0VBQ1YsaUJBQWdCO0VBQ2hCLHVCQUFzQjtFQUN0QixVQUFTO0VBQ1QsNEJBQTJCLEVBQzVCOztBQUNEO0VBQ0UsbUJBQWtCO0VBQ2xCLFdBQVU7RUFDVixZQUFXO0VBQ1gsYUFBWTtFQUNaLFdBQVU7RUFDVixpQkFBZ0I7RUFDaEIsdUJBQXNCO0VBQ3RCLFVBQVM7RUFDVCxpQ0FBZ0MsRUFDakM7O0FBQ0Q7RUFDRSxtQkFBa0IsRUFDbkI7O0FBQ0Q7RUFDRSxtQkFBa0I7RUFDbEIsV0FBVTtFQUNWLFlBQVc7RUFDWCxhQUFZO0VBQ1osV0FBVTtFQUNWLGlCQUFnQjtFQUNoQix1QkFBc0I7RUFDdEIsVUFBUztFQUNULHdDQUF1QyxFQUN4Qzs7QUFDRDtFQUNFLFdBQVU7RUFDVixVQUFTO0VBQ1QsYUFBWTtFQUNaLFlBQVc7RUFDWCxxQkFBb0IsRUFDckI7O0FBQ0Q7RUFDRSxpQkFBZ0I7RUFDaEIsY0FBYTtFQUNiLFlBQVcsRUFDWjs7QUFDRDtFQUNFLFlBQVc7RUFDWCxVQUFTLEVBQ1Y7O0FBQ0Q7O0VBRUUsbUJBQWtCO0VBQ2xCLG1CQUFrQixFQUNuQjs7QUFDRDtFQUNFLGFBQVk7RUFDWixrQkFBaUI7RUFDakIsWUFBVyxFQUNaOztBQUNEO0VBQ0UsYUFBWSxFQUNiOztBQUNEOztFQUVFLGlCQUFnQjtFQUNoQixlQUFjO0VBQ2Qsb0JBQW1CLEVBQ3BCOztBQUNEO0VBQ0UsbUJBQWtCO0VBQ2xCLFdBQVU7RUFDVixZQUFXO0VBQ1gsYUFBWTtFQUNaLFdBQVU7RUFDVixpQkFBZ0I7RUFDaEIsdUJBQXNCO0VBQ3RCLFVBQVM7RUFDVCwwQkFBeUIsRUFDMUI7O0FBQ0Q7RUFDRSxtQkFBa0I7RUFDbEIsV0FBVTtFQUNWLFlBQVc7RUFDWCxhQUFZO0VBQ1osV0FBVTtFQUNWLGlCQUFnQjtFQUNoQix1QkFBc0I7RUFDdEIsVUFBUztFQUNULHNCQUFxQixFQUN0Qjs7QUFDRDtFQUNFLGdCQUFlLEVBQ2hCOztBQUNEO0VBQ0Usb0JBQW1CLEVBQ3BCOztBQUNEO0VBQ0UsYUFBWTtFQUNaLGtCQUFpQjtFQUNqQixZQUFXLEVBQ1o7O0FBQ0Q7RUFDRSxnQkFBZTtFQUNmLGFBQVk7RUFDWixrQkFBaUI7RUFDakIsZUFBYyxFQUNmOztBQUNEO0VBQ0UsYUFBWTtFQUNaLGtCQUFpQjtFQUNqQixZQUFXLEVBQ1o7O0FBQ0Q7Ozs7RUFJRSxvQkFBbUI7RUFDbkIsZ0JBQWUsRUFDaEI7O0FBQ0Q7O0VBRUUsZUFBYyxFQUNmOztBQUNEO0VBQ0UsbUJBQWtCLEVBQ25COztBQUNEO0VBQ0UsWUFBVztFQUNYLHNCQUFxQjtFQUNyQiwwQkFBeUI7RUFDekIsMEJBQXlCO0VBQ3pCLDZCQUE0QjtFQUM1QixxQ0FBb0M7RUFDcEMsbUJBQWtCO0VBQ2xCLFlBQVc7RUFDWCxXQUFVLEVBQ1g7O0FBQ0Q7O0VBRUUsMEJBQXlCO0VBQ3pCLFlBQVc7RUFDWCwwQ0FBeUMsRUFDMUM7O0FBQ0Q7RUFDRSwwQkFBeUIsRUFDMUI7O0FBQ0Q7O0VBRUUsaUJBQWdCO0VBQ2hCLGVBQWM7RUFDZCxvQkFBbUIsRUFDcEI7O0FBQ0Q7RUFDRSxzQkFBcUI7RUFDckIsWUFBVztFQUNYLGFBQVk7RUFDWixrQkFBaUI7RUFDakIsa0JBQWlCO0VBQ2pCLGdCQUFlO0VBQ2YsbUJBQWtCLEVBQ25COztBQUNEO0VBQ0Usb0JBQW1CLEVBQ3BCOztBQUNEO0VBQ0UsMEJBQXlCO0VBQ3pCLFlBQVc7RUFDWCwwQ0FBeUMsRUFDMUM7O0FBQ0Q7RUFDRSxlQUFjLEVBQ2Y7O0FBQ0Q7O0VBRUUsaUJBQWdCO0VBQ2hCLGVBQWM7RUFDZCxvQkFBbUIsRUFDcEI7O0FBQ0Q7RUFDRSxhQUFZO0VBQ1osa0JBQWlCLEVBQ2xCOztBQUNEO0VBQ0UsWUFBVyxFQUNaOztBQUNEO0VBQ0UsOEJBQTZCLEVBQzlCOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFDRSxtQkFBa0I7RUFDbEIsV0FBVTtFQUNWLFlBQVc7RUFDWCxhQUFZO0VBQ1osV0FBVTtFQUNWLGlCQUFnQjtFQUNoQix1QkFBc0I7RUFDdEIsVUFBUyxFQUNWOztBQ25YRDtFQUVJLCtCQUE4QixFQUMvQjs7QUFFSDtFQUVJLGdDQUErQixFQUNoQzs7QUFFSDtFQUVJLDZCQUE0QixFQUM3Qjs7QUFFSDtFQUVJLCtCQUE4QixFQUMvQjs7QUFFSDtFQUVJLHVCQUFzQixFQUN2Qjs7QUFFSDtFQUVJLGlCQUFnQixFQUNqQjs7QUFiSDtFQWlCSSwrQkFBOEIsRUFDL0I7O0FBRUg7RUFFSSxrQkFBaUIsRUFDbEI7O0FBRUg7RUFFSSxpQkFBZ0IsRUFDakI7O0FBRUg7RUFFSSx1QkFBc0IsRUFDdkI7O0FBR0g7RUFDRSxvQkFBbUI7RUFDbkIsbUJBQWtCLEVBdURuQjtFQXpERDtJQUlJLG9CQUFPO1FBQVAsWUFBTztZQUFQLFFBQU8sRUFDUjtFQUxIO0lBT0ksV0FBVTtJQUNWLG1CQUFrQjtJQUNsQixTQUFRO0lBQ1IsWUFBVztJQUNYLFNBQVE7SUFDUixhQUFZO0lBQ1osa0JBQWlCO0lBQ2pCLFVBQVM7SUFDVCx3QkFBdUI7SUFDdkIscUJBQW9CO0lBQ3BCLGlDQUF3QjtJQUF4Qiw0QkFBd0I7SUFBeEIseUJBQXdCO0lBQ3hCLGVBQWMsRUFPZjtJQXpCSDtNQW9CTSx1QkFBc0IsRUFDdkI7SUFyQkw7TUF1Qk0sY0FBYSxFQUNkO0VBeEJMO0lBMkJJLG1CQUFrQjtJQUNsQixpQkFBZ0IsRUFjakI7SUExQ0g7TUE4Qk0sVUFBUztNQUNULG1CQUFrQjtNQUNsQixnQkFBZSxFQUNoQjtJQWpDTDtNQW1DTSxtQkFBa0I7TUFDbEIsU0FBUTtNQUNSLFNBQVE7TUFDUixvQ0FBMkI7VUFBM0IsZ0NBQTJCO2NBQTNCLDRCQUEyQjtNQUMzQixvQkFBbUI7TUFDbkIscUJBQW9CLEVBQ3JCO0VBekNMO0lBNENJLG1CQUFrQjtJQUNsQixhQUFZO0lBQ1osWUFBVztJQUNYLHNCQUFxQjtJQUNyQix1QkFBc0I7SUFDdEIsbUJBQWtCLEVBQ25CO0VBbERIO0lBcURNLFdBQVU7SUFDVix3QkFBdUIsRUFDeEIiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSGVscGVyIGZ1bmN0aW9uIGZvciB0aGUgbm9ybWFsaXplKCkgbWl4aW4uXG5AZnVuY3Rpb24gX25vcm1hbGl6ZS1pbmNsdWRlKCRzZWN0aW9uLCAkZXhjbHVkZTogbnVsbCkge1xuICAvLyBJbml0aWFsaXplIHRoZSBnbG9iYWwgdmFyaWFibGVzIG5lZWRlZCBieSB0aGlzIGZ1bmN0aW9uLlxuICBAaWYgbm90IGdsb2JhbF92YXJpYWJsZV9leGlzdHMoX25vcm1hbGl6ZS1pbmNsdWRlKSB7XG4gICAgJF9ub3JtYWxpemUtaW5jbHVkZTogKCkgIWdsb2JhbDtcbiAgICAkX25vcm1hbGl6ZS1leGNsdWRlOiAoKSAhZ2xvYmFsO1xuICB9XG4gIC8vIFNpbmNlIHdlIGFyZSBnaXZlbiAyIHBhcmFtZXRlcnMsIHNldCB0aGUgZ2xvYmFsIHZhcmlhYmxlcy5cbiAgQGlmICRleGNsdWRlICE9IG51bGwge1xuICAgICRpbmNsdWRlOiAkc2VjdGlvbjtcbiAgICAvLyBTYXNzIGRvZXNuJ3QgaGF2ZSBzdGF0aWMgdmFyaWFibGVzLCBzbyB0aGUgd29yay1hcm91bmQgaXMgdG8gc3R1ZmYgdGhlc2VcbiAgICAvLyB2YWx1ZXMgaW50byBnbG9iYWwgdmFyaWFibGVzIHNvIHdlIGNhbiBhY2Nlc3MgdGhlbSBpbiBmdXR1cmUgY2FsbHMuXG4gICAgJF9ub3JtYWxpemUtaW5jbHVkZTogaWYodHlwZS1vZigkaW5jbHVkZSkgPT0gJ2xpc3QnLCAkaW5jbHVkZSwgKCRpbmNsdWRlKSkgIWdsb2JhbDtcbiAgICAkX25vcm1hbGl6ZS1leGNsdWRlOiBpZih0eXBlLW9mKCRleGNsdWRlKSA9PSAnbGlzdCcsICRleGNsdWRlLCAoJGV4Y2x1ZGUpKSAhZ2xvYmFsO1xuICAgIEByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8vIENoZWNrIGlmICRzZWN0aW9uIGlzIGluIHRoZSAkaW5jbHVkZSBsaXN0LlxuICBAaWYgaW5kZXgoJF9ub3JtYWxpemUtaW5jbHVkZSwgJHNlY3Rpb24pIHtcbiAgICBAcmV0dXJuIHRydWU7XG4gIH1cbiAgLy8gSWYgJGluY2x1ZGUgaXMgc2V0IHRvIChhbGwpLCBtYWtlIHN1cmUgJHNlY3Rpb24gaXMgbm90IGluICRleGNsdWRlLlxuICBAZWxzZSBpZiBub3QgaW5kZXgoJF9ub3JtYWxpemUtZXhjbHVkZSwgJHNlY3Rpb24pIGFuZCBpbmRleCgkX25vcm1hbGl6ZS1pbmNsdWRlLCBhbGwpIHtcbiAgICBAcmV0dXJuIHRydWU7XG4gIH1cbiAgQHJldHVybiBmYWxzZTtcbn1cblxuQG1peGluIG5vcm1hbGl6ZSgkaW5jbHVkZTogKGFsbCksICRleGNsdWRlOiAoKSkge1xuICAvLyBJbml0aWFsaXplIHRoZSBoZWxwZXIgZnVuY3Rpb24gYnkgcGFzc2luZyBpdCB0aGlzIG1peGluJ3MgcGFyYW1ldGVycy5cbiAgJGluaXQ6IF9ub3JtYWxpemUtaW5jbHVkZSgkaW5jbHVkZSwgJGV4Y2x1ZGUpO1xuXG4gIC8vIElmIHdlJ3ZlIGN1c3RvbWl6ZWQgYW55IGZvbnQgdmFyaWFibGVzLCB3ZSdsbCBuZWVkIGV4dHJhIHByb3BlcnRpZXMuXG4gIEBpZiAkYmFzZS1saW5lLWhlaWdodCAhPSAyNHB4XG4gICAgb3IgJGJhc2UtdW5pdCAhPSAnZW0nXG4gICAgb3IgJGgyLWZvbnQtc2l6ZSAhPSAxLjUgICogJGJhc2UtZm9udC1zaXplXG4gICAgb3IgJGgzLWZvbnQtc2l6ZSAhPSAxLjE3ICogJGJhc2UtZm9udC1zaXplXG4gICAgb3IgJGg0LWZvbnQtc2l6ZSAhPSAxICAgICogJGJhc2UtZm9udC1zaXplXG4gICAgb3IgJGg1LWZvbnQtc2l6ZSAhPSAwLjgzICogJGJhc2UtZm9udC1zaXplXG4gICAgb3IgJGg2LWZvbnQtc2l6ZSAhPSAwLjY3ICogJGJhc2UtZm9udC1zaXplIHtcbiAgICAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobTogdHJ1ZSAhZ2xvYmFsO1xuICB9XG5cbiAgLyohIG5vcm1hbGl6ZS1zY3NzIHwgTUlUL0dQTHYyIExpY2Vuc2UgfCBiaXQubHkvbm9ybWFsaXplLXNjc3MgKi9cblxuICBAaWYgX25vcm1hbGl6ZS1pbmNsdWRlKGRvY3VtZW50KSB7XG4gICAgLyogRG9jdW1lbnRcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW5cbiAgICAgKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gICAgICovXG5cbiAgICBodG1sIHtcbiAgICAgIEBpZiAkYmFzZS1mb250LWZhbWlseSB7XG4gICAgICAgIC8qIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS4gKi9cbiAgICAgICAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xuICAgICAgfVxuICAgICAgQGlmICRiYXNlLWZvbnQtc2l6ZSAhPSAxNnB4IG9yICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcbiAgICAgICAgLy8gQ29ycmVjdCBvbGQgYnJvd3NlciBidWcgdGhhdCBwcmV2ZW50ZWQgYWNjZXNzaWJsZSByZXNpemluZyBvZiB0ZXh0XG4gICAgICAgIC8vIHdoZW4gcm9vdCBmb250LXNpemUgaXMgc2V0IHdpdGggcHggb3IgZW0uXG4gICAgICAgIGZvbnQtc2l6ZTogKCRiYXNlLWZvbnQtc2l6ZSAvIDE2cHgpICogMTAwJTtcbiAgICAgIH1cbiAgICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAoJGJhc2UtbGluZS1oZWlnaHQgLyAkYmFzZS1mb250LXNpemUpICogMWVtOyAvKiAxICovXG4gICAgICB9XG4gICAgICBAZWxzZSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gICAgICB9XG4gICAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAgICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShzZWN0aW9ucykge1xuICAgIC8qIFNlY3Rpb25zXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICAgICAqL1xuXG4gICAgYm9keSB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAgICovXG5cbiAgICBhcnRpY2xlLFxuICAgIGFzaWRlLFxuICAgIGZvb3RlcixcbiAgICBoZWFkZXIsXG4gICAgbmF2LFxuICAgIHNlY3Rpb24ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICAgICAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gICAgICovXG5cbiAgICBoMSB7XG4gICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoMS1mb250LXNpemUpO1xuICAgICAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLWxpbmUtaGVpZ2h0KCRoMS1mb250LXNpemUpO1xuICAgICAgfVxuXG4gICAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgICAvKiBTZXQgMSB1bml0IG9mIHZlcnRpY2FsIHJoeXRobSBvbiB0aGUgdG9wIGFuZCBib3R0b20gbWFyZ2lucy4gKi9cbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoMS1mb250LXNpemUpO1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBtYXJnaW46IDAuNjdlbSAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICBoMiB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGgyLWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDItZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoMi1mb250LXNpemUpO1xuICAgICAgfVxuXG4gICAgICBoMyB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGgzLWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDMtZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoMy1mb250LXNpemUpO1xuICAgICAgfVxuXG4gICAgICBoNCB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGg0LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDQtZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoNC1mb250LXNpemUpO1xuICAgICAgfVxuXG4gICAgICBoNSB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGg1LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDUtZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoNS1mb250LXNpemUpO1xuICAgICAgfVxuXG4gICAgICBoNiB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGg2LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDYtZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoNi1mb250LXNpemUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoZ3JvdXBpbmcpIHtcbiAgICAvKiBHcm91cGluZyBjb250ZW50XG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAvKipcbiAgICAgICAqIFNldCAxIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtIG9uIHRoZSB0b3AgYW5kIGJvdHRvbSBtYXJnaW4uXG4gICAgICAgKi9cblxuICAgICAgYmxvY2txdW90ZSB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAkaW5kZW50LWFtb3VudCk7XG4gICAgICB9XG5cbiAgICAgIGRsLFxuICAgICAgb2wsXG4gICAgICB1bCB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwKTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBUdXJuIG9mZiBtYXJnaW5zIG9uIG5lc3RlZCBsaXN0cy5cbiAgICAgICAqL1xuXG4gICAgICBvbCxcbiAgICAgIHVsIHtcbiAgICAgICAgb2wsXG4gICAgICAgIHVsIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZGQge1xuICAgICAgICBtYXJnaW46IDAgMCAwICRpbmRlbnQtYW1vdW50O1xuICAgICAgfVxuXG4gICAgICBvbCxcbiAgICAgIHVsIHtcbiAgICAgICAgcGFkZGluZzogMCAwIDAgJGluZGVudC1hbW91bnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAgICovXG5cbiAgICBmaWdjYXB0aW9uLFxuICAgIGZpZ3VyZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gICAgICovXG5cbiAgICBmaWd1cmUge1xuICAgICAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxICRpbmRlbnQtYW1vdW50KTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgbWFyZ2luOiAxZW0gJGluZGVudC1hbW91bnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAgICAgKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAgICAgKi9cblxuICAgIGhyIHtcbiAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gICAgICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gICAgICovXG5cbiAgICBtYWluIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAvKipcbiAgICAgICAqIFNldCAxIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtIG9uIHRoZSB0b3AgYW5kIGJvdHRvbSBtYXJnaW4uXG4gICAgICAgKi9cblxuICAgICAgcCxcbiAgICAgIHByZSB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cblxuICAgIHByZSB7XG4gICAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgICAgIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShsaW5rcykge1xuICAgIC8qIExpbmtzXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAgICAgKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gICAgICovXG5cbiAgICBhIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXG4gICAgICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZSh0ZXh0KSB7XG4gICAgLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLyoqXG4gICAgICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny0gYW5kIEZpcmVmb3ggMzktLlxuICAgICAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gICAgICovXG5cbiAgICBhYmJyW3RpdGxlXSB7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gICAgICovXG5cbiAgICBiLFxuICAgIHN0cm9uZyB7XG4gICAgICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICAgICAqL1xuXG4gICAgYixcbiAgICBzdHJvbmcge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cblxuICAgIGNvZGUsXG4gICAga2JkLFxuICAgIHNhbXAge1xuICAgICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gICAgICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAgICAgKi9cblxuICAgIGRmbiB7XG4gICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICAgICAqL1xuXG4gICAgbWFyayB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICAgICAgY29sb3I6ICMwMDA7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5cbiAgICBzbWFsbCB7XG4gICAgICBmb250LXNpemU6IDgwJTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAgICAgKiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5cbiAgICBzdWIsXG4gICAgc3VwIHtcbiAgICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgICAgbGluZS1oZWlnaHQ6IDA7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgfVxuXG4gICAgc3ViIHtcbiAgICAgIGJvdHRvbTogLTAuMjVlbTtcbiAgICB9XG5cbiAgICBzdXAge1xuICAgICAgdG9wOiAtMC41ZW07XG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShlbWJlZGRlZCkge1xuICAgIC8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAgICovXG5cbiAgICBhdWRpbyxcbiAgICB2aWRlbyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAgICAgKi9cblxuICAgIGF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgaGVpZ2h0OiAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICAgICAqL1xuXG4gICAgaW1nIHtcbiAgICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAgICAgKi9cblxuICAgIHN2Zzpub3QoOnJvb3QpIHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShmb3Jtcykge1xuICAgIC8qIEZvcm1zXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gICAgICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICAgICAqL1xuXG4gICAgYnV0dG9uLFxuICAgIGlucHV0LFxuICAgIG9wdGdyb3VwLFxuICAgIHNlbGVjdCxcbiAgICB0ZXh0YXJlYSB7XG4gICAgICBmb250LWZhbWlseTogaWYoJGJhc2UtZm9udC1mYW1pbHksICRiYXNlLWZvbnQtZmFtaWx5LCBzYW5zLXNlcmlmKTsgLyogMSAqL1xuICAgICAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gICAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgICBsaW5lLWhlaWdodDogKCRiYXNlLWxpbmUtaGVpZ2h0IC8gJGJhc2UtZm9udC1zaXplKSAqIDFlbTsgLyogMSAqL1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAgICAgfVxuICAgICAgbWFyZ2luOiAwOyAvKiAyICovXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gICAgICovXG5cbiAgICBidXR0b24ge1xuICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gICAgICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICAgICAqL1xuXG4gICAgYnV0dG9uLFxuICAgIHNlbGVjdCB7IC8qIDEgKi9cbiAgICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICAgICAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICAgICAqL1xuXG4gICAgYnV0dG9uLFxuICAgIGh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cbiAgICBbdHlwZT1cInJlc2V0XCJdLFxuICAgIFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gICAgfVxuXG4gICAgYnV0dG9uLFxuICAgIFt0eXBlPVwiYnV0dG9uXCJdLFxuICAgIFt0eXBlPVwicmVzZXRcIl0sXG4gICAgW3R5cGU9XCJzdWJtaXRcIl0ge1xuXG4gICAgICAvKipcbiAgICAgICAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gICAgICAgKi9cblxuICAgICAgJjo6LW1vei1mb2N1cy1pbm5lciB7XG4gICAgICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gICAgICAgKi9cblxuICAgICAgJjotbW96LWZvY3VzcmluZyB7XG4gICAgICAgIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICAgICAqL1xuXG4gICAgaW5wdXQge1xuICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICAgICAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gICAgICovXG5cbiAgICBbdHlwZT1cImNoZWNrYm94XCJdLFxuICAgIFt0eXBlPVwicmFkaW9cIl0ge1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICAgICAgcGFkZGluZzogMDsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAgICAgKi9cblxuICAgIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuICAgIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAgICAgKi9cblxuICAgIFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gICAgICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xuXG4gICAgICAvKipcbiAgICAgICAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gICAgICAgKi9cblxuICAgICAgJjo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbiAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAgICAgKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gICAgICovXG5cbiAgICA6Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gICAgICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICAgICAqL1xuXG4gICAgZmllbGRzZXQge1xuICAgICAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICAgICAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAgICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cblxuICAgIGxlZ2VuZCB7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gICAgICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICAgICAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gICAgICBwYWRkaW5nOiAwOyAvKiAzICovXG4gICAgICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICAgICAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gICAgICovXG5cbiAgICBwcm9ncmVzcyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gICAgICovXG5cbiAgICB0ZXh0YXJlYSB7XG4gICAgICBvdmVyZmxvdzogYXV0bztcbiAgICB9XG4gIH1cblxuICBAaWYgX25vcm1hbGl6ZS1pbmNsdWRlKGludGVyYWN0aXZlKSB7XG4gICAgLyogSW50ZXJhY3RpdmVcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLypcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gICAgICovXG5cbiAgICBkZXRhaWxzIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqL1xuXG4gICAgc3VtbWFyeSB7XG4gICAgICBkaXNwbGF5OiBsaXN0LWl0ZW07XG4gICAgfVxuXG4gICAgLypcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAgICAgKi9cblxuICAgIG1lbnUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIC8qXG4gICAgICAgICAqIDEuIFNldCAxIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtIG9uIHRoZSB0b3AgYW5kIGJvdHRvbSBtYXJnaW4uXG4gICAgICAgICAqIDIuIFNldCBjb25zaXN0ZW50IHNwYWNlIGZvciB0aGUgbGlzdCBzdHlsZSBpbWFnZS5cbiAgICAgICAgICovXG5cbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDApOyAvKiAxICovXG4gICAgICAgIHBhZGRpbmc6IDAgMCAwICRpbmRlbnQtYW1vdW50OyAvKiAyICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFR1cm4gb2ZmIG1hcmdpbnMgb24gbmVzdGVkIGxpc3RzLlxuICAgICAgICAgKi9cblxuICAgICAgICBtZW51ICYsXG4gICAgICAgIG9sICYsXG4gICAgICAgIHVsICYge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoc2NyaXB0aW5nKSB7XG4gICAgLyogU2NyaXB0aW5nXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuXG4gICAgY2FudmFzIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAgICAgKi9cblxuICAgIHRlbXBsYXRlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShoaWRkZW4pIHtcbiAgICAvKiBIaWRkZW5cbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICAgICAqL1xuXG4gICAgW2hpZGRlbl0ge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbn1cbiIsIi8vXG4vLyBWZXJ0aWNhbCBSaHl0aG1cbi8vXG4vLyBUaGlzIGlzIHRoZSBtaW5pbWFsIGFtb3VudCBvZiBjb2RlIG5lZWRlZCB0byBjcmVhdGUgdmVydGljYWwgcmh5dGhtIGluIG91clxuLy8gQ1NTLiBJZiB5b3UgYXJlIGxvb2tpbmcgZm9yIGEgcm9idXN0IHNvbHV0aW9uLCBsb29rIGF0IHRoZSBleGNlbGxlbnQgVHlwZXlcbi8vIGxpYnJhcnkuIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2pwdGFyYW50by90eXBleVxuXG5AZnVuY3Rpb24gbm9ybWFsaXplLXJoeXRobSgkdmFsdWUsICRyZWxhdGl2ZS10bzogJGJhc2UtZm9udC1zaXplLCAkdW5pdDogJGJhc2UtdW5pdCkge1xuICBAaWYgdW5pdCgkdmFsdWUpICE9IHB4IHtcbiAgICBAZXJyb3IgXCJUaGUgbm9ybWFsaXplIHZlcnRpY2FsLXJoeXRobSBtb2R1bGUgb25seSBzdXBwb3J0cyBweCBpbnB1dHMuIFRoZSB0eXBleSBsaWJyYXJ5IGlzIGJldHRlci5cIjtcbiAgfVxuICBAaWYgJHVuaXQgPT0gcmVtIHtcbiAgICBAcmV0dXJuICgkdmFsdWUgLyAkYmFzZS1mb250LXNpemUpICogMXJlbTtcbiAgfVxuICBAZWxzZSBpZiAkdW5pdCA9PSBlbSB7XG4gICAgQHJldHVybiAoJHZhbHVlIC8gJHJlbGF0aXZlLXRvKSAqIDFlbTtcbiAgfVxuICBAZWxzZSB7IC8vICR1bml0ID09IHB4XG4gICAgQHJldHVybiAkdmFsdWU7XG4gIH1cbn1cblxuQG1peGluIG5vcm1hbGl6ZS1mb250LXNpemUoJHZhbHVlLCAkcmVsYXRpdmUtdG86ICRiYXNlLWZvbnQtc2l6ZSkge1xuICBAaWYgdW5pdCgkdmFsdWUpICE9ICdweCcge1xuICAgIEBlcnJvciBcIm5vcm1hbGl6ZS1mb250LXNpemUoKSBvbmx5IHN1cHBvcnRzIHB4IGlucHV0cy4gVGhlIHR5cGV5IGxpYnJhcnkgaXMgYmV0dGVyLlwiO1xuICB9XG4gIGZvbnQtc2l6ZTogbm9ybWFsaXplLXJoeXRobSgkdmFsdWUsICRyZWxhdGl2ZS10byk7XG59XG5cbkBtaXhpbiBub3JtYWxpemUtcmh5dGhtKCRwcm9wZXJ0eSwgJHZhbHVlcywgJHJlbGF0aXZlLXRvOiAkYmFzZS1mb250LXNpemUpIHtcbiAgJHZhbHVlLWxpc3Q6ICR2YWx1ZXM7XG4gICRzZXA6IHNwYWNlO1xuICBAaWYgdHlwZS1vZigkdmFsdWVzKSA9PSAnbGlzdCcge1xuICAgICRzZXA6IGxpc3Qtc2VwYXJhdG9yKCR2YWx1ZXMpO1xuICB9XG4gIEBlbHNlIHtcbiAgICAkdmFsdWUtbGlzdDogYXBwZW5kKCgpLCAkdmFsdWVzKTtcbiAgfVxuXG4gICRub3JtYWxpemVkLXZhbHVlczogKCk7XG4gIEBlYWNoICR2YWx1ZSBpbiAkdmFsdWUtbGlzdCB7XG4gICAgQGlmIHVuaXRsZXNzKCR2YWx1ZSkgYW5kICR2YWx1ZSAhPSAwIHtcbiAgICAgICR2YWx1ZTogJHZhbHVlICogbm9ybWFsaXplLXJoeXRobSgkYmFzZS1saW5lLWhlaWdodCwgJHJlbGF0aXZlLXRvKTtcbiAgICB9XG4gICAgJG5vcm1hbGl6ZWQtdmFsdWVzOiBhcHBlbmQoJG5vcm1hbGl6ZWQtdmFsdWVzLCAkdmFsdWUsICRzZXApO1xuICB9XG4gICN7JHByb3BlcnR5fTogJG5vcm1hbGl6ZWQtdmFsdWVzO1xufVxuXG5AbWl4aW4gbm9ybWFsaXplLW1hcmdpbigkdmFsdWVzLCAkcmVsYXRpdmUtdG86ICRiYXNlLWZvbnQtc2l6ZSkge1xuICBAaW5jbHVkZSBub3JtYWxpemUtcmh5dGhtKG1hcmdpbiwgJHZhbHVlcywgJHJlbGF0aXZlLXRvKTtcbn1cblxuQG1peGluIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkZm9udC1zaXplLCAkbWluLWxpbmUtcGFkZGluZzogMnB4KSB7XG4gICRsaW5lczogY2VpbCgkZm9udC1zaXplIC8gJGJhc2UtbGluZS1oZWlnaHQpO1xuICAvLyBJZiBsaW5lcyBhcmUgY3JhbXBlZCBpbmNsdWRlIHNvbWUgZXh0cmEgbGVhZGluZy5cbiAgQGlmICgkbGluZXMgKiAkYmFzZS1saW5lLWhlaWdodCAtICRmb250LXNpemUpIDwgKCRtaW4tbGluZS1wYWRkaW5nICogMikge1xuICAgICRsaW5lczogJGxpbmVzICsgMTtcbiAgfVxuICBAaW5jbHVkZSBub3JtYWxpemUtcmh5dGhtKGxpbmUtaGVpZ2h0LCAkbGluZXMsICRmb250LXNpemUpO1xufVxuIiwiLy9cbi8vIFZhcmlhYmxlc1xuLy9cbi8vIFlvdSBjYW4gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgdmFsdWVzIGJ5IHNldHRpbmcgdGhlIHZhcmlhYmxlcyBpbiB5b3VyIFNhc3Ncbi8vIGJlZm9yZSBpbXBvcnRpbmcgdGhlIG5vcm1hbGl6ZS1zY3NzIGxpYnJhcnkuXG5cbi8vIFRoZSBmb250IHNpemUgc2V0IG9uIHRoZSByb290IGh0bWwgZWxlbWVudC5cbiRiYXNlLWZvbnQtc2l6ZTogMTZweCAhZGVmYXVsdDtcblxuLy8gVGhlIGJhc2UgbGluZSBoZWlnaHQgZGV0ZXJtaW5lcyB0aGUgYmFzaWMgdW5pdCBvZiB2ZXJ0aWNhbCByaHl0aG0uXG4kYmFzZS1saW5lLWhlaWdodDogMjRweCAhZGVmYXVsdDtcblxuLy8gVGhlIGxlbmd0aCB1bml0IGluIHdoaWNoIHRvIG91dHB1dCB2ZXJ0aWNhbCByaHl0aG0gdmFsdWVzLlxuLy8gU3VwcG9ydGVkIHZhbHVlczogcHgsIGVtLCByZW0uXG4kYmFzZS11bml0OiAnZW0nICFkZWZhdWx0O1xuXG4vLyBUaGUgZGVmYXVsdCBmb250IGZhbWlseS5cbiRiYXNlLWZvbnQtZmFtaWx5OiBudWxsICFkZWZhdWx0O1xuXG4vLyBUaGUgZm9udCBzaXplcyBmb3IgaDEtaDYuXG4kaDEtZm9udC1zaXplOiAyICAgICogJGJhc2UtZm9udC1zaXplICFkZWZhdWx0O1xuJGgyLWZvbnQtc2l6ZTogMS41ICAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRoMy1mb250LXNpemU6IDEuMTcgKiAkYmFzZS1mb250LXNpemUgIWRlZmF1bHQ7XG4kaDQtZm9udC1zaXplOiAxICAgICogJGJhc2UtZm9udC1zaXplICFkZWZhdWx0O1xuJGg1LWZvbnQtc2l6ZTogMC44MyAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRoNi1mb250LXNpemU6IDAuNjcgKiAkYmFzZS1mb250LXNpemUgIWRlZmF1bHQ7XG5cbi8vIFRoZSBhbW91bnQgbGlzdHMgYW5kIGJsb2NrcXVvdGVzIGFyZSBpbmRlbnRlZC5cbiRpbmRlbnQtYW1vdW50OiA0MHB4ICFkZWZhdWx0O1xuXG4vLyBUaGUgZm9sbG93aW5nIHZhcmlhYmxlIGNvbnRyb2xzIHdoZXRoZXIgbm9ybWFsaXplLXNjc3Mgd2lsbCBvdXRwdXRcbi8vIGZvbnQtc2l6ZXMsIGxpbmUtaGVpZ2h0cyBhbmQgYmxvY2stbGV2ZWwgdG9wL2JvdHRvbSBtYXJnaW5zIHRoYXQgZm9ybSBhIGJhc2ljXG4vLyB2ZXJ0aWNhbCByaHl0aG0gb24gdGhlIHBhZ2UsIHdoaWNoIGRpZmZlcnMgZnJvbSB0aGUgb3JpZ2luYWwgTm9ybWFsaXplLmNzcy5cbi8vIEhvd2V2ZXIsIGNoYW5naW5nIGFueSBvZiB0aGUgdmFyaWFibGVzIGFib3ZlIHdpbGwgY2F1c2Vcbi8vICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHRvIGJlIGF1dG9tYXRpY2FsbHkgc2V0IHRvIHRydWUuXG4kbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobTogZmFsc2UgIWRlZmF1bHQ7XG4iLCIvKiEgbm9ybWFsaXplLXNjc3MgfCBNSVQvR1BMdjIgTGljZW5zZSB8IGJpdC5seS9ub3JtYWxpemUtc2NzcyAqL1xuLyogRG9jdW1lbnRcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW5cbiAgICAgKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gICAgICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICAgICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gICAgICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZm9vdGVyLFxuaGVhZGVyLFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICAgICAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAgICAgKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICAgICAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAgICAgKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gICAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAgICAgKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAgICAgKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gICAgICovXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBMaW5rc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICAgKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gICAgICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICAgICAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICAgKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LSBhbmQgRmlyZWZveCAzOS0uXG4gICAgICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAgICAgKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAgICAgKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAgICAgKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICAgICAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAgICAgKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gICAgICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICAgICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICAgICAqIGFsbCBicm93c2Vycy5cbiAgICAgKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAgICovXG5hdWRpbyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gICAgICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gICAgICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gICAgICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXG4gICAgICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gICAgICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogRm9ybXNcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICAgICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICAgKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gICAgICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gICAgICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gICAgICovXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAgICAgKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAgICAgKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gICAgICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICAgICAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICAgICAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICAgICAqL1xuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovIH1cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAvKipcbiAgICAgICAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gICAgICAgKi9cbiAgLyoqXG4gICAgICAgKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gICAgICAgKi8gfVxuICBidXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG4gIFt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuICBbdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuICBbdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gICAgYm9yZGVyLXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuICBbdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcbiAgW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcbiAgW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICAgIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAgICAgKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICAgICAqL1xuaW5wdXQge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAgICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gICAgICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAgICAgKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gICAgICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICAgICAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAgICAgKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAgICAgKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi9cbiAgLyoqXG4gICAgICAgKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICAgICAgICovIH1cbiAgW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sIFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAgICAgKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gICAgICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICAgICAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAgICAgKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxuICAgICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICAgICAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAgICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICAgICAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gICAgICovXG5wcm9ncmVzcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAgICAgKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICAgICAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAgICAgKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLypcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAgICAgKi9cbm1lbnUge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKiBTY3JpcHRpbmdcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAgICovXG5jYW52YXMge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gICAgICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogSGlkZGVuXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAgICAgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBSb2JvdG8gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTMwMC5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by0zMDAuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgbG9jYWwoXCJSb2JvdG8gTGlnaHRcIiksIGxvY2FsKFwiUm9ib3RvLTMwMFwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by0zMDAud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tMzAwLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by0zMDAudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTMwMC5zdmcjUm9ib3RvXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by1yZWd1bGFyLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Sb2JvdG8vUm9ib3RvLXJlZ3VsYXIuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgbG9jYWwoXCJSb2JvdG9cIiksIGxvY2FsKFwiUm9ib3RvLXJlZ3VsYXJcIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tcmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by1yZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by1yZWd1bGFyLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by1yZWd1bGFyLnN2ZyNSb2JvdG9cIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTUwMC5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by01MDAuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgbG9jYWwoXCJSb2JvdG8gTWVkaXVtXCIpLCBsb2NhbChcIlJvYm90by01MDBcIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNTAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTUwMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNTAwLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by01MDAuc3ZnI1JvYm90b1wiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNzAwLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTcwMC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCBsb2NhbChcIlJvYm90byBCb2xkXCIpLCBsb2NhbChcIlJvYm90by03MDBcIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNzAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTcwMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNzAwLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by03MDAuc3ZnI1JvYm90b1wiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL1JvYm90by9Sb2JvdG8taXRhbGljLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Sb2JvdG8vUm9ib3RvLWl0YWxpYy5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCBsb2NhbChcIlJvYm90b1wiKSwgbG9jYWwoXCJSb2JvdG8taXRhbGljXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8vUm9ib3RvLWl0YWxpYy53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvL1JvYm90by1pdGFsaWMud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8vUm9ib3RvLWl0YWxpYy50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by9Sb2JvdG8taXRhbGljLnN2ZyNSb2JvdG9cIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbi8qIG1hdGVyaWFsIGljb25zICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdNYXRlcmlhbCBJY29ucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9NYXRlcmlhbEljb25zLVJlZ3VsYXIuZW90XCIpO1xuICAvKiBGb3IgSUU2LTggKi9cbiAgc3JjOiBsb2NhbChcIk1hdGVyaWFsIEljb25zXCIpLCBsb2NhbChcIk1hdGVyaWFsSWNvbnMtUmVndWxhclwiKSwgdXJsKFwiLi4vZm9udHMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9NYXRlcmlhbEljb25zLVJlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9NYXRlcmlhbEljb25zLVJlZ3VsYXIudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpOyB9XG5cbi5tYXRlcmlhbC1pY29ucyB7XG4gIGZvbnQtZmFtaWx5OiAnTWF0ZXJpYWwgSWNvbnMnO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgLyogUHJlZmVycmVkIGljb24gc2l6ZSAqL1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgbGV0dGVyLXNwYWNpbmc6IG5vcm1hbDtcbiAgd29yZC13cmFwOiBub3JtYWw7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGRpcmVjdGlvbjogbHRyO1xuICAvKiBTdXBwb3J0IGZvciBhbGwgV2ViS2l0IGJyb3dzZXJzLiAqL1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLyogU3VwcG9ydCBmb3IgU2FmYXJpIGFuZCBDaHJvbWUuICovXG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gIC8qIFN1cHBvcnQgZm9yIEZpcmVmb3guICovXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIC8qIFN1cHBvcnQgZm9yIElFLiAqL1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6ICdsaWdhJzsgfVxuXG4ubmctbGF5b3V0cy1hcHAgLm11bHRpZW50cnktaXRlbXMgLm11bHRpZW50cnktaXRlbSAuaWNvbi1jbG9zZSwgLm5sLW1vZGFsLW1hc2sgLm5sLW1vZGFsIC5jbG9zZS1tb2RhbCwgLm5sLW1vZGFsLW1hc2sgZm9ybSBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbDo6YmVmb3JlLCAjcnVsZXMgaW5wdXRbdHlwZT0nY2hlY2tib3gnXSArIGxhYmVsOjpiZWZvcmUsIC5ubC1ydWxlIC5ydWxlLWRldGFpbHM6OmFmdGVyLCAubmwtcnVsZSAuc2V0dGluZ3MtbGlzdCAuc2V0dGluZ3MtdmFsdWUuZWRpdGFibGUtdmFsdWU6OmFmdGVyLCAuanMtY2hhbmdlLWxheW91dHMtdmlldzo6YmVmb3JlLCAubmwtbGF5b3V0LWV4cG9ydC1jaGVja2JveCBpbnB1dCArIGxhYmVsOjpiZWZvcmUge1xuICBmb250LWZhbWlseTogJ01hdGVyaWFsIEljb25zJztcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBsZXR0ZXItc3BhY2luZzogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB3b3JkLXdyYXA6IG5vcm1hbDtcbiAgZGlyZWN0aW9uOiBsdHI7XG4gIC13ZWJraXQtZm9udC1mZWF0dXJlLXNldHRpbmdzOiAnbGlnYSc7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkOyB9XG5cbi5ubC1ydWxlLnNob3ctYm9keSAubmwtcnVsZS1ib2R5LCAubmwtcnVsZS5zaG93LWFjdGlvbnMgLm5sLXJ1bGUtYWN0aW9ucyB7XG4gIGFuaW1hdGlvbjogZmFkZUluIDM1MG1zIGVhc2Utb3V0OyB9XG5cbkBrZXlmcmFtZXMgZmFkZUluIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDsgfVxuICB0b3Age1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG4ubmwtZ3JpZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgbWFyZ2luLWxlZnQ6IC0yMHB4O1xuICBtYXJnaW4tcmlnaHQ6IC0yMHB4OyB9XG4gIC5ubC1ncmlkID4gW2NsYXNzXj0nY29sLSddIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgICBmbGV4OiAwIDAgMTAwJTtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAubmwtZ3JpZCAuY29sLXh4czEge1xuICAgIGZsZXg6IDAgMCA4LjMzMzMzMzMzMzMlO1xuICAgIG1heC13aWR0aDogOC4zMzMzMzMzMzMzJTsgfVxuICAubmwtZ3JpZCAuY29sLXh4czIge1xuICAgIGZsZXg6IDAgMCAxNi42NjY2NjY2NjclO1xuICAgIG1heC13aWR0aDogMTYuNjY2NjY2NjY3JTsgfVxuICAubmwtZ3JpZCAuY29sLXh4czMge1xuICAgIGZsZXg6IDAgMCAyNSU7XG4gICAgbWF4LXdpZHRoOiAyNSU7IH1cbiAgLm5sLWdyaWQgLmNvbC14eHM0IHtcbiAgICBmbGV4OiAwIDAgMzMuMzMzMzMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDMzLjMzMzMzMzMzMyU7IH1cbiAgLm5sLWdyaWQgLmNvbC14eHM1IHtcbiAgICBmbGV4OiAwIDAgNDEuNjY2NjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDQxLjY2NjY2NjY2NyU7IH1cbiAgLm5sLWdyaWQgLmNvbC14eHM2IHtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIG1heC13aWR0aDogNTAlOyB9XG4gIC5ubC1ncmlkIC5jb2wteHhzNyB7XG4gICAgZmxleDogMCAwIDU4LjMzMzMzMzMzMyU7XG4gICAgbWF4LXdpZHRoOiA1OC4zMzMzMzMzMzMlOyB9XG4gIC5ubC1ncmlkIC5jb2wteHhzOCB7XG4gICAgZmxleDogMCAwIDY2LjY2NjY2NjY2NiU7XG4gICAgbWF4LXdpZHRoOiA2Ni42NjY2NjY2NjYlOyB9XG4gIC5ubC1ncmlkIC5jb2wteHhzOSB7XG4gICAgZmxleDogMCAwIDc1JTtcbiAgICBtYXgtd2lkdGg6IDc1JTsgfVxuICAubmwtZ3JpZCAuY29sLXh4czEwIHtcbiAgICBmbGV4OiAwIDAgODMuMzMzMzMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzMzMzMyU7IH1cbiAgLm5sLWdyaWQgLmNvbC14eHMxMSB7XG4gICAgZmxleDogMCAwIDkxLjY2NjY2NjY2NiU7XG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NjY2NjYlOyB9XG4gIC5ubC1ncmlkIC5jb2wteHhzMTIge1xuICAgIGZsZXg6IDAgMCAxMDAlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4MHB4KSB7XG4gICAgLm5sLWdyaWQgLmNvbC14czEge1xuICAgICAgZmxleDogMCAwIDguMzMzMzMzMzMzMyU7XG4gICAgICBtYXgtd2lkdGg6IDguMzMzMzMzMzMzMyU7IH1cbiAgICAubmwtZ3JpZCAuY29sLXhzMiB7XG4gICAgICBmbGV4OiAwIDAgMTYuNjY2NjY2NjY3JTtcbiAgICAgIG1heC13aWR0aDogMTYuNjY2NjY2NjY3JTsgfVxuICAgIC5ubC1ncmlkIC5jb2wteHMzIHtcbiAgICAgIGZsZXg6IDAgMCAyNSU7XG4gICAgICBtYXgtd2lkdGg6IDI1JTsgfVxuICAgIC5ubC1ncmlkIC5jb2wteHM0IHtcbiAgICAgIGZsZXg6IDAgMCAzMy4zMzMzMzMzMzMlO1xuICAgICAgbWF4LXdpZHRoOiAzMy4zMzMzMzMzMzMlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC14czUge1xuICAgICAgZmxleDogMCAwIDQxLjY2NjY2NjY2NyU7XG4gICAgICBtYXgtd2lkdGg6IDQxLjY2NjY2NjY2NyU7IH1cbiAgICAubmwtZ3JpZCAuY29sLXhzNiB7XG4gICAgICBmbGV4OiAwIDAgNTAlO1xuICAgICAgbWF4LXdpZHRoOiA1MCU7IH1cbiAgICAubmwtZ3JpZCAuY29sLXhzNyB7XG4gICAgICBmbGV4OiAwIDAgNTguMzMzMzMzMzMzJTtcbiAgICAgIG1heC13aWR0aDogNTguMzMzMzMzMzMzJTsgfVxuICAgIC5ubC1ncmlkIC5jb2wteHM4IHtcbiAgICAgIGZsZXg6IDAgMCA2Ni42NjY2NjY2NjYlO1xuICAgICAgbWF4LXdpZHRoOiA2Ni42NjY2NjY2NjYlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC14czkge1xuICAgICAgZmxleDogMCAwIDc1JTtcbiAgICAgIG1heC13aWR0aDogNzUlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC14czEwIHtcbiAgICAgIGZsZXg6IDAgMCA4My4zMzMzMzMzMzMlO1xuICAgICAgbWF4LXdpZHRoOiA4My4zMzMzMzMzMzMlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC14czExIHtcbiAgICAgIGZsZXg6IDAgMCA5MS42NjY2NjY2NjYlO1xuICAgICAgbWF4LXdpZHRoOiA5MS42NjY2NjY2NjYlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC14czEyIHtcbiAgICAgIGZsZXg6IDAgMCAxMDAlOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAubmwtZ3JpZCAuY29sLXMxIHtcbiAgICAgIGZsZXg6IDAgMCA4LjMzMzMzMzMzMzMlO1xuICAgICAgbWF4LXdpZHRoOiA4LjMzMzMzMzMzMzMlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1zMiB7XG4gICAgICBmbGV4OiAwIDAgMTYuNjY2NjY2NjY3JTtcbiAgICAgIG1heC13aWR0aDogMTYuNjY2NjY2NjY3JTsgfVxuICAgIC5ubC1ncmlkIC5jb2wtczMge1xuICAgICAgZmxleDogMCAwIDI1JTtcbiAgICAgIG1heC13aWR0aDogMjUlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1zNCB7XG4gICAgICBmbGV4OiAwIDAgMzMuMzMzMzMzMzMzJTtcbiAgICAgIG1heC13aWR0aDogMzMuMzMzMzMzMzMzJTsgfVxuICAgIC5ubC1ncmlkIC5jb2wtczUge1xuICAgICAgZmxleDogMCAwIDQxLjY2NjY2NjY2NyU7XG4gICAgICBtYXgtd2lkdGg6IDQxLjY2NjY2NjY2NyU7IH1cbiAgICAubmwtZ3JpZCAuY29sLXM2IHtcbiAgICAgIGZsZXg6IDAgMCA1MCU7XG4gICAgICBtYXgtd2lkdGg6IDUwJTsgfVxuICAgIC5ubC1ncmlkIC5jb2wtczcge1xuICAgICAgZmxleDogMCAwIDU4LjMzMzMzMzMzMyU7XG4gICAgICBtYXgtd2lkdGg6IDU4LjMzMzMzMzMzMyU7IH1cbiAgICAubmwtZ3JpZCAuY29sLXM4IHtcbiAgICAgIGZsZXg6IDAgMCA2Ni42NjY2NjY2NjYlO1xuICAgICAgbWF4LXdpZHRoOiA2Ni42NjY2NjY2NjYlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1zOSB7XG4gICAgICBmbGV4OiAwIDAgNzUlO1xuICAgICAgbWF4LXdpZHRoOiA3NSU7IH1cbiAgICAubmwtZ3JpZCAuY29sLXMxMCB7XG4gICAgICBmbGV4OiAwIDAgODMuMzMzMzMzMzMzJTtcbiAgICAgIG1heC13aWR0aDogODMuMzMzMzMzMzMzJTsgfVxuICAgIC5ubC1ncmlkIC5jb2wtczExIHtcbiAgICAgIGZsZXg6IDAgMCA5MS42NjY2NjY2NjYlO1xuICAgICAgbWF4LXdpZHRoOiA5MS42NjY2NjY2NjYlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1zMTIge1xuICAgICAgZmxleDogMCAwIDEwMCU7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5ubC1ncmlkIC5jb2wtbTEge1xuICAgICAgZmxleDogMCAwIDguMzMzMzMzMzMzMyU7XG4gICAgICBtYXgtd2lkdGg6IDguMzMzMzMzMzMzMyU7IH1cbiAgICAubmwtZ3JpZCAuY29sLW0yIHtcbiAgICAgIGZsZXg6IDAgMCAxNi42NjY2NjY2NjclO1xuICAgICAgbWF4LXdpZHRoOiAxNi42NjY2NjY2NjclOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1tMyB7XG4gICAgICBmbGV4OiAwIDAgMjUlO1xuICAgICAgbWF4LXdpZHRoOiAyNSU7IH1cbiAgICAubmwtZ3JpZCAuY29sLW00IHtcbiAgICAgIGZsZXg6IDAgMCAzMy4zMzMzMzMzMzMlO1xuICAgICAgbWF4LXdpZHRoOiAzMy4zMzMzMzMzMzMlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1tNSB7XG4gICAgICBmbGV4OiAwIDAgNDEuNjY2NjY2NjY3JTtcbiAgICAgIG1heC13aWR0aDogNDEuNjY2NjY2NjY3JTsgfVxuICAgIC5ubC1ncmlkIC5jb2wtbTYge1xuICAgICAgZmxleDogMCAwIDUwJTtcbiAgICAgIG1heC13aWR0aDogNTAlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1tNyB7XG4gICAgICBmbGV4OiAwIDAgNTguMzMzMzMzMzMzJTtcbiAgICAgIG1heC13aWR0aDogNTguMzMzMzMzMzMzJTsgfVxuICAgIC5ubC1ncmlkIC5jb2wtbTgge1xuICAgICAgZmxleDogMCAwIDY2LjY2NjY2NjY2NiU7XG4gICAgICBtYXgtd2lkdGg6IDY2LjY2NjY2NjY2NiU7IH1cbiAgICAubmwtZ3JpZCAuY29sLW05IHtcbiAgICAgIGZsZXg6IDAgMCA3NSU7XG4gICAgICBtYXgtd2lkdGg6IDc1JTsgfVxuICAgIC5ubC1ncmlkIC5jb2wtbTEwIHtcbiAgICAgIGZsZXg6IDAgMCA4My4zMzMzMzMzMzMlO1xuICAgICAgbWF4LXdpZHRoOiA4My4zMzMzMzMzMzMlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1tMTEge1xuICAgICAgZmxleDogMCAwIDkxLjY2NjY2NjY2NiU7XG4gICAgICBtYXgtd2lkdGg6IDkxLjY2NjY2NjY2NiU7IH1cbiAgICAubmwtZ3JpZCAuY29sLW0xMiB7XG4gICAgICBmbGV4OiAwIDAgMTAwJTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5ubC1ncmlkIC5jb2wtbDEge1xuICAgICAgZmxleDogMCAwIDguMzMzMzMzMzMzMyU7XG4gICAgICBtYXgtd2lkdGg6IDguMzMzMzMzMzMzMyU7IH1cbiAgICAubmwtZ3JpZCAuY29sLWwyIHtcbiAgICAgIGZsZXg6IDAgMCAxNi42NjY2NjY2NjclO1xuICAgICAgbWF4LXdpZHRoOiAxNi42NjY2NjY2NjclOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1sMyB7XG4gICAgICBmbGV4OiAwIDAgMjUlO1xuICAgICAgbWF4LXdpZHRoOiAyNSU7IH1cbiAgICAubmwtZ3JpZCAuY29sLWw0IHtcbiAgICAgIGZsZXg6IDAgMCAzMy4zMzMzMzMzMzMlO1xuICAgICAgbWF4LXdpZHRoOiAzMy4zMzMzMzMzMzMlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1sNSB7XG4gICAgICBmbGV4OiAwIDAgNDEuNjY2NjY2NjY3JTtcbiAgICAgIG1heC13aWR0aDogNDEuNjY2NjY2NjY3JTsgfVxuICAgIC5ubC1ncmlkIC5jb2wtbDYge1xuICAgICAgZmxleDogMCAwIDUwJTtcbiAgICAgIG1heC13aWR0aDogNTAlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1sNyB7XG4gICAgICBmbGV4OiAwIDAgNTguMzMzMzMzMzMzJTtcbiAgICAgIG1heC13aWR0aDogNTguMzMzMzMzMzMzJTsgfVxuICAgIC5ubC1ncmlkIC5jb2wtbDgge1xuICAgICAgZmxleDogMCAwIDY2LjY2NjY2NjY2NiU7XG4gICAgICBtYXgtd2lkdGg6IDY2LjY2NjY2NjY2NiU7IH1cbiAgICAubmwtZ3JpZCAuY29sLWw5IHtcbiAgICAgIGZsZXg6IDAgMCA3NSU7XG4gICAgICBtYXgtd2lkdGg6IDc1JTsgfVxuICAgIC5ubC1ncmlkIC5jb2wtbDEwIHtcbiAgICAgIGZsZXg6IDAgMCA4My4zMzMzMzMzMzMlO1xuICAgICAgbWF4LXdpZHRoOiA4My4zMzMzMzMzMzMlOyB9XG4gICAgLm5sLWdyaWQgLmNvbC1sMTEge1xuICAgICAgZmxleDogMCAwIDkxLjY2NjY2NjY2NiU7XG4gICAgICBtYXgtd2lkdGg6IDkxLjY2NjY2NjY2NiU7IH1cbiAgICAubmwtZ3JpZCAuY29sLWwxMiB7XG4gICAgICBmbGV4OiAwIDAgMTAwJTsgfSB9XG5cbmh0bWwsXG5ib2R5IHtcbiAgaGVpZ2h0OiAxMDAlOyB9XG5cbi5ubC1ydWxlcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4ubGF5b3V0cy1jb250cm9scyB7XG4gIG1hcmdpbjogMCAwIDFlbTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgLmxheW91dHMtY29udHJvbHMgLnNvcnRpbmctc2hvdyB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAubGF5b3V0LWV4cG9ydCAubGF5b3V0cy1jb250cm9scyB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG4uZXhwb3J0LWxheW91dHMtY29udHJvbHMge1xuICBkaXNwbGF5OiBub25lO1xuICBmbG9hdDogcmlnaHQ7XG4gIG1hcmdpbjogMCAwIDFlbTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgLmxheW91dC1leHBvcnQgLmV4cG9ydC1sYXlvdXRzLWNvbnRyb2xzIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4ubmctbGF5b3V0cy1hcHAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMS41O1xuICBjb2xvcjogIzQwNDA0MDtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7IH1cbiAgLm5nLWxheW91dHMtYXBwICoge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgLm5nLWxheW91dHMtYXBwLmFqYXgtbG9hZGluZyxcbiAgLm5nLWxheW91dHMtYXBwLmFqYXgtbG9hZGluZyAqIHtcbiAgICBjdXJzb3I6IHdhaXQgIWltcG9ydGFudDsgfVxuICAubmctbGF5b3V0cy1hcHAgYTpub3QoLm5sLWJ0bikge1xuICAgIGNvbG9yOiAjMDA5OGM3OyB9XG4gIC5uZy1sYXlvdXRzLWFwcCBoMSB7XG4gICAgZm9udC1zaXplOiAxLjYyNWVtO1xuICAgIG1hcmdpbjogMWVtIDAgM2VtOyB9XG4gIC5uZy1sYXlvdXRzLWFwcCAubmctbGF5b3V0cy1jb250YWluZXIge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xuICAgIHdpZHRoOiA5OCU7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAubmctbGF5b3V0cy1hcHAgLmxheW91dHMtc2lkZWJhciB7XG4gICAgd2lkdGg6IDIwJTtcbiAgICBiYWNrZ3JvdW5kOiAjZTZlNWU1OyB9XG4gICAgLm5nLWxheW91dHMtYXBwIC5sYXlvdXRzLXNpZGViYXIgLm1haW4tbWVudSB7XG4gICAgICBwYWRkaW5nLXRvcDogNDBweDsgfVxuICAgICAgLm5nLWxheW91dHMtYXBwIC5sYXlvdXRzLXNpZGViYXIgLm1haW4tbWVudSA+IHVsIHtcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBtYXJnaW46IDA7IH1cbiAgICAgICAgLm5nLWxheW91dHMtYXBwIC5sYXlvdXRzLXNpZGViYXIgLm1haW4tbWVudSA+IHVsID4gbGkge1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDIpOyB9XG4gICAgICAgICAgLm5nLWxheW91dHMtYXBwIC5sYXlvdXRzLXNpZGViYXIgLm1haW4tbWVudSA+IHVsID4gbGk6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wMik7IH1cbiAgICAgICAgICAubmctbGF5b3V0cy1hcHAgLmxheW91dHMtc2lkZWJhciAubWFpbi1tZW51ID4gdWwgPiBsaSA+IGEge1xuICAgICAgICAgICAgcGFkZGluZzogMTBweCAxNXB4O1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBmb250LXNpemU6IDAuODc1ZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgICAgICAgICAubmctbGF5b3V0cy1hcHAgLmxheW91dHMtc2lkZWJhciAubWFpbi1tZW51ID4gdWwgPiBsaSA+IGE6aG92ZXIge1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDIpOyB9XG4gICAgICAgICAgLm5nLWxheW91dHMtYXBwIC5sYXlvdXRzLXNpZGViYXIgLm1haW4tbWVudSA+IHVsID4gbGkuY3VycmVudCA+IGEge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGVzbW9rZTtcbiAgICAgICAgICAgIGNvbG9yOiAjZWM0MTdhO1xuICAgICAgICAgICAgY3Vyc29yOiBkZWZhdWx0OyB9XG4gIC5uZy1sYXlvdXRzLWFwcCAubGF5b3V0cy1jb250ZW50IHtcbiAgICBmbGV4OiAxO1xuICAgIHBhZGRpbmc6IDMwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5uZy1sYXlvdXRzLWFwcC5zb3J0aW5nIC5sYXlvdXRzLWNvbnRyb2xzIC5zb3J0aW5nLXNob3cge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAubmctbGF5b3V0cy1hcHAuc29ydGluZyAubGF5b3V0cy1jb250cm9scyAuc29ydGluZy1oaWRlLFxuICAubmctbGF5b3V0cy1hcHAuc29ydGluZyAubGF5b3V0cy1jb250cm9scyAubmwtZmlsdGVyLWRyb3Bkb3duIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cbiAgLm5nLWxheW91dHMtYXBwLnNvcnRpbmcgLmpzLWFkZC1ydWxlIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5uZy1sYXlvdXRzLWFwcC5zb3J0aW5nIC5ubC1uby1maWx0ZXJlZC1pdGVtcyB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG4gIC5uZy1sYXlvdXRzLWFwcCAubXVsdGllbnRyeS1pdGVtcyAubXVsdGllbnRyeS1pdGVtIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAubmctbGF5b3V0cy1hcHAgLm11bHRpZW50cnktaXRlbXMgLm11bHRpZW50cnktaXRlbSAuaWNvbi1jbG9zZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogNnB4O1xuICAgICAgdG9wOiA5cHg7XG4gICAgICB3aWR0aDogMThweDtcbiAgICAgIGhlaWdodDogMThweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjE1czsgfVxuICAgICAgLm5nLWxheW91dHMtYXBwIC5tdWx0aWVudHJ5LWl0ZW1zIC5tdWx0aWVudHJ5LWl0ZW0gLmljb24tY2xvc2U6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiY2xlYXJcIjsgfVxuICAgICAgLm5nLWxheW91dHMtYXBwIC5tdWx0aWVudHJ5LWl0ZW1zIC5tdWx0aWVudHJ5LWl0ZW0gLmljb24tY2xvc2U6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDUpOyB9XG4gICAgLm5nLWxheW91dHMtYXBwIC5tdWx0aWVudHJ5LWl0ZW1zIC5tdWx0aWVudHJ5LWl0ZW0gaW5wdXRbdHlwZT10ZXh0XSB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAzZW07IH1cbiAgICAubmctbGF5b3V0cy1hcHAgLm11bHRpZW50cnktaXRlbXMgLm11bHRpZW50cnktaXRlbTpmaXJzdC1jaGlsZDpudGgtbGFzdC1jaGlsZCgxKSAuaWNvbi1jbG9zZSB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5uZy1sYXlvdXRzLWFwcCAubXVsdGllbnRyeVtkYXRhLWxhc3RfaXRlbV9jYW5fYmVfcmVtb3ZlZD1cInRydWVcIl0gLm11bHRpZW50cnktaXRlbXMgLm11bHRpZW50cnktaXRlbSAuaWNvbi1jbG9zZSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLm5nLWxheW91dHMtYXBwIC5tdWx0aWVudHJ5IC5uby1pdGVtcy1tc2cge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIHBhZGRpbmc6IC41ZW07XG4gICAgYmFja2dyb3VuZDogI2YxZjFmMTtcbiAgICBtYXJnaW46IDAgMCAxZW07IH1cbiAgLm5nLWxheW91dHMtYXBwIC5tdWx0aWVudHJ5LnNob3ctbWVzc2FnZSAubm8taXRlbXMtbXNnIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4ubGF5b3V0cy1oZWFkZXIge1xuICBtYXJnaW46IDAgMCAyZW07IH1cbiAgLmxheW91dHMtaGVhZGVyIC5sYXlvdXRzLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDIxcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBtYXJnaW46IDA7XG4gICAgZmxvYXQ6IGxlZnQ7IH1cbiAgLmxheW91dHMtaGVhZGVyIC5sYXlvdXRzLWNvbnRyb2xzIHtcbiAgICBmbG9hdDogcmlnaHQ7IH1cbiAgICAubGF5b3V0cy1oZWFkZXIgLmxheW91dHMtY29udHJvbHMgLm5sLWRyb3Bkb3duIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAubGF5b3V0cy1oZWFkZXI6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoOyB9XG4gIC5sYXlvdXRzLWhlYWRlciBwIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBmb250LXNpemU6IDE0cHg7IH1cblxuLm5sLW1vZGFsLW1hc2sge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDA7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAxNXB4O1xuICBhbmltYXRpb246IG1hc2tGYWRlSW4gMC4yczsgfVxuICAubmwtbW9kYWwtbWFzayAqIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gIC5ubC1tb2RhbC1tYXNrIC5ubC1tb2RhbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgICB3aWR0aDogNTAwcHg7XG4gICAgbWF4LXdpZHRoOiA5OCU7XG4gICAgbWF4LWhlaWdodDogOTglO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbmltYXRpb246IG1vZGFsU2xpZGUgMC40cyBlYXNlLW91dDsgfVxuICAgIC5ubC1tb2RhbC1tYXNrIC5ubC1tb2RhbCAuY2xvc2UtbW9kYWwge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDE1cHg7XG4gICAgICB0b3A6IDE2cHg7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgICAubmwtbW9kYWwtbWFzayAubmwtbW9kYWwgLmNsb3NlLW1vZGFsOjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcImNsZWFyXCI7IH1cbiAgICAubmwtbW9kYWwtbWFzayAubmwtbW9kYWwgLm5sLW1vZGFsLWJvZHkge1xuICAgICAgcGFkZGluZzogMjVweCAxNXB4O1xuICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgIGZvbnQtc2l6ZTogMTZweDsgfVxuICAgIC5ubC1tb2RhbC1tYXNrIC5ubC1tb2RhbCAubmwtbW9kYWwtaGVhZCB7XG4gICAgICBwYWRkaW5nOiAxNXB4IDM1cHggMTVweCAxNXB4O1xuICAgICAgYmFja2dyb3VuZDogIzQwNDA0MDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgYm9yZGVyLXJhZGl1czogMHB4IDBweCAwIDA7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICBtaW4taGVpZ2h0OiA1OHB4OyB9XG4gICAgLm5sLW1vZGFsLW1hc2sgLm5sLW1vZGFsIC5ubC1tb2RhbC1hY3Rpb25zIHtcbiAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7IH1cbiAgICAgIC5ubC1tb2RhbC1tYXNrIC5ubC1tb2RhbCAubmwtbW9kYWwtYWN0aW9ucyAubmwtYnRuIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC41ZW07IH1cbiAgICAubmwtbW9kYWwtbWFzayAubmwtbW9kYWwgLmVycm9ycyB7XG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICBtYXJnaW46IC0wLjVlbSAwIDEuNWVtO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGZvbnQtc2l6ZTogMTVweDsgfVxuICAgICAgLm5sLW1vZGFsLW1hc2sgLm5sLW1vZGFsIC5lcnJvcnMgbGkge1xuICAgICAgICBjb2xvcjogcmVkOyB9XG4gIC5ubC1tb2RhbC1tYXNrIGZvcm0gbGFiZWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIG1hcmdpbjogMCAwIDRweDsgfVxuICAubmwtbW9kYWwtbWFzayBmb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICAubmwtbW9kYWwtbWFzayBmb3JtIGlucHV0W3R5cGU9XCJudW1iZXJcIl0sXG4gIC5ubC1tb2RhbC1tYXNrIGZvcm0gaW5wdXRbdHlwZT1cInVybFwiXSxcbiAgLm5sLW1vZGFsLW1hc2sgZm9ybSBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXG4gIC5ubC1tb2RhbC1tYXNrIGZvcm0gdGV4dGFyZWEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMCAwIDFlbTtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMCAwLjc1ZW07XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGhlaWdodDogNDRweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYjNiMmIyO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7IH1cbiAgICAubmwtbW9kYWwtbWFzayBmb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOjpwbGFjZWhvbGRlcixcbiAgICAubmwtbW9kYWwtbWFzayBmb3JtIGlucHV0W3R5cGU9XCJudW1iZXJcIl06OnBsYWNlaG9sZGVyLFxuICAgIC5ubC1tb2RhbC1tYXNrIGZvcm0gaW5wdXRbdHlwZT1cInVybFwiXTo6cGxhY2Vob2xkZXIsXG4gICAgLm5sLW1vZGFsLW1hc2sgZm9ybSBpbnB1dFt0eXBlPVwiZW1haWxcIl06OnBsYWNlaG9sZGVyLFxuICAgIC5ubC1tb2RhbC1tYXNrIGZvcm0gdGV4dGFyZWE6OnBsYWNlaG9sZGVyIHtcbiAgICAgIGNvbG9yOiAjYjNiMmIyOyB9XG4gIC5ubC1tb2RhbC1tYXNrIGZvcm0gdGV4dGFyZWEge1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtaW4taGVpZ2h0OiAxMjBweDtcbiAgICBwYWRkaW5nLXRvcDogMC4zNzVlbTtcbiAgICByZXNpemU6IHZlcnRpY2FsOyB9XG4gIC5ubC1tb2RhbC1tYXNrIGZvcm0gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTk5OTllbTsgfVxuICAgIC5ubC1tb2RhbC1tYXNrIGZvcm0gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdICsgbGFiZWwge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nOiAwLjM4NDYxNTM4NDZlbSAwLjM4NDYxNTM4NDZlbSAwLjM4NDYxNTM4NDZlbSAyZW0gIWltcG9ydGFudDtcbiAgICAgIG1hcmdpbjogMCAwIDAuNWVtO1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgICAubmwtbW9kYWwtbWFzayBmb3JtIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSArIGxhYmVsOjpiZWZvcmUge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIGNvbnRlbnQ6IFwiY2hlY2tfYm94X291dGxpbmVfYmxhbmtcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB0b3A6IDAuMWVtO1xuICAgICAgICBjb2xvcjogIzY2NjY2NjsgfVxuICAgIC5ubC1tb2RhbC1tYXNrIGZvcm0gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbDo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiY2hlY2tfYm94XCI7XG4gICAgICBjb2xvcjogIzAwOThjNzsgfVxuICAgIC5ubC1tb2RhbC1tYXNrIGZvcm0gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmluZGV0ZXJtaW5hdGUgKyBsYWJlbDo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiaW5kZXRlcm1pbmF0ZV9jaGVja19ib3hcIjsgfVxuICAubmwtbW9kYWwtbWFzayAuZm9ybS1hY3Rpb25zIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAubmwtbW9kYWwtbWFzayAubmwtbW9kYWwtbG9hZGVyIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5ubC1tb2RhbC1tYXNrLm1vZGFsLWxvYWRpbmcgLm5sLW1vZGFsLWxvYWRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLm5sLW1vZGFsLW1hc2subW9kYWwtbG9hZGluZyAubmwtbW9kYWwge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuQGtleWZyYW1lcyBtYXNrRmFkZUluIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDsgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbkBrZXlmcmFtZXMgbW9kYWxTbGlkZSB7XG4gIGZyb20ge1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgb3BhY2l0eTogMDsgfVxuICB0b3Age1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbi5ubC10b29sdGlwIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogMzAwcHg7XG4gIHotaW5kZXg6IDEwMTA7IH1cbiAgLm5sLXRvb2x0aXAgLm5sLXRvb2x0aXAtaW5uZXIge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoNTEsIDUxLCA1MSwgMC45KTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxMHB4O1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7IH1cbiAgICAubmwtdG9vbHRpcCAubmwtdG9vbHRpcC1pbm5lcjo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICB3aWR0aDogMDtcbiAgICAgIGhlaWdodDogMDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5ubC10b29sdGlwLm5sLXRvb2x0aXAtdG9wIC5ubC10b29sdGlwLWlubmVyLCAubmwtdG9vbHRpcC5ubC10b29sdGlwLWJvdHRvbSAubmwtdG9vbHRpcC1pbm5lciB7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IH1cbiAgICAubmwtdG9vbHRpcC5ubC10b29sdGlwLXRvcCAubmwtdG9vbHRpcC1pbm5lcjo6YmVmb3JlLCAubmwtdG9vbHRpcC5ubC10b29sdGlwLWJvdHRvbSAubmwtdG9vbHRpcC1pbm5lcjo6YmVmb3JlIHtcbiAgICAgIGxlZnQ6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItcmlnaHQ6IDRweCBzb2xpZCB0cmFuc3BhcmVudDsgfVxuICAubmwtdG9vbHRpcC5ubC10b29sdGlwLXRvcCAubmwtdG9vbHRpcC1pbm5lciB7XG4gICAgYm90dG9tOiAxMHB4OyB9XG4gICAgLm5sLXRvb2x0aXAubmwtdG9vbHRpcC10b3AgLm5sLXRvb2x0aXAtaW5uZXI6OmJlZm9yZSB7XG4gICAgICB0b3A6IDEwMCU7XG4gICAgICBib3JkZXItdG9wOiA2cHggc29saWQgcmdiYSg1MSwgNTEsIDUxLCAwLjkpOyB9XG4gIC5ubC10b29sdGlwLm5sLXRvb2x0aXAtYm90dG9tIC5ubC10b29sdGlwLWlubmVyIHtcbiAgICB0b3A6IDEwcHg7IH1cbiAgICAubmwtdG9vbHRpcC5ubC10b29sdGlwLWJvdHRvbSAubmwtdG9vbHRpcC1pbm5lcjo6YmVmb3JlIHtcbiAgICAgIGJvdHRvbTogMTAwJTtcbiAgICAgIGJvcmRlci1ib3R0b206IDZweCBzb2xpZCByZ2JhKDUxLCA1MSwgNTEsIDAuOSk7IH1cbiAgLm5sLXRvb2x0aXAubmwtdG9vbHRpcC1sZWZ0IC5ubC10b29sdGlwLWlubmVyLCAubmwtdG9vbHRpcC5ubC10b29sdGlwLXJpZ2h0IC5ubC10b29sdGlwLWlubmVyIHtcbiAgICB0b3A6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyB9XG4gICAgLm5sLXRvb2x0aXAubmwtdG9vbHRpcC1sZWZ0IC5ubC10b29sdGlwLWlubmVyOjpiZWZvcmUsIC5ubC10b29sdGlwLm5sLXRvb2x0aXAtcmlnaHQgLm5sLXRvb2x0aXAtaW5uZXI6OmJlZm9yZSB7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgIGJvcmRlci10b3A6IDRweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCB0cmFuc3BhcmVudDsgfVxuICAubmwtdG9vbHRpcC5ubC10b29sdGlwLWxlZnQgLm5sLXRvb2x0aXAtaW5uZXIge1xuICAgIHJpZ2h0OiAxMHB4OyB9XG4gICAgLm5sLXRvb2x0aXAubmwtdG9vbHRpcC1sZWZ0IC5ubC10b29sdGlwLWlubmVyOjpiZWZvcmUge1xuICAgICAgbGVmdDogMTAwJTtcbiAgICAgIGJvcmRlci1sZWZ0OiA2cHggc29saWQgcmdiYSg1MSwgNTEsIDUxLCAwLjkpOyB9XG4gIC5ubC10b29sdGlwLm5sLXRvb2x0aXAtcmlnaHQgLm5sLXRvb2x0aXAtaW5uZXIge1xuICAgIGxlZnQ6IDEwcHg7IH1cbiAgICAubmwtdG9vbHRpcC5ubC10b29sdGlwLXJpZ2h0IC5ubC10b29sdGlwLWlubmVyOjpiZWZvcmUge1xuICAgICAgcmlnaHQ6IDEwMCU7XG4gICAgICBib3JkZXItcmlnaHQ6IDZweCBzb2xpZCByZ2JhKDUxLCA1MSwgNTEsIDAuOSk7IH1cbiAgLm5sLXRvb2x0aXAubmwtdG9vbHRpcC1hY3RpdmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGFuaW1hdGlvbjogc2hvd1RUIDIwMG1zIGVhc2Utb3V0OyB9XG5cbkBrZXlmcmFtZXMgc2hvd1RUIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDsgfVxuICB0b3Age1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG4ubmwtZHJvcGRvd24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLm5sLWRyb3Bkb3duW2RhdGEtcG9zaXRpb249J3JpZ2h0J10ge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgLm5sLWRyb3Bkb3duW2RhdGEtcG9zaXRpb249J3JpZ2h0J10gLm5sLWRyb3Bkb3duLW1lbnUge1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBsZWZ0OiBhdXRvOyB9XG4gIC5ubC1kcm9wZG93biAubmwtZHJvcGRvd24tbWVudSB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDEwMCU7XG4gICAgbGVmdDogMDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGJhY2tncm91bmQ6ICM0MDQwNDA7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgei1pbmRleDogLTEwO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAuNWVtIDA7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lOyB9XG4gICAgLm5sLWRyb3Bkb3duIC5ubC1kcm9wZG93bi1tZW51ID4gbGkge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDsgfVxuICAgICAgLm5sLWRyb3Bkb3duIC5ubC1kcm9wZG93bi1tZW51ID4gbGkgPiBhLFxuICAgICAgLm5sLWRyb3Bkb3duIC5ubC1kcm9wZG93bi1tZW51ID4gbGkgPiBzcGFuLFxuICAgICAgLm5sLWRyb3Bkb3duIC5ubC1kcm9wZG93bi1tZW51ID4gbGkgPiBidXR0b24ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgICAgICBwYWRkaW5nOiAuNmVtIDFlbTtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4ycyBlYXNlO1xuICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgdGV4dC1hbGlnbjogaW5oZXJpdDsgfVxuICAgICAgICAubmwtZHJvcGRvd24gLm5sLWRyb3Bkb3duLW1lbnUgPiBsaSA+IGFbZGlzYWJsZWRdLFxuICAgICAgICAubmwtZHJvcGRvd24gLm5sLWRyb3Bkb3duLW1lbnUgPiBsaSA+IHNwYW5bZGlzYWJsZWRdLFxuICAgICAgICAubmwtZHJvcGRvd24gLm5sLWRyb3Bkb3duLW1lbnUgPiBsaSA+IGJ1dHRvbltkaXNhYmxlZF0ge1xuICAgICAgICAgIG9wYWNpdHk6IC4yO1xuICAgICAgICAgIGN1cnNvcjogZGVmYXVsdDsgfVxuICAgICAgLm5sLWRyb3Bkb3duIC5ubC1kcm9wZG93bi1tZW51ID4gbGkgPiBhLFxuICAgICAgLm5sLWRyb3Bkb3duIC5ubC1kcm9wZG93bi1tZW51ID4gbGkgPiBidXR0b24ge1xuICAgICAgICBjb2xvcjogaW5oZXJpdDsgfVxuICAgICAgICAubmwtZHJvcGRvd24gLm5sLWRyb3Bkb3duLW1lbnUgPiBsaSA+IGE6aG92ZXI6bm90KFtkaXNhYmxlZF0pLFxuICAgICAgICAubmwtZHJvcGRvd24gLm5sLWRyb3Bkb3duLW1lbnUgPiBsaSA+IGJ1dHRvbjpob3Zlcjpub3QoW2Rpc2FibGVkXSkge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7IH1cbiAgICAgICAgLm5sLWRyb3Bkb3duIC5ubC1kcm9wZG93bi1tZW51ID4gbGkgPiBhIC5ub3RlLFxuICAgICAgICAubmwtZHJvcGRvd24gLm5sLWRyb3Bkb3duLW1lbnUgPiBsaSA+IGJ1dHRvbiAubm90ZSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgZm9udC1zaXplOiAuNjkyMzA3NjkyM2VtO1xuICAgICAgICAgIGNvbG9yOiAjYTZhNmE2OyB9XG4gIC5ubC1kcm9wZG93bi5ubC1kcm9wZG93bi1hY3RpdmUgLm5sLWRyb3Bkb3duLW1lbnUge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICB0b3A6IDEwMCU7XG4gICAgYm90dG9tOiBhdXRvO1xuICAgIGFuaW1hdGlvbjogc2hvd0Ryb3Bkb3duIDIwMG1zIGVhc2Utb3V0OyB9XG4gIC5ubC1kcm9wZG93bi5ubC1kcm9wZG93bi1hY3RpdmUubmwtZHJvcGRvd24tdG9wIC5ubC1kcm9wZG93bi1tZW51IHtcbiAgICB0b3A6IGF1dG87XG4gICAgYm90dG9tOiAxMDAlOyB9XG4gIC5ubC1kcm9wZG93bi5ubC1kcm9wZG93bi1hY3RpdmUgLm5sLWRyb3Bkb3duLXRvZ2dsZSxcbiAgLm5sLWRyb3Bkb3duLm5sLWRyb3Bkb3duLWFjdGl2ZSAubmwtZHJvcGRvd24tdG9nZ2xlOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjNDA0MDQwO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5ubC1kcm9wZG93biAuY2hlY2tib3gge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZzogMCAxZW07XG4gICAgZm9udC1zaXplOiAxM3B4OyB9XG4gICAgLm5sLWRyb3Bkb3duIC5jaGVja2JveCBsYWJlbCB7XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG4gIC5ubC1kcm9wZG93biAuZmlsdGVyLWNoZWNrZWQtYW1vdW50IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAxZW07XG4gICAgdG9wOiAwO1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICBwYWRkaW5nOiAuNWVtO1xuICAgIG1pbi13aWR0aDogMmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTUwJSwgMCk7XG4gICAgYmFja2dyb3VuZDogI0YzNTkwQTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiA1MDBlbTtcbiAgICB6LWluZGV4OiAyOyB9XG5cbkBrZXlmcmFtZXMgc2hvd0Ryb3Bkb3duIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDsgfVxuICB0b3Age1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG4ubmwtYnRuIHtcbiAgYmFja2dyb3VuZDogMCAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgY29sb3I6ICM0MDQwNDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAzNnB4O1xuICBtYXJnaW46IDA7XG4gIG1pbi13aWR0aDogNjRweDtcbiAgcGFkZGluZzogMCAxMnB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEzcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdpbGwtY2hhbmdlOiBib3gtc2hhZG93O1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuMnMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMSwgMSksIGJhY2tncm91bmQtY29sb3IgMC4ycyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLCBjb2xvciAwLjJzIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAzNnB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5ubC1idG46aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMTU4LCAxNTgsIDE1OCwgMC4yKTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgLm5sLWJ0bjpmb2N1czpub3QoOmFjdGl2ZSkge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMTU4LCAxNTgsIDE1OCwgMC4zKTsgfVxuICAubmwtYnRuOmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgxNTgsIDE1OCwgMTU4LCAwLjQpOyB9XG4gIC5ubC1idG4ubmwtYnRuLWxpbmsge1xuICAgIGNvbG9yOiAjMDA5OGM3OyB9XG4gIC5ubC1idG4ubmwtYnRuLWljb24ge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB3aWR0aDogMzZweDtcbiAgICBtaW4td2lkdGg6IDM2cHg7XG4gICAgcGFkZGluZzogMDtcbiAgICBmb250LXNpemU6IDI0cHg7IH1cbiAgICAubmwtYnRuLm5sLWJ0bi1pY29uIGkge1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLm5sLWJ0bi5ubC1idG4tcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZDogIzAwOThjNztcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5ubC1idG4ubmwtYnRuLXByaW1hcnk6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogIzAwODliMzsgfVxuICAgIC5ubC1idG4ubmwtYnRuLXByaW1hcnk6Zm9jdXM6bm90KDphY3RpdmUpIHtcbiAgICAgIGJhY2tncm91bmQ6ICMwMDg1YWQ7IH1cbiAgICAubmwtYnRuLm5sLWJ0bi1wcmltYXJ5OmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiAjMDA4MWE4OyB9XG4gIC5ubC1idG4ubmwtYnRuLXdoaXRlIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmOyB9XG4gICAgLm5sLWJ0bi5ubC1idG4td2hpdGU6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogcmdiYSgxNTgsIDE1OCwgMTU4LCAwLjIpOyB9XG4gICAgLm5sLWJ0bi5ubC1idG4td2hpdGU6Zm9jdXM6bm90KDphY3RpdmUpIHtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMTU4LCAxNTgsIDE1OCwgMC4zKTsgfVxuICAgIC5ubC1idG4ubmwtYnRuLXdoaXRlOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDE1OCwgMTU4LCAxNTgsIDAuNCk7IH1cbiAgLm5sLWJ0biBpIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIGZvbnQtc2l6ZTogMTVweDsgfVxuICAubmwtYnRuOmRpc2FibGVkIHtcbiAgICBvcGFjaXR5OiAwLjU7IH1cbiAgLm5sLWRyb3Bkb3duLWFjdGl2ZSA+IC5ubC1idG4ge1xuICAgIGJvcmRlci1yYWRpdXM6IDJweCAycHggMCAwOyB9XG5cbi5ubC1zZWxlY3QsIC5ubC1ydWxlIC5ubC1ydWxlLWJvZHkgZm9ybSBzZWxlY3Q6bm90KFttdWx0aXBsZV0pIHtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogIzQwNDA0MDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgaGVpZ2h0OiAzNnB4O1xuICBwYWRkaW5nOiA0cHggMzJweCA0cHggMTBweDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLCBjb2xvciAwLjJzIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgdHJhbnNwYXJlbnQgNTAlLCBncmF5IDUwJSksIGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIGdyYXkgNTAlLCB0cmFuc3BhcmVudCA1MCUpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjYWxjKDEwMCUgLSAxNnB4KSA1MCUsIGNhbGMoMTAwJSAtIDExcHgpIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiA0cHggNXB4LCA1cHggNXB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgLm5sLXNlbGVjdDpob3ZlciwgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSBmb3JtIHNlbGVjdDpob3Zlcjpub3QoW211bHRpcGxlXSkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7IH1cbiAgLm5sLXNlbGVjdDpmb2N1czpub3QoOmFjdGl2ZSksIC5ubC1ydWxlIC5ubC1ydWxlLWJvZHkgZm9ybSBzZWxlY3Q6Zm9jdXM6bm90KDphY3RpdmUpOm5vdChbbXVsdGlwbGVdKSB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWJlYmViOyB9XG5cbi5sYXlvdXQtaWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA3NXB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47IH1cbiAgLm5nY2IgLnByZXZpZXctcGFuZWwgLmxheW91dC1pY29uIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIGhlaWdodDogMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTMwJTtcbiAgICBtYXJnaW46IDFlbSBhdXRvIDA7XG4gICAgYm9yZGVyOiAycHggc29saWQgI2ExYTFhMTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDk1JTtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7IH1cblxuLmxvYWRpbmctbmctaWNvbiwgLm5sLW1vZGFsLW1hc2sgLm5sLW1vZGFsLWxvYWRlciA+IHNwYW4ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1zaXplOiAxZW07XG4gIHdpZHRoOiAxLjM3NWVtO1xuICBoZWlnaHQ6IDIuMzc1ZW07XG4gIG1hcmdpbjogMGVtIDEuNWVtIC0wLjNlbTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTQ4ZGVnKTtcbiAgYW5pbWF0aW9uOiBsb2FkUm90YXRlIDEuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKDAuNDUsIDAuMDUsIDAuNTUsIDAuOTUpOyB9XG4gIC5sb2FkaW5nLW5nLWljb246OmJlZm9yZSwgLm5sLW1vZGFsLW1hc2sgLm5sLW1vZGFsLWxvYWRlciA+IHNwYW46OmJlZm9yZSwgLmxvYWRpbmctbmctaWNvbjo6YWZ0ZXIsIC5ubC1tb2RhbC1tYXNrIC5ubC1tb2RhbC1sb2FkZXIgPiBzcGFuOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7IH1cbiAgLmxvYWRpbmctbmctaWNvbjo6YmVmb3JlLCAubmwtbW9kYWwtbWFzayAubmwtbW9kYWwtbG9hZGVyID4gc3Bhbjo6YmVmb3JlIHtcbiAgICB3aWR0aDogMWVtO1xuICAgIGhlaWdodDogMWVtO1xuICAgIG1hcmdpbi1sZWZ0OiAtMC41ZW07XG4gICAgYm90dG9tOiAxLjM3NWVtO1xuICAgIGFuaW1hdGlvbjogbG9hZEJvdW5jZVRvcFNxdWFzaCAwLjc1cyBhbHRlcm5hdGUgaW5maW5pdGUgZWFzZSwgbG9hZEJvdW5jZVRvcEZsb3cgMC43NXMgYWx0ZXJuYXRlIGluZmluaXRlIGVhc2U7IH1cbiAgLmxvYWRpbmctbmctaWNvbjo6YWZ0ZXIsIC5ubC1tb2RhbC1tYXNrIC5ubC1tb2RhbC1sb2FkZXIgPiBzcGFuOjphZnRlciB7XG4gICAgd2lkdGg6IDEuMzc1ZW07XG4gICAgaGVpZ2h0OiAxLjM3NWVtO1xuICAgIG1hcmdpbi1sZWZ0OiAtMC42ODc1ZW07XG4gICAgYm90dG9tOiAwO1xuICAgIGFuaW1hdGlvbjogbG9hZEJvdW5jZUJvdHRvbVNxdWFzaCAwLjc1cyBhbHRlcm5hdGUgaW5maW5pdGUgZWFzZSwgbG9hZEJvdW5jZUJvdHRvbUZsb3cgMC43NXMgYWx0ZXJuYXRlIGluZmluaXRlIGVhc2U7IH1cblxuQGtleWZyYW1lcyBsb2FkQm91bmNlVG9wU3F1YXNoIHtcbiAgMCUge1xuICAgIGhlaWdodDogMC4zNzVlbTtcbiAgICBib3JkZXItcmFkaXVzOiAzLjc1ZW0gMy43NWVtIDEuMjVlbSAxLjI1ZW07XG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMik7IH1cbiAgMTUlIHtcbiAgICBoZWlnaHQ6IDFlbTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7IH1cbiAgMTAwJSB7XG4gICAgaGVpZ2h0OiAxZW07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHRyYW5zZm9ybTogc2NhbGVYKDEpOyB9IH1cblxuQGtleWZyYW1lcyBsb2FkQm91bmNlQm90dG9tU3F1YXNoIHtcbiAgMCUge1xuICAgIGhlaWdodDogMWVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDEuMjVlbSAxLjI1ZW0gMy43NWVtIDMuNzVlbTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCgxLjUpOyB9XG4gIDE1JSB7XG4gICAgaGVpZ2h0OiAxLjM3NWVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCgxKTsgfVxuICAxMDAlIHtcbiAgICBoZWlnaHQ6IDEuMzc1ZW07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHRyYW5zZm9ybTogc2NhbGVYKDEpOyB9IH1cblxuQGtleWZyYW1lcyBsb2FkQm91bmNlVG9wRmxvdyB7XG4gIDAlIHtcbiAgICBib3R0b206IDEuMTI1ZW07IH1cbiAgNTAlIHtcbiAgICBib3R0b206IDIuMjVlbTtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNiwgMC42OCwgMC4xOSk7IH1cbiAgOTAlIHtcbiAgICBib3R0b206IDEuNzVlbTsgfVxuICAxMDAlIHtcbiAgICBib3R0b206IDEuNzVlbTsgfSB9XG5cbkBrZXlmcmFtZXMgbG9hZEJvdW5jZUJvdHRvbUZsb3cge1xuICAwJSB7XG4gICAgYm90dG9tOiAwLjE4NzVlbTsgfVxuICA1MCUge1xuICAgIGJvdHRvbTogLTAuOTM3NWVtO1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLjA2LCAwLjY4LCAwLjE5KTsgfVxuICA5MCUge1xuICAgIGJvdHRvbTogMGVtOyB9XG4gIDEwMCUge1xuICAgIGJvdHRvbTogMGVtOyB9IH1cblxuQGtleWZyYW1lcyBsb2FkUm90YXRlIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC0yMjhkZWcpOyB9XG4gIDQ5JSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ4ZGVnKTsgfVxuICA1MSUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC00OGRlZyk7IH1cbiAgOTIlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzJkZWcpOyB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDEzMmRlZyk7IH0gfVxuXG4jcnVsZXMge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgI3J1bGVzIGlucHV0W3R5cGU9J2NoZWNrYm94J10ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtOTk5OWVtOyB9XG4gICAgI3J1bGVzIGlucHV0W3R5cGU9J2NoZWNrYm94J10gKyBsYWJlbCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHBhZGRpbmc6IDAgMCAwIDEuNzVlbTtcbiAgICAgIG1hcmdpbjogLjVlbSAwIDFlbTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNDsgfVxuICAgICAgI3J1bGVzIGlucHV0W3R5cGU9J2NoZWNrYm94J10gKyBsYWJlbDo6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJ2NoZWNrX2JveF9vdXRsaW5lX2JsYW5rJztcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHRvcDogMDsgfVxuICAgICNydWxlcyBpbnB1dFt0eXBlPSdjaGVja2JveCddOmNoZWNrZWQgKyBsYWJlbDo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICdjaGVja19ib3gnOyB9XG5cbi5ubC1ydWxlcy1oZWFkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogIzU3NTc1NztcbiAgcGFkZGluZzogMCAwIDJweDsgfVxuICAubmwtcnVsZXMtaGVhZCAubmwtcnVsZXMtaGVhZC13cmFwcGVyIHtcbiAgICBmbGV4OiAxO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4OyB9XG4gIC5ubC1ydWxlcy1oZWFkIC5ydWxlLXByaW9yaXR5IHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG5cbi5ubC1ydWxlLWNlbGwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiA0cHggMjBweCA0cHggMDsgfVxuICAubmwtcnVsZS1jZWxsLnJ1bGUtcHJpb3JpdHkge1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgLm5sLXJ1bGUtY2VsbC5ydWxlLWxheW91dCB7XG4gICAgd2lkdGg6IDI1JTsgfVxuICAubmwtcnVsZS1jZWxsLnJ1bGUtdGFyZ2V0cyB7XG4gICAgd2lkdGg6IDI1JTtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5ubC1ydWxlLWNlbGwucnVsZS1jb25kaXRpb25zIHtcbiAgICBmbGV4OiAxO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWluLXdpZHRoOiAwOyB9XG4gICAgLm5sLXJ1bGUtY2VsbC5ydWxlLWNvbmRpdGlvbnMgdWwge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICAgIG1heC1oZWlnaHQ6IDQuMmVtO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDM7XG4gICAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgLm5sLXJ1bGUtY2VsbC5ydWxlLWNvbmRpdGlvbnMgdWwubmwtaW5saW5lIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgICAgLm5sLXJ1bGUtY2VsbC5ydWxlLWNvbmRpdGlvbnMgdWwubmwtaW5saW5lID4gbGkge1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDJweDsgfVxuICAgICAgICAgIC5ubC1ydWxlLWNlbGwucnVsZS1jb25kaXRpb25zIHVsLm5sLWlubGluZSA+IGxpOjphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiAnLCc7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAgICAgICAubmwtcnVsZS1jZWxsLnJ1bGUtY29uZGl0aW9ucyB1bC5ubC1pbmxpbmUgPiBsaTpsYXN0LWNoaWxkOjphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiAnJzsgfVxuICAgICAgLm5sLXJ1bGUtY2VsbC5ydWxlLWNvbmRpdGlvbnMgdWwubmwtZWxsaXBzaXMgPiBsaSB7XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5ubC1ydWxlLWNlbGwgcCB7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5ubC1ydWxlLWNlbGwgdWwge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgfVxuICAgIC5ubC1ydWxlLWNlbGwgdWwgPiBsaSB7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgICAubmwtcnVsZS1jZWxsIHVsIC51bmlxdWUge1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgIGNvbG9yOiAjMzMzMzMzOyB9XG5cbi5ubC1ydWxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luOiAwIDAgMTBweDtcbiAgZm9udC1zaXplOiAxMnB4OyB9XG4gIC5ubC1ydWxlLm5sLXJ1bGUtaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5ubC1ydWxlIC5ydWxlLXByaW9yaXR5IHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICBwYWRkaW5nLXRvcDogMjBweDsgfVxuICAubmwtcnVsZS5zaG93LWJvZHkgLm5sLXJ1bGUtYm9keSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLm5sLXJ1bGUuc2hvdy1ib2R5IC5ydWxlLWRldGFpbHM6OmFmdGVyIHtcbiAgICBjb250ZW50OiAna2V5Ym9hcmRfYXJyb3dfdXAnOyB9XG4gIC5ubC1ydWxlLnNob3ctYWN0aW9ucyAubmwtcnVsZS1hY3Rpb25zIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAubmwtcnVsZS5zaG93LWFjdGlvbnMuc2hvdy1ib2R5IC5ubC1ydWxlLWFjdGlvbnMge1xuICAgIGJhY2tncm91bmQ6ICNlNmU1ZTU7IH1cbiAgLm5sLXJ1bGUgLnJ1bGUtZGV0YWlscyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZzogMjBweCAxMnB4O1xuICAgIGJhY2tncm91bmQ6ICNlNmU1ZTU7XG4gICAgbGluZS1oZWlnaHQ6IDEuNjY2NjY2NjY2NztcbiAgICBjb2xvcjogIzMzMzMzMzsgfVxuICAgIC5ubC1ydWxlIC5ydWxlLWRldGFpbHM6OmFmdGVyIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIG1hcmdpbjogMXB4IDAgMCAuMTI1ZW07XG4gICAgICBjb250ZW50OiAna2V5Ym9hcmRfYXJyb3dfZG93bic7IH1cbiAgLm5sLXJ1bGUgLm5sLXJ1bGUtaGVhZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gICAgY29sb3I6ICM2NjY2NjY7IH1cbiAgICAubmwtcnVsZSAubmwtcnVsZS1oZWFkIC5ydWxlLWxheW91dCB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgY29sb3I6ICMzMzMzMzM7IH1cbiAgICAubmwtcnVsZSAubmwtcnVsZS1oZWFkIC5ubC1kcm9wZG93biB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7IH1cbiAgICAgIC5ubC1ydWxlIC5ubC1ydWxlLWhlYWQgLm5sLWRyb3Bkb3duIC5ubC1kcm9wZG93bi10b2dnbGUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgIG1pbi13aWR0aDogYXV0bztcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICBwYWRkaW5nOiAwIC43NWVtO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwOyB9XG4gICAgICAgIC5ubC1ydWxlIC5ubC1ydWxlLWhlYWQgLm5sLWRyb3Bkb3duIC5ubC1kcm9wZG93bi10b2dnbGUgaSB7XG4gICAgICAgICAgZm9udC1zaXplOiBpbmhlcml0OyB9XG4gICAgLm5sLXJ1bGUgLm5sLXJ1bGUtaGVhZCAubm8tbGF5b3V0IHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICBjb2xvcjogIzk5OTk5OTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgICAubmwtcnVsZSAubmwtcnVsZS1oZWFkIC5uby1sYXlvdXQgYSB7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2U2ZTVlNTtcbiAgICAgICAgcGFkZGluZzogLjZlbSAuNmVtIC42ZW0gMWVtO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBtYXJnaW4tbGVmdDogMWVtO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtaGVhZCAubm8tbGF5b3V0IGEgaSB7XG4gICAgICAgICAgY29sb3I6ICNiM2IyYjI7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAuMjVlbTsgfVxuICAubmwtcnVsZSAubmwtcnVsZS1ib2R5IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYmFja2dyb3VuZDogI2U2ZTVlNTsgfVxuICAgIC5ubC1ydWxlIC5ubC1ydWxlLWJvZHkgaDQge1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgIG1hcmdpbjogMCAwIDEuNjY2NjY2NjY2N2VtOyB9XG4gICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSBwLm5vdGUge1xuICAgICAgbWFyZ2luOiAxLjVlbSAwIDA7XG4gICAgICBmb250LXN0eWxlOiBpdGFsaWM7IH1cbiAgICAubmwtcnVsZSAubmwtcnVsZS1ib2R5IC5ydWxlLWxheW91dC1pbmZvIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSAucnVsZS1sYXlvdXQtaW5mbyAucnVsZS1sYXlvdXQtaW5mby1pY29uIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjYTFhMWExO1xuICAgICAgICBwYWRkaW5nOiAycHg7XG4gICAgICAgIHdpZHRoOiA1NnB4O1xuICAgICAgICBvcGFjaXR5OiAuNjU7IH1cbiAgICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSAucnVsZS1sYXlvdXQtaW5mbyAucnVsZS1sYXlvdXQtaW5mby1pY29uIC5sYXlvdXQtaWNvbiB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNTAlOyB9XG4gICAgICAubmwtcnVsZSAubmwtcnVsZS1ib2R5IC5ydWxlLWxheW91dC1pbmZvIC5ydWxlLWxheW91dC1pbmZvLXRleHQge1xuICAgICAgICBtaW4td2lkdGg6IDgwcHg7XG4gICAgICAgIGZsZXg6IDE7IH1cbiAgICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSAucnVsZS1sYXlvdXQtaW5mbyAucnVsZS1sYXlvdXQtaW5mby10ZXh0IHAge1xuICAgICAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7IH1cbiAgICAubmwtcnVsZSAubmwtcnVsZS1ib2R5IGZvcm0ge1xuICAgICAgYmFja2dyb3VuZDogd2hpdGVzbW9rZTtcbiAgICAgIHBhZGRpbmc6IC44ZW07XG4gICAgICBtYXJnaW46IC41ZW0gMDtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDsgfVxuICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSBmb3JtIGxhYmVsIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbjogMCAwIC4yNWVtO1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LXNpemU6IC45ZW07IH1cbiAgICAgIC5ubC1ydWxlIC5ubC1ydWxlLWJvZHkgZm9ybSBpbnB1dFt0eXBlPSd0ZXh0J10ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBwYWRkaW5nOiAuNWVtO1xuICAgICAgICBtYXJnaW46IDAgMCAxZW07XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBsaW5lLWhlaWdodDogMS44OyB9XG4gICAgICAubmwtcnVsZSAubmwtcnVsZS1ib2R5IGZvcm0gc2VsZWN0Om5vdChbbXVsdGlwbGVdKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgIG1hcmdpbjogMCAwIDFlbTsgfVxuICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSBmb3JtIHNlbGVjdFttdWx0aXBsZV0ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBtYXJnaW46IDAgMCAxZW07IH1cbiAgICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSBmb3JtIHNlbGVjdFttdWx0aXBsZV0gb3B0aW9uIHtcbiAgICAgICAgICBwYWRkaW5nOiAuMjVlbTsgfVxuICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSBmb3JtIC5mb3JtLWFjdGlvbnMge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSBmb3JtIC5ubC1idG4ge1xuICAgICAgICBoZWlnaHQ6IDI4cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4OyB9XG4gICAgICAubmwtcnVsZSAubmwtcnVsZS1ib2R5IGZvcm0gLmpzLWlucHV0LWJyb3dzZSAuanMtY2xlYXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCB3aGl0ZXNtb2tlOyB9XG4gICAgICAgIC5ubC1ydWxlIC5ubC1ydWxlLWJvZHkgZm9ybSAuanMtaW5wdXQtYnJvd3NlIC5qcy1jbGVhcjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogI2ZhZmFmYTsgfVxuICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSBmb3JtIC5qcy1pbnB1dC1icm93c2UgLmpzLXRyaWdnZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDsgfVxuICAgICAgICAubmwtcnVsZSAubmwtcnVsZS1ib2R5IGZvcm0gLmpzLWlucHV0LWJyb3dzZSAuanMtdHJpZ2dlciBzcGFuIHtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMzJweDsgfVxuICAgICAgICAubmwtcnVsZSAubmwtcnVsZS1ib2R5IGZvcm0gLmpzLWlucHV0LWJyb3dzZSAuanMtdHJpZ2dlcjo6YWZ0ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICMwMDk4Yzc7XG4gICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDMycHg7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMTVzIGVhc2UsIGNvbG9yIC4xNXMgZWFzZTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDsgfVxuICAgICAgICAubmwtcnVsZSAubmwtcnVsZS1ib2R5IGZvcm0gLmpzLWlucHV0LWJyb3dzZSAuanMtdHJpZ2dlcjpob3Zlcjo6YWZ0ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICMwMDg5YjM7IH1cbiAgICAgIC5ubC1ydWxlIC5ubC1ydWxlLWJvZHkgZm9ybSAuZXJyb3JzIHtcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgICBtYXJnaW46IC0uNWVtIDAgMWVtO1xuICAgICAgICBwYWRkaW5nOiAwOyB9XG4gICAgICAgIC5ubC1ydWxlIC5ubC1ydWxlLWJvZHkgZm9ybSAuZXJyb3JzIGxpIHtcbiAgICAgICAgICBjb2xvcjogI2YwMDsgfVxuICAgICAgLm5sLXJ1bGUgLm5sLXJ1bGUtYm9keSBmb3JtIGxhYmVsICsgLmVycm9ycyB7XG4gICAgICAgIG1hcmdpbjogLjI1ZW0gMCAuMTI1ZW07IH1cbiAgLm5sLXJ1bGUgLm5sLXJ1bGUtYWN0aW9ucyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjA3NSk7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gIC5ubC1ydWxlIC5zZXR0aW5ncy1sb2FkZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgY29sb3I6ICNiZmJmYmY7XG4gICAgZm9udC1zaXplOiAxMHB4O1xuICAgIHBhZGRpbmc6IDFlbSAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAubmwtcnVsZSAuc2V0dGluZ3MtbGlzdCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwOyB9XG4gICAgLm5sLXJ1bGUgLnNldHRpbmdzLWxpc3QgPiBsaSB7XG4gICAgICBwYWRkaW5nOiAuNWVtIDIuNWVtIC41ZW0gMWVtO1xuICAgICAgbWFyZ2luOiAwIDAgLjVlbTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTsgfVxuICAgICAgLm5sLXJ1bGUgLnNldHRpbmdzLWxpc3QgPiBsaSAucmVtb3ZlLXNldHRpbmcge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiA2cHg7XG4gICAgICAgIHRvcDogN3B4O1xuICAgICAgICB3aWR0aDogMThweDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBoZWlnaHQ6IDE4cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgY29sb3I6ICNmZjAwODA7XG4gICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjE1czsgfVxuICAgICAgICAubmwtcnVsZSAuc2V0dGluZ3MtbGlzdCA+IGxpIC5yZW1vdmUtc2V0dGluZyBpIHtcbiAgICAgICAgICBmb250LXNpemU6IDEuMzMzMzMzMzMzM2VtO1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0OyB9XG4gICAgICAgIC5ubC1ydWxlIC5zZXR0aW5ncy1saXN0ID4gbGkgLnJlbW92ZS1zZXR0aW5nOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDgpOyB9XG4gICAgLm5sLXJ1bGUgLnNldHRpbmdzLWxpc3QgLnNldHRpbmdzLXZhbHVlIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7IH1cbiAgICAgIC5ubC1ydWxlIC5zZXR0aW5ncy1saXN0IC5zZXR0aW5ncy12YWx1ZS5lZGl0YWJsZS12YWx1ZSB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCByZ2JhKDAsIDAsIDAsIDAuMik7IH1cbiAgICAgICAgLm5sLXJ1bGUgLnNldHRpbmdzLWxpc3QgLnNldHRpbmdzLXZhbHVlLmVkaXRhYmxlLXZhbHVlOjphZnRlciB7XG4gICAgICAgICAgY29udGVudDogJ2VkaXQnO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMS4xNjY2NjY2NjY3ZW07XG4gICAgICAgICAgY29sb3I6ICMwMDk4Yzc7XG4gICAgICAgICAgbWFyZ2luOiAwIDAgMnB4IC41ZW07XG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICAubmwtcnVsZSAuZGlzYWJsZWQtbGFiZWwge1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIHBhZGRpbmc6IC41ZW0gMS4yNWVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW46IDAgMjBweDtcbiAgICBiYWNrZ3JvdW5kOiAjZWM0MTdhO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5zb3J0aW5nIC5ubC1ydWxlIC5ubC1ydWxlLWNvbnRlbnQge1xuICAgIGN1cnNvcjogbW92ZTtcbiAgICBjdXJzb3I6IGdyYWI7XG4gICAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG4gICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4zKTsgfVxuICAgIC5zb3J0aW5nIC5ubC1ydWxlIC5ubC1ydWxlLWNvbnRlbnQ6YWN0aXZlIHtcbiAgICAgIGN1cnNvcjogZ3JhYmJpbmc7XG4gICAgICBjdXJzb3I6IC13ZWJraXQtZ3JhYmJpbmc7IH1cbiAgLnNvcnRpbmcgLm5sLXJ1bGUgLm5sLXJ1bGUtaGVhZCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLnNvcnRpbmcgLm5sLXJ1bGUgLm5sLXJ1bGUtaGVhZDo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiZGF0YTogaW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQU1BQUFBRENBWUFBQUJXS0xXL0FBQUFGMGxFUVZRSVcyTmtZR0Q0ejhEQXdNZ0FJMEFNREE0QUkzRUJCQ0tyT25RQUFBQUFTVVZPUks1Q1lJST1cIikgcmVwZWF0O1xuICAgICAgd2lkdGg6IDhweDtcbiAgICAgIGxlZnQ6IDRweDtcbiAgICAgIHRvcDogOHB4O1xuICAgICAgYm90dG9tOiA4cHg7XG4gICAgICBvcGFjaXR5OiAuMjU7IH1cbiAgICAuc29ydGluZyAubmwtcnVsZSAubmwtcnVsZS1oZWFkIC5ubC1kcm9wZG93biB7XG4gICAgICBvcGFjaXR5OiAuMztcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG4gIC5zb3J0aW5nIC5ubC1ydWxlIC5ubC1ydWxlLWFjdGlvbnMsXG4gIC5zb3J0aW5nIC5ubC1ydWxlIC5yZW1vdmUtc2V0dGluZyxcbiAgLnNvcnRpbmcgLm5sLXJ1bGUgLnNldHRpbmdzLWFjdGlvbixcbiAgLnNvcnRpbmcgLm5sLXJ1bGUgYS5qcy1saW5rLWxheW91dCxcbiAgLnNvcnRpbmcgLm5sLXJ1bGUgLmpzLW9wZW4tYm0ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuICAuc29ydGluZyAubmwtcnVsZSAuZWRpdGFibGUtdmFsdWUge1xuICAgIGJvcmRlcjogMCAhaW1wb3J0YW50OyB9XG4gICAgLnNvcnRpbmcgLm5sLXJ1bGUgLmVkaXRhYmxlLXZhbHVlOjphZnRlciB7XG4gICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cbiAgLnNvcnRpbmcgLm5sLXJ1bGUubmwtcnVsZS1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgLm5sLXJ1bGUudWktc29ydGFibGUtcGxhY2Vob2xkZXIge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGUgIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIG91dGxpbmU6IDFweCBkYXNoZWQgI2IzYmNjYjtcbiAgICBvdXRsaW5lLW9mZnNldDogNHB4OyB9XG4gICAgLm5sLXJ1bGUudWktc29ydGFibGUtcGxhY2Vob2xkZXIgKiB7XG4gICAgICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuLm5sLXJ1bGUtY29udGVudCB7XG4gIGZsZXg6IDE7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMik7IH1cblxuLm5sLXJ1bGVzIHtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiAxNjRweDtcbiAgYm90dG9tOiAzMHB4O1xuICBwYWRkaW5nOiA0cHggMzBweCA4MHB4IDMwcHg7IH1cbiAgLm5sLXJ1bGVzIC5ubC1ydWxlLWJldHdlZW4ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IC43NWVtIDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLnNvcnRpbmcgLm5sLXJ1bGVzIC5ubC1ydWxlLWJldHdlZW4ge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5ubC1ydWxlcyAubmwtcnVsZS1iZXR3ZWVuIGkge1xuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgIGZvbnQtc2l6ZTogMS43NWVtOyB9XG4gICAgLm5sLXJ1bGVzIC5ubC1ydWxlLWJldHdlZW4gLmhpZGRlbi1hbW91bnQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC01MCUsIDApO1xuICAgICAgZm9udC1zaXplOiAuOGVtO1xuICAgICAgbWFyZ2luLWxlZnQ6IDFlbTsgfVxuXG4ubmwtbm8taXRlbXMsXG4ubmwtbm8tZmlsdGVyZWQtaXRlbXMge1xuICBkaXNwbGF5OiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgbWFyZ2luOiAzZW0gMDsgfVxuICAubmwtbm8taXRlbXM6OmJlZm9yZSwgLm5sLW5vLWl0ZW1zOjphZnRlcixcbiAgLm5sLW5vLWZpbHRlcmVkLWl0ZW1zOjpiZWZvcmUsXG4gIC5ubC1uby1maWx0ZXJlZC1pdGVtczo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICctJztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luOiAwIC41ZW07IH1cblxuLm5vLWZpbHRlcmVkLWl0ZW1zIC5ubC1ydWxlLWJldHdlZW4ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5uby1maWx0ZXJlZC1pdGVtcyAubmwtbm8tZmlsdGVyZWQtaXRlbXMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4ubmwtbWFwcGluZ3MtZmlsdGVyIHtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG4jbGF5b3V0cyB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLmpzLWNoYW5nZS1sYXlvdXRzLXZpZXc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwidmlld19jb21meVwiO1xuICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAyNHB4OyB9XG5cbi5ubC1sYXlvdXQtaWNvbiB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNhMWExYTE7XG4gIHBhZGRpbmc6IDFweDtcbiAgb3BhY2l0eTogMC42NTsgfVxuICAubmwtbGF5b3V0LWljb24gLmxheW91dC1pY29uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDE1MCU7IH1cblxuLm5sLWxheW91dC1pbmZvIC5ubC1sYXlvdXQtZGVzY3JpcHRpb24gcCB7XG4gIG1hcmdpbjogMDtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDsgfVxuXG4ubmwtbGF5b3V0LWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBjb2xvcjogIzY2NjY2NjtcbiAgZm9udC1zaXplOiAxMnB4OyB9XG4gIC5ubC1sYXlvdXQtY29udGVudCAubmwtbGF5b3V0LW5hbWUge1xuICAgIGNvbG9yOiAjMzMzMzMzO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNzAwOyB9XG4gICAgLm5sLWxheW91dC1jb250ZW50IC5ubC1sYXlvdXQtbmFtZSBhIHtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5ubC1sYXlvdXQtY29udGVudCAudW5wdWJsaXNoZWQtbGFiZWwge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IDAgMWVtO1xuICAgIHBhZGRpbmc6IDAuNWVtIDAuN2VtO1xuICAgIGZvbnQtc2l6ZTogOHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQ6ICM2Njg4OTk7XG4gICAgbGluZS1oZWlnaHQ6IDEuMzc1O1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuLm5sLWxheW91dC1hY3Rpb25zIHtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7IH1cbiAgLm5sLWxheW91dC1hY3Rpb25zIC5ubC1sYXlvdXQtZGF0YSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4OiAxO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAubmwtbGF5b3V0LWFjdGlvbnMgLm5sLWxheW91dC1kYXRhIC5tZXRhLWluZm8ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAgIC5ubC1sYXlvdXQtYWN0aW9ucyAubmwtbGF5b3V0LWRhdGEgLm1ldGEtaW5mbyBpIHtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuMjVlbTsgfVxuICAubmwtbGF5b3V0LWFjdGlvbnMgLm5sLWRyb3Bkb3duIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoOyB9XG4gICAgLm5sLWxheW91dC1hY3Rpb25zIC5ubC1kcm9wZG93biAubmwtYnRuIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgbWluLXdpZHRoOiBhdXRvO1xuICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMDsgfVxuICAgICAgLm5sLWxheW91dC1hY3Rpb25zIC5ubC1kcm9wZG93biAubmwtYnRuIGkge1xuICAgICAgICBmb250LXNpemU6IGluaGVyaXQ7IH1cblxuLyogZ3JpZCB2aWV3ICovXG4ubmwtbGF5b3V0cy12aWV3LWdyaWQgLmpzLWNoYW5nZS1sYXlvdXRzLXZpZXc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwidmlld19saXN0XCI7IH1cblxuLm5sLWxheW91dHMtdmlldy1ncmlkIC5ubC1sYXlvdXRzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW46IDAgLTE1cHg7IH1cblxuLm5sLWxheW91dHMtdmlldy1ncmlkIC5ubC1sYXlvdXQge1xuICB3aWR0aDogMjUlO1xuICBwYWRkaW5nOiAwIDE1cHg7XG4gIGRpc3BsYXk6IGZsZXg7IH1cbiAgLm5sLWxheW91dHMtdmlldy1ncmlkIC5ubC1sYXlvdXQgLm5sLWxheW91dC1jb250ZW50IHtcbiAgICBib3gtc2hhZG93OiAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIG1hcmdpbjogMCAwIDMwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4OiAxO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgICAubmwtbGF5b3V0cy12aWV3LWdyaWQgLm5sLWxheW91dCAubmwtbGF5b3V0LWNvbnRlbnQ6aG92ZXIgLm5sLWxheW91dC1hY3Rpb25zIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDk4Yzc7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5ubC1sYXlvdXRzLXZpZXctZ3JpZCAubmwtbGF5b3V0IC5ubC1sYXlvdXQtY29udGVudCAudW5wdWJsaXNoZWQtbGFiZWwge1xuICAgICAgbWFyZ2luOiAxMHB4IDAgMDsgfVxuICAubmwtbGF5b3V0cy12aWV3LWdyaWQgLm5sLWxheW91dCAubmwtbGF5b3V0LWluZm8ge1xuICAgIHBhZGRpbmc6IDEwcHggMTBweCAxNXB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgZmxleDogMTsgfVxuICAgIC5ubC1sYXlvdXRzLXZpZXctZ3JpZCAubmwtbGF5b3V0IC5ubC1sYXlvdXQtaW5mbyAubmwtbGF5b3V0LXRleHQge1xuICAgICAgZmxleDogMTsgfVxuICAgIC5ubC1sYXlvdXRzLXZpZXctZ3JpZCAubmwtbGF5b3V0IC5ubC1sYXlvdXQtaW5mbyAubmwtbGF5b3V0LW5hbWUge1xuICAgICAgbWFyZ2luOiAwIDAgMC41ZW07IH1cbiAgICAubmwtbGF5b3V0cy12aWV3LWdyaWQgLm5sLWxheW91dCAubmwtbGF5b3V0LWluZm8gLm5sLWxheW91dC1tb2RpZmllZCB7XG4gICAgICBmb250LXNpemU6IDExcHg7XG4gICAgICBtYXJnaW46IDFlbSAwIDA7XG4gICAgICBjb2xvcjogIzk5OTk5OTsgfVxuICAgICAgLm5sLWxheW91dHMtdmlldy1ncmlkIC5ubC1sYXlvdXQgLm5sLWxheW91dC1pbmZvIC5ubC1sYXlvdXQtbW9kaWZpZWQgcCB7XG4gICAgICAgIG1hcmdpbjogMDsgfVxuICAubmwtbGF5b3V0cy12aWV3LWdyaWQgLm5sLWxheW91dCAubmwtbGF5b3V0LXR5cGUge1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIG1hcmdpbjogMCAxMHB4IDAgMDsgfVxuICAgIC5ubC1sYXlvdXRzLXZpZXctZ3JpZCAubmwtbGF5b3V0IC5ubC1sYXlvdXQtdHlwZSBwIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLm5sLWxheW91dHMtdmlldy1ncmlkIC5ubC1sYXlvdXQgLm5sLWxheW91dC1hY3Rpb25zIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDRkNGQ0O1xuICAgIGhlaWdodDogMzBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMnM7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAgIC5ubC1sYXlvdXRzLXZpZXctZ3JpZCAubmwtbGF5b3V0IC5ubC1sYXlvdXQtYWN0aW9ucyAubmwtbGF5b3V0LWRhdGEge1xuICAgICAgcGFkZGluZzogMCAxMHB4OyB9XG4gICAgICAubmwtbGF5b3V0cy12aWV3LWdyaWQgLm5sLWxheW91dCAubmwtbGF5b3V0LWFjdGlvbnMgLm5sLWxheW91dC1kYXRhIC5tZXRhLWluZm8gaSB7XG4gICAgICAgIGNvbG9yOiBpbmhlcml0OyB9XG4gICAgLm5sLWxheW91dHMtdmlldy1ncmlkIC5ubC1sYXlvdXQgLm5sLWxheW91dC1hY3Rpb25zIC5ubC1kcm9wZG93biB7XG4gICAgICBwb3NpdGlvbjogc3RhdGljOyB9XG4gICAgICAubmwtbGF5b3V0cy12aWV3LWdyaWQgLm5sLWxheW91dCAubmwtbGF5b3V0LWFjdGlvbnMgLm5sLWRyb3Bkb3duIC5ubC1idG4ge1xuICAgICAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgICAgIGNvbG9yOiBpbmhlcml0OyB9XG4gICAgICAubmwtbGF5b3V0cy12aWV3LWdyaWQgLm5sLWxheW91dCAubmwtbGF5b3V0LWFjdGlvbnMgLm5sLWRyb3Bkb3duIC5ubC1kcm9wZG93bi1tZW51IHtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgcmlnaHQ6IDA7IH1cblxuLm5sLWxheW91dHMtdmlldy1ncmlkIC5ubC1sYXlvdXRzLWhlYWQge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cblxuLm5sLWxheW91dHMtdmlldy1ncmlkIC5sYXlvdXQtc29ydGluZy1jb250cm9scyB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nOiAwIDFlbSAwIDA7IH1cbiAgLm5sLWxheW91dHMtdmlldy1ncmlkIC5sYXlvdXQtc29ydGluZy1jb250cm9scyAubmwtc2VsZWN0LCAubmwtbGF5b3V0cy12aWV3LWdyaWQgLmxheW91dC1zb3J0aW5nLWNvbnRyb2xzIC5ubC1ydWxlIC5ubC1ydWxlLWJvZHkgZm9ybSBzZWxlY3Q6bm90KFttdWx0aXBsZV0pLCAubmwtcnVsZSAubmwtcnVsZS1ib2R5IGZvcm0gLm5sLWxheW91dHMtdmlldy1ncmlkIC5sYXlvdXQtc29ydGluZy1jb250cm9scyBzZWxlY3Q6bm90KFttdWx0aXBsZV0pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG4gIC5ubC1sYXlvdXRzLXZpZXctZ3JpZCAubGF5b3V0LXNvcnRpbmctY29udHJvbHMgbGFiZWwge1xuICAgIG1hcmdpbjogMDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gICAgLm5sLWxheW91dHMtdmlldy1ncmlkIC5sYXlvdXQtc29ydGluZy1jb250cm9scyBsYWJlbCBpIHtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gIC5ubC1sYXlvdXRzLXZpZXctZ3JpZCAubGF5b3V0LXNvcnRpbmctY29udHJvbHMge1xuICAgIGZsb2F0OiBub25lO1xuICAgIHBhZGRpbmc6IDFlbSAwIDA7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNDAwcHgpIHtcbiAgLm5sLWxheW91dHMtdmlldy1ncmlkIC5ubC1sYXlvdXQge1xuICAgIHdpZHRoOiAzMy4zMzMzMzMzMzMzMzMlOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLm5sLWxheW91dHMtdmlldy1ncmlkIC5ubC1sYXlvdXQge1xuICAgIHdpZHRoOiA1MCU7IH0gfVxuXG4vKiBsaXN0IHZpZXcgKi9cbi5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LWluZm8ge1xuICBmbGV4OiAxO1xuICBwYWRkaW5nOiAwIDIwcHg7IH1cbiAgLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXQtaW5mbyAubmwtbGF5b3V0LXRleHQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4OiAxOyB9XG4gIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LWluZm8gLm5sLWxheW91dC1uYW1lIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICAgIHdpZHRoOiAzMCU7IH1cbiAgICAubmwtbGF5b3V0cy12aWV3LWxpc3QgLm5sLWxheW91dC1pbmZvIC5ubC1sYXlvdXQtbmFtZSAubmwtbGF5b3V0LWV4cG9ydC1jaGVja2JveCB7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LWluZm8gLm5sLWxheW91dC1kZXNjcmlwdGlvbiB7XG4gICAgZmxleDogMTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4OyB9XG4gIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LWluZm8gLm5sLWxheW91dC1tb2RpZmllZCB7XG4gICAgd2lkdGg6IDE4MHB4O1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7IH1cblxuLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXQtdHlwZSB7XG4gIG1hcmdpbjogMCAwIDAgMjBweDtcbiAgd2lkdGg6IDEwMHB4O1xuICBvcmRlcjogMTsgfVxuXG4ubmwtbGF5b3V0cy12aWV3LWxpc3QgLm5sLWxheW91dC1hY3Rpb25zIHtcbiAgb3JkZXI6IDI7XG4gIHdpZHRoOiAxODBweDsgfVxuICAubmwtbGF5b3V0cy12aWV3LWxpc3QgLm5sLWxheW91dC1hY3Rpb25zID4gKiB7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAubmwtbGF5b3V0cy12aWV3LWxpc3QgLm5sLWxheW91dC1hY3Rpb25zIC5ubC1sYXlvdXQtZGF0YSB7XG4gICAgZmxleDogMTtcbiAgICBwYWRkaW5nOiAwIDIwcHg7IH1cblxuLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXQgLm5sLWxheW91dC1jb250ZW50IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2Q5ZDlkOTtcbiAgbWFyZ2luOiAwIDAgLTFweDtcbiAgZGlzcGxheTogZmxleDtcbiAgbWluLWhlaWdodDogNjBweDsgfVxuICAubmwtbGF5b3V0cy12aWV3LWxpc3QgLm5sLWxheW91dCAubmwtbGF5b3V0LWNvbnRlbnQgPiAqIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXQgLm5sLWxheW91dC10eXBlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgaGVpZ2h0OiA2MHB4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0IC5ubC1sYXlvdXQtaWNvbiB7XG4gIHdpZHRoOiAzMnB4O1xuICBtYXJnaW46IDAgMTBweCAwIDA7IH1cblxuLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXQgLm5sLWxheW91dC1hY3Rpb25zIHtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7IH1cbiAgLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXQgLm5sLWxheW91dC1hY3Rpb25zIC5ubC1sYXlvdXQtZGF0YSAubWV0YS1pbmZvIGkge1xuICAgIGNvbG9yOiAjOTk5OTk5OyB9XG4gIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0IC5ubC1sYXlvdXQtYWN0aW9ucyAubmwtZHJvcGRvd24gLm5sLWJ0biB7XG4gICAgcGFkZGluZzogMCAwLjc1ZW07IH1cblxuLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXQgLm5sLWxheW91dC1kZXNjcmlwdGlvbiBwIHtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgbWF4LWhlaWdodDogM2VtO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0IC5ubC1sYXlvdXQtbW9kaWZpZWQge1xuICBmb250LXNpemU6IDExcHg7IH1cblxuLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXRzLWhlYWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXNpemU6IDEycHg7IH1cbiAgLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXRzLWhlYWQgPiAqIHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0cy1oZWFkIC5qcy1yZW9yZGVyLWxheW91dHMge1xuICAgIGNvbG9yOiAjNDA0MDQwO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgcGFkZGluZzogLjVlbSAxZW07XG4gICAgbWFyZ2luOiAwIC0xZW07XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuICAgIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0cy1oZWFkIC5qcy1yZW9yZGVyLWxheW91dHMgLnNvcnQtaWNvbiB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgd2lkdGg6IDZweDtcbiAgICAgIGhlaWdodDogMTNweDtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICBtYXJnaW46IDAgMCAwIC41ZW07XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgfVxuICAgICAgLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXRzLWhlYWQgLmpzLXJlb3JkZXItbGF5b3V0cyAuc29ydC1pY29uOjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC01MCUsIC01MCUsIDApO1xuICAgICAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItcmlnaHQ6IDRweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogOHB4IHNvbGlkIGN1cnJlbnRDb2xvcjsgfVxuICAgIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0cy1oZWFkIC5qcy1yZW9yZGVyLWxheW91dHMuYWN0aXZlIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBiYWNrZ3JvdW5kOiAjZTZlNWU1OyB9XG4gICAgICAubmwtbGF5b3V0cy12aWV3LWxpc3QgLm5sLWxheW91dHMtaGVhZCAuanMtcmVvcmRlci1sYXlvdXRzLmFjdGl2ZSAuc29ydC1pY29uIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gICAgICAubmwtbGF5b3V0cy12aWV3LWxpc3QgLm5sLWxheW91dHMtaGVhZCAuanMtcmVvcmRlci1sYXlvdXRzLmFjdGl2ZS5zb3J0aW5nLWFzYyAuc29ydC1pY29uOjpiZWZvcmUge1xuICAgICAgICBib3JkZXItdG9wOiA4cHggc29saWQgY3VycmVudENvbG9yO1xuICAgICAgICBib3JkZXItYm90dG9tOiAwOyB9XG5cbi5ubC1sYXlvdXRzLXZpZXctbGlzdCAubGF5b3V0LXNvcnRpbmctY29udHJvbHMge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LXR5cGUge1xuICAgIG1hcmdpbjogMDtcbiAgICB3aWR0aDogODBweDsgfVxuICAgIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LXR5cGUgcCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LWFjdGlvbnMge1xuICAgIHdpZHRoOiAxNDBweDtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LWluZm8gLm5sLWxheW91dC1uYW1lIHtcbiAgICB3aWR0aDogNDAlOyB9XG4gIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LWluZm8gLm5sLWxheW91dC1tb2RpZmllZCB7XG4gICAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgICB3aWR0aDogMTAwcHg7IH1cbiAgLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXRzLWhlYWQgLmpzLXJlb3JkZXItbGF5b3V0cyB7XG4gICAgcGFkZGluZzogLjVlbSAuNzVlbTtcbiAgICBtYXJnaW46IDAgLS43NWVtOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLm5sLWxheW91dHMtdmlldy1saXN0IC5ubC1sYXlvdXQtaW5mbyB7XG4gICAgcGFkZGluZzogMCAwIDAgMjBweDsgfVxuICAgIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LWluZm8gLm5sLWxheW91dC1uYW1lIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgICB3aWR0aDogYXV0bzsgfVxuICAgIC5ubC1sYXlvdXRzLXZpZXctbGlzdCAubmwtbGF5b3V0LWluZm8gLm5sLWxheW91dC1kZXNjcmlwdGlvbiB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLm5sLXNoYXJlZC1sYXlvdXRzIC5tZXRhLWluZm8gaSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMC4xZW0sIDApIHJvdGF0ZSgyMTBkZWcpOyB9XG5cbi5ubC1sYXlvdXQtZXhwb3J0LWNoZWNrYm94IHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICAubmwtbGF5b3V0LWV4cG9ydC1jaGVja2JveCBpbnB1dCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XG4gICAgb3BhY2l0eTogMDtcbiAgICBsZWZ0OiAtOTk5OWVtOyB9XG4gICAgLm5sLWxheW91dC1leHBvcnQtY2hlY2tib3ggaW5wdXQgKyBsYWJlbCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWluLWhlaWdodDogMWVtO1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9XG4gICAgICAubmwtbGF5b3V0LWV4cG9ydC1jaGVja2JveCBpbnB1dCArIGxhYmVsOjpiZWZvcmUge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBjb250ZW50OiBcImNoZWNrX2JveF9vdXRsaW5lX2JsYW5rXCI7IH1cbiAgICAubmwtbGF5b3V0LWV4cG9ydC1jaGVja2JveCBpbnB1dDpjaGVja2VkICsgbGFiZWw6OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcImNoZWNrX2JveFwiO1xuICAgICAgY29sb3I6ICMwMDk4Yzc7IH1cbiAgICAubmwtbGF5b3V0LWV4cG9ydC1jaGVja2JveCBpbnB1dDpkaXNhYmxlZCArIGxhYmVsIHtcbiAgICAgIG9wYWNpdHk6IC4yO1xuICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDsgfVxuICAubGF5b3V0LWV4cG9ydCAubmwtbGF5b3V0LWV4cG9ydC1jaGVja2JveCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi5ubC1tb2RhbC1jYWNoZSAubmwtbW9kYWwge1xuICB3aWR0aDogNjAwcHg7IH1cbiAgLm5sLW1vZGFsLWNhY2hlIC5ubC1tb2RhbCAubmwtbW9kYWwtYm9keSB7XG4gICAgcGFkZGluZzogMDsgfVxuICAgIC5ubC1tb2RhbC1jYWNoZSAubmwtbW9kYWwgLm5sLW1vZGFsLWJvZHkgLmVycm9ycyB7XG4gICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgbWFyZ2luOiAwOyB9XG5cbi5ubC1jYWNoZXMtdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgbWFyZ2luLXRvcDogLTFweDsgfVxuICAubmwtY2FjaGVzLXRhYmxlIHRoLFxuICAubmwtY2FjaGVzLXRhYmxlIHRkIHtcbiAgICBwYWRkaW5nOiAxNXB4IDE1cHggMTRweCAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMS41OyB9XG4gICAgLm5sLWNhY2hlcy10YWJsZSB0aDpmaXJzdC1jaGlsZCxcbiAgICAubmwtY2FjaGVzLXRhYmxlIHRkOmZpcnN0LWNoaWxkIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMTVweDsgfVxuICAubmwtY2FjaGVzLXRhYmxlIHRoIHtcbiAgICBiYWNrZ3JvdW5kOiAjZjJmMmYyO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gICAgLm5sLWNhY2hlcy10YWJsZSB0aCAubmwtYnRuIHtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDsgfVxuICAubmwtY2FjaGVzLXRhYmxlIHRkIHtcbiAgICBjb2xvcjogIzRkNGM0YzsgfVxuICAgIC5ubC1jYWNoZXMtdGFibGUgdGQgcCB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBsaW5lLWhlaWdodDogaW5oZXJpdDsgfVxuICAgIC5ubC1jYWNoZXMtdGFibGUgdGQubmwtY2FjaGVzLXR0bCB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH1cbiAgLm5sLWNhY2hlcy10YWJsZSAubmwtY2FjaGVzLWFjdGlvbiB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgLm5sLWNhY2hlcy10YWJsZSB0Ym9keSB0ciB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkMWQxZDE7IH1cbiAgICAubmwtY2FjaGVzLXRhYmxlIHRib2R5IHRyOmxhc3QtY2hpbGQge1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTsgfVxuICAubmwtY2FjaGVzLXRhYmxlIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSArIGxhYmVsIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtaW5kZW50OiAtOTk5ZW07IH1cbiAgICAubmwtY2FjaGVzLXRhYmxlIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSArIGxhYmVsOjpiZWZvcmUge1xuICAgICAgdGV4dC1pbmRlbnQ6IDA7IH1cbiAgICAubmwtbW9kYWwtbWFzayAubmwtY2FjaGVzLXRhYmxlIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSArIGxhYmVsIHtcbiAgICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgICAgIHdpZHRoOiAyZW07XG4gICAgICBoZWlnaHQ6IDJlbTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4ubmwtY2FjaGVzLWVtcHR5IHtcbiAgcGFkZGluZzogMTVweDtcbiAgbWFyZ2luOiAxZW0gMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi8qIVxuICogRGF0ZXRpbWVwaWNrZXIgZm9yIEJvb3RzdHJhcCAzXG4gKiB2ZXJzaW9uIDogNC4xNy40N1xuICogaHR0cHM6Ly9naXRodWIuY29tL0VvbmFzZGFuL2Jvb3RzdHJhcC1kYXRldGltZXBpY2tlci9cbiAqL1xuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0LmRyb3Bkb3duLW1lbnUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAycHggMDtcbiAgcGFkZGluZzogNHB4O1xuICB3aWR0aDogMTllbTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQuZHJvcGRvd24tbWVudS50aW1lcGlja2VyLXNicyB7XG4gICAgd2lkdGg6IDM4ZW07IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQuZHJvcGRvd24tbWVudS50aW1lcGlja2VyLXNicyB7XG4gICAgd2lkdGg6IDM4ZW07IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0LmRyb3Bkb3duLW1lbnUudGltZXBpY2tlci1zYnMge1xuICAgIHdpZHRoOiAzOGVtOyB9IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQuZHJvcGRvd24tbWVudTpiZWZvcmUsXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldC5kcm9wZG93bi1tZW51OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0LmRyb3Bkb3duLW1lbnUuYm90dG9tOmJlZm9yZSB7XG4gIGJvcmRlci1sZWZ0OiA3cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yaWdodDogN3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItYm90dG9tOiA3cHggc29saWQgI2NjYztcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xuICB0b3A6IC03cHg7XG4gIGxlZnQ6IDdweDsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldC5kcm9wZG93bi1tZW51LmJvdHRvbTphZnRlciB7XG4gIGJvcmRlci1sZWZ0OiA2cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yaWdodDogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItYm90dG9tOiA2cHggc29saWQgd2hpdGU7XG4gIHRvcDogLTZweDtcbiAgbGVmdDogOHB4OyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0LmRyb3Bkb3duLW1lbnUudG9wOmJlZm9yZSB7XG4gIGJvcmRlci1sZWZ0OiA3cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yaWdodDogN3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wOiA3cHggc29saWQgI2NjYztcbiAgYm9yZGVyLXRvcC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBib3R0b206IC03cHg7XG4gIGxlZnQ6IDZweDsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldC5kcm9wZG93bi1tZW51LnRvcDphZnRlciB7XG4gIGJvcmRlci1sZWZ0OiA2cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yaWdodDogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wOiA2cHggc29saWQgd2hpdGU7XG4gIGJvdHRvbTogLTZweDtcbiAgbGVmdDogN3B4OyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0LmRyb3Bkb3duLW1lbnUucHVsbC1yaWdodDpiZWZvcmUge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogNnB4OyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0LmRyb3Bkb3duLW1lbnUucHVsbC1yaWdodDphZnRlciB7XG4gIGxlZnQ6IGF1dG87XG4gIHJpZ2h0OiA3cHg7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgLmxpc3QtdW5zdHlsZWQge1xuICBtYXJnaW46IDA7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgYVtkYXRhLWFjdGlvbl0ge1xuICBwYWRkaW5nOiA2cHggMDsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCBhW2RhdGEtYWN0aW9uXTphY3RpdmUge1xuICBib3gtc2hhZG93OiBub25lOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC50aW1lcGlja2VyLWhvdXIsXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAudGltZXBpY2tlci1taW51dGUsXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAudGltZXBpY2tlci1zZWNvbmQge1xuICB3aWR0aDogNTRweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMS4yZW07XG4gIG1hcmdpbjogMDsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCBidXR0b25bZGF0YS1hY3Rpb25dIHtcbiAgcGFkZGluZzogNnB4OyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5idG5bZGF0YS1hY3Rpb249XCJpbmNyZW1lbnRIb3Vyc1wiXTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJJbmNyZW1lbnQgSG91cnNcIjsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAuYnRuW2RhdGEtYWN0aW9uPVwiaW5jcmVtZW50TWludXRlc1wiXTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJJbmNyZW1lbnQgTWludXRlc1wiOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5idG5bZGF0YS1hY3Rpb249XCJkZWNyZW1lbnRIb3Vyc1wiXTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJEZWNyZW1lbnQgSG91cnNcIjsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAuYnRuW2RhdGEtYWN0aW9uPVwiZGVjcmVtZW50TWludXRlc1wiXTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJEZWNyZW1lbnQgTWludXRlc1wiOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5idG5bZGF0YS1hY3Rpb249XCJzaG93SG91cnNcIl06OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBwYWRkaW5nOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG4gIGNvbnRlbnQ6IFwiU2hvdyBIb3Vyc1wiOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5idG5bZGF0YS1hY3Rpb249XCJzaG93TWludXRlc1wiXTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJTaG93IE1pbnV0ZXNcIjsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAuYnRuW2RhdGEtYWN0aW9uPVwidG9nZ2xlUGVyaW9kXCJdOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xuICBjb250ZW50OiBcIlRvZ2dsZSBBTS9QTVwiOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5idG5bZGF0YS1hY3Rpb249XCJjbGVhclwiXTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJDbGVhciB0aGUgcGlja2VyXCI7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgLmJ0bltkYXRhLWFjdGlvbj1cInRvZGF5XCJdOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xuICBjb250ZW50OiBcIlNldCB0aGUgZGF0ZSB0byB0b2RheVwiOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5waWNrZXItc3dpdGNoIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5waWNrZXItc3dpdGNoOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xuICBjb250ZW50OiBcIlRvZ2dsZSBEYXRlIGFuZCBUaW1lIFNjcmVlbnNcIjsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAucGlja2VyLXN3aXRjaCB0ZCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogYXV0bztcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgLnBpY2tlci1zd2l0Y2ggdGQgc3BhbiB7XG4gIGxpbmUtaGVpZ2h0OiAyLjU7XG4gIGhlaWdodDogMi41ZW07XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMDsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZCxcbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRoIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA0cHg7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGgge1xuICBoZWlnaHQ6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICB3aWR0aDogMjBweDsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0aC5waWNrZXItc3dpdGNoIHtcbiAgd2lkdGg6IDE0NXB4OyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRoLmRpc2FibGVkLFxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGguZGlzYWJsZWQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogIzc3Nzc3NztcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0aC5wcmV2OjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xuICBjb250ZW50OiBcIlByZXZpb3VzIE1vbnRoXCI7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGgubmV4dDo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJOZXh0IE1vbnRoXCI7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGhlYWQgdHI6Zmlyc3QtY2hpbGQgdGgge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGhlYWQgdHI6Zmlyc3QtY2hpbGQgdGg6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZWVlZWVlOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkIHtcbiAgaGVpZ2h0OiA1NHB4O1xuICBsaW5lLWhlaWdodDogNTRweDtcbiAgd2lkdGg6IDU0cHg7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQuY3cge1xuICBmb250LXNpemU6IC44ZW07XG4gIGhlaWdodDogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGNvbG9yOiAjNzc3Nzc3OyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLmRheSB7XG4gIGhlaWdodDogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIHdpZHRoOiAyMHB4OyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLmRheTpob3Zlcixcbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLmhvdXI6aG92ZXIsXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZC5taW51dGU6aG92ZXIsXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZC5zZWNvbmQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZWVlZWVlO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQub2xkLFxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQubmV3IHtcbiAgY29sb3I6ICM3Nzc3Nzc7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQudG9kYXkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQudG9kYXk6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyOiBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXdpZHRoOiAwIDAgN3B4IDdweDtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzMzN2FiNztcbiAgYm9yZGVyLXRvcC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogNHB4O1xuICByaWdodDogNHB4OyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLmFjdGl2ZSxcbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLmFjdGl2ZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzdhYjc7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZC5hY3RpdmUudG9kYXk6YmVmb3JlIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2ZmZjsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZC5kaXNhYmxlZCxcbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLmRpc2FibGVkOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICM3Nzc3Nzc7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQgc3BhbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDU0cHg7XG4gIGhlaWdodDogNTRweDtcbiAgbGluZS1oZWlnaHQ6IDU0cHg7XG4gIG1hcmdpbjogMnB4IDEuNXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDRweDsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZCBzcGFuOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2VlZWVlZTsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZCBzcGFuLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzdhYjc7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZCBzcGFuLm9sZCB7XG4gIGNvbG9yOiAjNzc3Nzc3OyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkIHNwYW4uZGlzYWJsZWQsXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZCBzcGFuLmRpc2FibGVkOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICM3Nzc3Nzc7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7IH1cblxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQudXNldHdlbnR5Zm91ciB0ZC5ob3VyIHtcbiAgaGVpZ2h0OiAyN3B4O1xuICBsaW5lLWhlaWdodDogMjdweDsgfVxuXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldC53aWRlciB7XG4gIHdpZHRoOiAyMWVtOyB9XG5cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5kYXRlcGlja2VyLWRlY2FkZXMgLmRlY2FkZSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjhlbSAhaW1wb3J0YW50OyB9XG5cbi5pbnB1dC1ncm91cC5kYXRlIC5pbnB1dC1ncm91cC1hZGRvbiB7XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuXG4uc3Itb25seSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwOyB9XG5cbi5tYXRlcmlhbC1pY29uLWxlZnQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdrZXlib2FyZF9hcnJvd19sZWZ0JzsgfVxuXG4ubWF0ZXJpYWwtaWNvbi1yaWdodDo6YmVmb3JlIHtcbiAgY29udGVudDogJ2tleWJvYXJkX2Fycm93X3JpZ2h0JzsgfVxuXG4ubWF0ZXJpYWwtaWNvbi11cDo6YmVmb3JlIHtcbiAgY29udGVudDogJ2tleWJvYXJkX2Fycm93X3VwJzsgfVxuXG4ubWF0ZXJpYWwtaWNvbi1kb3duOjpiZWZvcmUge1xuICBjb250ZW50OiAna2V5Ym9hcmRfYXJyb3dfZG93bic7IH1cblxuLm1hdGVyaWFsLWljb24tdGltZTo6YmVmb3JlIHtcbiAgY29udGVudDogJ2FjY2Vzc190aW1lJzsgfVxuXG4ubWF0ZXJpYWwtaWNvbi1jYWxlbmRhcjo6YmVmb3JlIHtcbiAgY29udGVudDogJ3RvZGF5JzsgfVxuXG4ubWF0ZXJpYWwtaWNvbi1kb3duOjpiZWZvcmUge1xuICBjb250ZW50OiAna2V5Ym9hcmRfYXJyb3dfZG93bic7IH1cblxuLm1hdGVyaWFsLWljb24tdHJhc2g6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdkZWxldGUnOyB9XG5cbi5tYXRlcmlhbC1pY29uLWNsb3NlOjpiZWZvcmUge1xuICBjb250ZW50OiAnY2xvc2UnOyB9XG5cbi5tYXRlcmlhbC1pY29uLXRvZGF5OjpiZWZvcmUge1xuICBjb250ZW50OiAnbXlfbG9jYXRpb24nOyB9XG5cbi5kYXRldGltZXBpY2tlciB7XG4gIHBhZGRpbmctcmlnaHQ6IDJyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuZGF0ZXRpbWVwaWNrZXIgLmlucHV0LWdyb3VwIHtcbiAgICBmbGV4OiAxOyB9XG4gIC5kYXRldGltZXBpY2tlciAuanMtY2xlYXItaW5wdXQge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHdpZHRoOiAycmVtO1xuICAgIHRvcDogNTAlO1xuICAgIGhlaWdodDogMnJlbTtcbiAgICBtYXJnaW4tdG9wOiAtMXJlbTtcbiAgICBib3JkZXI6IDA7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuMjVzO1xuICAgIGNvbG9yOiAjZDAwMjFiOyB9XG4gICAgLmRhdGV0aW1lcGlja2VyIC5qcy1jbGVhci1pbnB1dCBpIHtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgICAuZGF0ZXRpbWVwaWNrZXIgLmpzLWNsZWFyLWlucHV0OmZvY3VzIHtcbiAgICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgLmRhdGV0aW1lcGlja2VyIC5kYXRldGltZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbjogMCAwIC41ZW07IH1cbiAgICAuZGF0ZXRpbWVwaWNrZXIgLmRhdGV0aW1lIGlucHV0W3R5cGU9XCJ0ZXh0XCJdIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDNlbTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5kYXRldGltZXBpY2tlciAuZGF0ZXRpbWUgLmlucHV0LWljb24ge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgIHBhZGRpbmc6IC4yNWVtIC41ZW07XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgfVxuICAuZGF0ZXRpbWVwaWNrZXIgLmRhdGV0aW1lLWZvcm1hdHRlZCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC05OTllbTtcbiAgICB0b3A6IC05OTllbTtcbiAgICB3aWR0aDogMHB4ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAwcHggIWltcG9ydGFudDtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgLmRhdGV0aW1lcGlja2VyLmRhdGUtZW50ZXJlZCAuanMtY2xlYXItaW5wdXQge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgcG9pbnRlci1ldmVudHM6IGluaXRpYWw7IH1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxld29KSW5abGNuTnBiMjRpT2lBekxBb0pJbVpwYkdVaU9pQWljM1I1YkdVdVkzTnpJaXdLQ1NKemIzVnlZMlZ6SWpvZ1d3b0pDU0l1TGk4dUxpOVNaWE52ZFhKalpYTXZjMkZ6Y3k5emRIbHNaUzV6WTNOeklpd0tDUWtpTGk0dkxpNHZMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMMjV2Y20xaGJHbDZaUzF6WTNOekwzTmhjM012WDI1dmNtMWhiR2w2WlM1elkzTnpJaXdLQ1FraUxpNHZMaTR2TGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDI1dmNtMWhiR2w2WlMxelkzTnpMM05oYzNNdmJtOXliV0ZzYVhwbEwxOTJZWEpwWVdKc1pYTXVjMk56Y3lJc0Nna0pJaTR1THk0dUx5NHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXViM0p0WVd4cGVtVXRjMk56Y3k5ellYTnpMMjV2Y20xaGJHbDZaUzlmZG1WeWRHbGpZV3d0Y21oNWRHaHRMbk5qYzNNaUxBb0pDU0l1TGk4dUxpOHVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZibTl5YldGc2FYcGxMWE5qYzNNdmMyRnpjeTl1YjNKdFlXeHBlbVV2WDI1dmNtMWhiR2w2WlMxdGFYaHBiaTV6WTNOeklpd0tDUWtpTGk0dkxpNHZVbVZ6YjNWeVkyVnpMM05oYzNNdlgyWnZiblJ6TG5OamMzTWlMQW9KQ1NJdUxpOHVMaTlTWlhOdmRYSmpaWE12YzJGemN5OWZkbUZ5YVdGaWJHVnpMbk5qYzNNaUxBb0pDU0l1TGk4dUxpOVNaWE52ZFhKalpYTXZjMkZ6Y3k5ZlozSnBaQzV6WTNOeklpd0tDUWtpTGk0dkxpNHZVbVZ6YjNWeVkyVnpMM05oYzNNdlgySmhjMlV1YzJOemN5SXNDZ2tKSWk0dUx5NHVMMUpsYzI5MWNtTmxjeTl6WVhOekwxOXRiMlJoYkM1elkzTnpJaXdLQ1FraUxpNHZMaTR2VW1WemIzVnlZMlZ6TDNOaGMzTXZYM1J2YjJ4MGFYQXVjMk56Y3lJc0Nna0pJaTR1THk0dUwxSmxjMjkxY21ObGN5OXpZWE56TDE5a2NtOXdaRzkzYmk1elkzTnpJaXdLQ1FraUxpNHZMaTR2VW1WemIzVnlZMlZ6TDNOaGMzTXZYMlZzWlcxbGJuUnpMbk5qYzNNaUxBb0pDU0l1TGk4dUxpOVNaWE52ZFhKalpYTXZjMkZ6Y3k5ZmNuVnNaWE11YzJOemN5SXNDZ2tKSWk0dUx5NHVMMUpsYzI5MWNtTmxjeTl6WVhOekwxOXNZWGx2ZFhSekxuTmpjM01pTEFvSkNTSXVMaTh1TGk5U1pYTnZkWEpqWlhNdmMyRnpjeTlmWTJGamFHVnpMbk5qYzNNaUxBb0pDU0l1TGk4dUxpOVNaWE52ZFhKalpYTXZjMkZ6Y3k5ZlpHRjBaWFJwYldWZmNHbGphMlZ5TG5OamMzTWlMQW9KQ1NJdUxpOHVMaTh1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12Wlc5dVlYTmtZVzR0WW05dmRITjBjbUZ3TFdSaGRHVjBhVzFsY0dsamEyVnlMMkoxYVd4a0wyTnpjeTlpYjI5MGMzUnlZWEF0WkdGMFpYUnBiV1Z3YVdOclpYSXVZM056SWdvSlhTd0tDU0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZJRnNLQ1FraVFHbHRjRzl5ZENCY0lpNHVMeTR1THk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5dWIzSnRZV3hwZW1VdGMyTnpjeTl6WVhOekwyNXZjbTFoYkdsNlpWd2lPMXh1UUdsdVkyeDFaR1VnYm05eWJXRnNhWHBsS0NrN1hHNWNia0JwYlhCdmNuUWdYQ0ptYjI1MGMxd2lPMXh1UUdsdGNHOXlkQ0JjSW5aaGNtbGhZbXhsYzF3aU8xeHVRR2x0Y0c5eWRDQmNJbWR5YVdSY0lqdGNia0JwYlhCdmNuUWdYQ0ppWVhObFhDSTdYRzVBYVcxd2IzSjBJRndpYlc5a1lXeGNJanRjYmtCcGJYQnZjblFnWENKMGIyOXNkR2x3WENJN1hHNUFhVzF3YjNKMElGd2laSEp2Y0dSdmQyNWNJanRjYmtCcGJYQnZjblFnWENKbGJHVnRaVzUwYzF3aU8xeHVRR2x0Y0c5eWRDQmNJbkoxYkdWelhDSTdYRzVBYVcxd2IzSjBJRndpYkdGNWIzVjBjMXdpTzF4dVFHbHRjRzl5ZENCY0ltTmhZMmhsYzF3aU8xeHVRR2x0Y0c5eWRDQmNJbVJoZEdWMGFXMWxYM0JwWTJ0bGNsd2lPMXh1SWl3S0NRa2lRR2x0Y0c5eWRDQW5ibTl5YldGc2FYcGxMM1poY21saFlteGxjeWM3WEc1QWFXMXdiM0owSUNkdWIzSnRZV3hwZW1VdmRtVnlkR2xqWVd3dGNtaDVkR2h0Snp0Y2JrQnBiWEJ2Y25RZ0oyNXZjbTFoYkdsNlpTOXViM0p0WVd4cGVtVXRiV2w0YVc0bk8xeHVJaXdLQ1FraUx5OWNiaTh2SUZaaGNtbGhZbXhsYzF4dUx5OWNiaTh2SUZsdmRTQmpZVzRnYjNabGNuSnBaR1VnZEdobElHUmxabUYxYkhRZ2RtRnNkV1Z6SUdKNUlITmxkSFJwYm1jZ2RHaGxJSFpoY21saFlteGxjeUJwYmlCNWIzVnlJRk5oYzNOY2JpOHZJR0psWm05eVpTQnBiWEJ2Y25ScGJtY2dkR2hsSUc1dmNtMWhiR2w2WlMxelkzTnpJR3hwWW5KaGNua3VYRzVjYmk4dklGUm9aU0JtYjI1MElITnBlbVVnYzJWMElHOXVJSFJvWlNCeWIyOTBJR2gwYld3Z1pXeGxiV1Z1ZEM1Y2JpUmlZWE5sTFdadmJuUXRjMmw2WlRvZ01UWndlQ0FoWkdWbVlYVnNkRHRjYmx4dUx5OGdWR2hsSUdKaGMyVWdiR2x1WlNCb1pXbG5hSFFnWkdWMFpYSnRhVzVsY3lCMGFHVWdZbUZ6YVdNZ2RXNXBkQ0J2WmlCMlpYSjBhV05oYkNCeWFIbDBhRzB1WEc0a1ltRnpaUzFzYVc1bExXaGxhV2RvZERvZ01qUndlQ0FoWkdWbVlYVnNkRHRjYmx4dUx5OGdWR2hsSUd4bGJtZDBhQ0IxYm1sMElHbHVJSGRvYVdOb0lIUnZJRzkxZEhCMWRDQjJaWEowYVdOaGJDQnlhSGwwYUcwZ2RtRnNkV1Z6TGx4dUx5OGdVM1Z3Y0c5eWRHVmtJSFpoYkhWbGN6b2djSGdzSUdWdExDQnlaVzB1WEc0a1ltRnpaUzExYm1sME9pQW5aVzBuSUNGa1pXWmhkV3gwTzF4dVhHNHZMeUJVYUdVZ1pHVm1ZWFZzZENCbWIyNTBJR1poYldsc2VTNWNiaVJpWVhObExXWnZiblF0Wm1GdGFXeDVPaUJ1ZFd4c0lDRmtaV1poZFd4ME8xeHVYRzR2THlCVWFHVWdabTl1ZENCemFYcGxjeUJtYjNJZ2FERXRhRFl1WEc0a2FERXRabTl1ZEMxemFYcGxPaUF5SUNBZ0lDb2dKR0poYzJVdFptOXVkQzF6YVhwbElDRmtaV1poZFd4ME8xeHVKR2d5TFdadmJuUXRjMmw2WlRvZ01TNDFJQ0FxSUNSaVlYTmxMV1p2Ym5RdGMybDZaU0FoWkdWbVlYVnNkRHRjYmlSb015MW1iMjUwTFhOcGVtVTZJREV1TVRjZ0tpQWtZbUZ6WlMxbWIyNTBMWE5wZW1VZ0lXUmxabUYxYkhRN1hHNGthRFF0Wm05dWRDMXphWHBsT2lBeElDQWdJQ29nSkdKaGMyVXRabTl1ZEMxemFYcGxJQ0ZrWldaaGRXeDBPMXh1SkdnMUxXWnZiblF0YzJsNlpUb2dNQzQ0TXlBcUlDUmlZWE5sTFdadmJuUXRjMmw2WlNBaFpHVm1ZWFZzZER0Y2JpUm9OaTFtYjI1MExYTnBlbVU2SURBdU5qY2dLaUFrWW1GelpTMW1iMjUwTFhOcGVtVWdJV1JsWm1GMWJIUTdYRzVjYmk4dklGUm9aU0JoYlc5MWJuUWdiR2x6ZEhNZ1lXNWtJR0pzYjJOcmNYVnZkR1Z6SUdGeVpTQnBibVJsYm5SbFpDNWNiaVJwYm1SbGJuUXRZVzF2ZFc1ME9pQTBNSEI0SUNGa1pXWmhkV3gwTzF4dVhHNHZMeUJVYUdVZ1ptOXNiRzkzYVc1bklIWmhjbWxoWW14bElHTnZiblJ5YjJ4eklIZG9aWFJvWlhJZ2JtOXliV0ZzYVhwbExYTmpjM01nZDJsc2JDQnZkWFJ3ZFhSY2JpOHZJR1p2Ym5RdGMybDZaWE1zSUd4cGJtVXRhR1ZwWjJoMGN5QmhibVFnWW14dlkyc3RiR1YyWld3Z2RHOXdMMkp2ZEhSdmJTQnRZWEpuYVc1eklIUm9ZWFFnWm05eWJTQmhJR0poYzJsalhHNHZMeUIyWlhKMGFXTmhiQ0J5YUhsMGFHMGdiMjRnZEdobElIQmhaMlVzSUhkb2FXTm9JR1JwWm1abGNuTWdabkp2YlNCMGFHVWdiM0pwWjJsdVlXd2dUbTl5YldGc2FYcGxMbU56Y3k1Y2JpOHZJRWh2ZDJWMlpYSXNJR05vWVc1bmFXNW5JR0Z1ZVNCdlppQjBhR1VnZG1GeWFXRmliR1Z6SUdGaWIzWmxJSGRwYkd3Z1kyRjFjMlZjYmk4dklDUnViM0p0WVd4cGVtVXRkbVZ5ZEdsallXd3RjbWg1ZEdodElIUnZJR0psSUdGMWRHOXRZWFJwWTJGc2JIa2djMlYwSUhSdklIUnlkV1V1WEc0a2JtOXliV0ZzYVhwbExYWmxjblJwWTJGc0xYSm9lWFJvYlRvZ1ptRnNjMlVnSVdSbFptRjFiSFE3WEc0aUxBb0pDU0l2TDF4dUx5OGdWbVZ5ZEdsallXd2dVbWg1ZEdodFhHNHZMMXh1THk4Z1ZHaHBjeUJwY3lCMGFHVWdiV2x1YVcxaGJDQmhiVzkxYm5RZ2IyWWdZMjlrWlNCdVpXVmtaV1FnZEc4Z1kzSmxZWFJsSUhabGNuUnBZMkZzSUhKb2VYUm9iU0JwYmlCdmRYSmNiaTh2SUVOVFV5NGdTV1lnZVc5MUlHRnlaU0JzYjI5cmFXNW5JR1p2Y2lCaElISnZZblZ6ZENCemIyeDFkR2x2Yml3Z2JHOXZheUJoZENCMGFHVWdaWGhqWld4c1pXNTBJRlI1Y0dWNVhHNHZMeUJzYVdKeVlYSjVMaUJBYzJWbElHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOXFjSFJoY21GdWRHOHZkSGx3WlhsY2JseHVRR1oxYm1OMGFXOXVJRzV2Y20xaGJHbDZaUzF5YUhsMGFHMG9KSFpoYkhWbExDQWtjbVZzWVhScGRtVXRkRzg2SUNSaVlYTmxMV1p2Ym5RdGMybDZaU3dnSkhWdWFYUTZJQ1JpWVhObExYVnVhWFFwSUh0Y2JpQWdRR2xtSUhWdWFYUW9KSFpoYkhWbEtTQWhQU0J3ZUNCN1hHNGdJQ0FnUUdWeWNtOXlJRndpVkdobElHNXZjbTFoYkdsNlpTQjJaWEowYVdOaGJDMXlhSGwwYUcwZ2JXOWtkV3hsSUc5dWJIa2djM1Z3Y0c5eWRITWdjSGdnYVc1d2RYUnpMaUJVYUdVZ2RIbHdaWGtnYkdsaWNtRnllU0JwY3lCaVpYUjBaWEl1WENJN1hHNGdJSDFjYmlBZ1FHbG1JQ1IxYm1sMElEMDlJSEpsYlNCN1hHNGdJQ0FnUUhKbGRIVnliaUFvSkhaaGJIVmxJQzhnSkdKaGMyVXRabTl1ZEMxemFYcGxLU0FxSURGeVpXMDdYRzRnSUgxY2JpQWdRR1ZzYzJVZ2FXWWdKSFZ1YVhRZ1BUMGdaVzBnZTF4dUlDQWdJRUJ5WlhSMWNtNGdLQ1IyWVd4MVpTQXZJQ1J5Wld4aGRHbDJaUzEwYnlrZ0tpQXhaVzA3WEc0Z0lIMWNiaUFnUUdWc2MyVWdleUF2THlBa2RXNXBkQ0E5UFNCd2VGeHVJQ0FnSUVCeVpYUjFjbTRnSkhaaGJIVmxPMXh1SUNCOVhHNTlYRzVjYmtCdGFYaHBiaUJ1YjNKdFlXeHBlbVV0Wm05dWRDMXphWHBsS0NSMllXeDFaU3dnSkhKbGJHRjBhWFpsTFhSdk9pQWtZbUZ6WlMxbWIyNTBMWE5wZW1VcElIdGNiaUFnUUdsbUlIVnVhWFFvSkhaaGJIVmxLU0FoUFNBbmNIZ25JSHRjYmlBZ0lDQkFaWEp5YjNJZ1hDSnViM0p0WVd4cGVtVXRabTl1ZEMxemFYcGxLQ2tnYjI1c2VTQnpkWEJ3YjNKMGN5QndlQ0JwYm5CMWRITXVJRlJvWlNCMGVYQmxlU0JzYVdKeVlYSjVJR2x6SUdKbGRIUmxjaTVjSWp0Y2JpQWdmVnh1SUNCbWIyNTBMWE5wZW1VNklHNXZjbTFoYkdsNlpTMXlhSGwwYUcwb0pIWmhiSFZsTENBa2NtVnNZWFJwZG1VdGRHOHBPMXh1ZlZ4dVhHNUFiV2w0YVc0Z2JtOXliV0ZzYVhwbExYSm9lWFJvYlNna2NISnZjR1Z5ZEhrc0lDUjJZV3gxWlhNc0lDUnlaV3hoZEdsMlpTMTBiem9nSkdKaGMyVXRabTl1ZEMxemFYcGxLU0I3WEc0Z0lDUjJZV3gxWlMxc2FYTjBPaUFrZG1Gc2RXVnpPMXh1SUNBa2MyVndPaUJ6Y0dGalpUdGNiaUFnUUdsbUlIUjVjR1V0YjJZb0pIWmhiSFZsY3lrZ1BUMGdKMnhwYzNRbklIdGNiaUFnSUNBa2MyVndPaUJzYVhOMExYTmxjR0Z5WVhSdmNpZ2tkbUZzZFdWektUdGNiaUFnZlZ4dUlDQkFaV3h6WlNCN1hHNGdJQ0FnSkhaaGJIVmxMV3hwYzNRNklHRndjR1Z1WkNnb0tTd2dKSFpoYkhWbGN5azdYRzRnSUgxY2JseHVJQ0FrYm05eWJXRnNhWHBsWkMxMllXeDFaWE02SUNncE8xeHVJQ0JBWldGamFDQWtkbUZzZFdVZ2FXNGdKSFpoYkhWbExXeHBjM1FnZTF4dUlDQWdJRUJwWmlCMWJtbDBiR1Z6Y3lna2RtRnNkV1VwSUdGdVpDQWtkbUZzZFdVZ0lUMGdNQ0I3WEc0Z0lDQWdJQ0FrZG1Gc2RXVTZJQ1IyWVd4MVpTQXFJRzV2Y20xaGJHbDZaUzF5YUhsMGFHMG9KR0poYzJVdGJHbHVaUzFvWldsbmFIUXNJQ1J5Wld4aGRHbDJaUzEwYnlrN1hHNGdJQ0FnZlZ4dUlDQWdJQ1J1YjNKdFlXeHBlbVZrTFhaaGJIVmxjem9nWVhCd1pXNWtLQ1J1YjNKdFlXeHBlbVZrTFhaaGJIVmxjeXdnSkhaaGJIVmxMQ0FrYzJWd0tUdGNiaUFnZlZ4dUlDQWpleVJ3Y205d1pYSjBlWDA2SUNSdWIzSnRZV3hwZW1Wa0xYWmhiSFZsY3p0Y2JuMWNibHh1UUcxcGVHbHVJRzV2Y20xaGJHbDZaUzF0WVhKbmFXNG9KSFpoYkhWbGN5d2dKSEpsYkdGMGFYWmxMWFJ2T2lBa1ltRnpaUzFtYjI1MExYTnBlbVVwSUh0Y2JpQWdRR2x1WTJ4MVpHVWdibTl5YldGc2FYcGxMWEpvZVhSb2JTaHRZWEpuYVc0c0lDUjJZV3gxWlhNc0lDUnlaV3hoZEdsMlpTMTBieWs3WEc1OVhHNWNia0J0YVhocGJpQnViM0p0WVd4cGVtVXRiR2x1WlMxb1pXbG5hSFFvSkdadmJuUXRjMmw2WlN3Z0pHMXBiaTFzYVc1bExYQmhaR1JwYm1jNklESndlQ2tnZTF4dUlDQWtiR2x1WlhNNklHTmxhV3dvSkdadmJuUXRjMmw2WlNBdklDUmlZWE5sTFd4cGJtVXRhR1ZwWjJoMEtUdGNiaUFnTHk4Z1NXWWdiR2x1WlhNZ1lYSmxJR055WVcxd1pXUWdhVzVqYkhWa1pTQnpiMjFsSUdWNGRISmhJR3hsWVdScGJtY3VYRzRnSUVCcFppQW9KR3hwYm1WeklDb2dKR0poYzJVdGJHbHVaUzFvWldsbmFIUWdMU0FrWm05dWRDMXphWHBsS1NBOElDZ2tiV2x1TFd4cGJtVXRjR0ZrWkdsdVp5QXFJRElwSUh0Y2JpQWdJQ0FrYkdsdVpYTTZJQ1JzYVc1bGN5QXJJREU3WEc0Z0lIMWNiaUFnUUdsdVkyeDFaR1VnYm05eWJXRnNhWHBsTFhKb2VYUm9iU2hzYVc1bExXaGxhV2RvZEN3Z0pHeHBibVZ6TENBa1ptOXVkQzF6YVhwbEtUdGNibjFjYmlJc0Nna0pJaTh2SUVobGJIQmxjaUJtZFc1amRHbHZiaUJtYjNJZ2RHaGxJRzV2Y20xaGJHbDZaU2dwSUcxcGVHbHVMbHh1UUdaMWJtTjBhVzl1SUY5dWIzSnRZV3hwZW1VdGFXNWpiSFZrWlNna2MyVmpkR2x2Yml3Z0pHVjRZMngxWkdVNklHNTFiR3dwSUh0Y2JpQWdMeThnU1c1cGRHbGhiR2w2WlNCMGFHVWdaMnh2WW1Gc0lIWmhjbWxoWW14bGN5QnVaV1ZrWldRZ1lua2dkR2hwY3lCbWRXNWpkR2x2Ymk1Y2JpQWdRR2xtSUc1dmRDQm5iRzlpWVd4ZmRtRnlhV0ZpYkdWZlpYaHBjM1J6S0Y5dWIzSnRZV3hwZW1VdGFXNWpiSFZrWlNrZ2UxeHVJQ0FnSUNSZmJtOXliV0ZzYVhwbExXbHVZMngxWkdVNklDZ3BJQ0ZuYkc5aVlXdzdYRzRnSUNBZ0pGOXViM0p0WVd4cGVtVXRaWGhqYkhWa1pUb2dLQ2tnSVdkc2IySmhiRHRjYmlBZ2ZWeHVJQ0F2THlCVGFXNWpaU0IzWlNCaGNtVWdaMmwyWlc0Z01pQndZWEpoYldWMFpYSnpMQ0J6WlhRZ2RHaGxJR2RzYjJKaGJDQjJZWEpwWVdKc1pYTXVYRzRnSUVCcFppQWtaWGhqYkhWa1pTQWhQU0J1ZFd4c0lIdGNiaUFnSUNBa2FXNWpiSFZrWlRvZ0pITmxZM1JwYjI0N1hHNGdJQ0FnTHk4Z1UyRnpjeUJrYjJWemJpZDBJR2hoZG1VZ2MzUmhkR2xqSUhaaGNtbGhZbXhsY3l3Z2MyOGdkR2hsSUhkdmNtc3RZWEp2ZFc1a0lHbHpJSFJ2SUhOMGRXWm1JSFJvWlhObFhHNGdJQ0FnTHk4Z2RtRnNkV1Z6SUdsdWRHOGdaMnh2WW1Gc0lIWmhjbWxoWW14bGN5QnpieUIzWlNCallXNGdZV05qWlhOeklIUm9aVzBnYVc0Z1puVjBkWEpsSUdOaGJHeHpMbHh1SUNBZ0lDUmZibTl5YldGc2FYcGxMV2x1WTJ4MVpHVTZJR2xtS0hSNWNHVXRiMllvSkdsdVkyeDFaR1VwSUQwOUlDZHNhWE4wSnl3Z0pHbHVZMngxWkdVc0lDZ2thVzVqYkhWa1pTa3BJQ0ZuYkc5aVlXdzdYRzRnSUNBZ0pGOXViM0p0WVd4cGVtVXRaWGhqYkhWa1pUb2dhV1lvZEhsd1pTMXZaaWdrWlhoamJIVmtaU2tnUFQwZ0oyeHBjM1FuTENBa1pYaGpiSFZrWlN3Z0tDUmxlR05zZFdSbEtTa2dJV2RzYjJKaGJEdGNiaUFnSUNCQWNtVjBkWEp1SUhSeWRXVTdYRzRnSUgxY2JseHVJQ0F2THlCRGFHVmpheUJwWmlBa2MyVmpkR2x2YmlCcGN5QnBiaUIwYUdVZ0pHbHVZMngxWkdVZ2JHbHpkQzVjYmlBZ1FHbG1JR2x1WkdWNEtDUmZibTl5YldGc2FYcGxMV2x1WTJ4MVpHVXNJQ1J6WldOMGFXOXVLU0I3WEc0Z0lDQWdRSEpsZEhWeWJpQjBjblZsTzF4dUlDQjlYRzRnSUM4dklFbG1JQ1JwYm1Oc2RXUmxJR2x6SUhObGRDQjBieUFvWVd4c0tTd2diV0ZyWlNCemRYSmxJQ1J6WldOMGFXOXVJR2x6SUc1dmRDQnBiaUFrWlhoamJIVmtaUzVjYmlBZ1FHVnNjMlVnYVdZZ2JtOTBJR2x1WkdWNEtDUmZibTl5YldGc2FYcGxMV1Y0WTJ4MVpHVXNJQ1J6WldOMGFXOXVLU0JoYm1RZ2FXNWtaWGdvSkY5dWIzSnRZV3hwZW1VdGFXNWpiSFZrWlN3Z1lXeHNLU0I3WEc0Z0lDQWdRSEpsZEhWeWJpQjBjblZsTzF4dUlDQjlYRzRnSUVCeVpYUjFjbTRnWm1Gc2MyVTdYRzU5WEc1Y2JrQnRhWGhwYmlCdWIzSnRZV3hwZW1Vb0pHbHVZMngxWkdVNklDaGhiR3dwTENBa1pYaGpiSFZrWlRvZ0tDa3BJSHRjYmlBZ0x5OGdTVzVwZEdsaGJHbDZaU0IwYUdVZ2FHVnNjR1Z5SUdaMWJtTjBhVzl1SUdKNUlIQmhjM05wYm1jZ2FYUWdkR2hwY3lCdGFYaHBiaWR6SUhCaGNtRnRaWFJsY25NdVhHNGdJQ1JwYm1sME9pQmZibTl5YldGc2FYcGxMV2x1WTJ4MVpHVW9KR2x1WTJ4MVpHVXNJQ1JsZUdOc2RXUmxLVHRjYmx4dUlDQXZMeUJKWmlCM1pTZDJaU0JqZFhOMGIyMXBlbVZrSUdGdWVTQm1iMjUwSUhaaGNtbGhZbXhsY3l3Z2QyVW5iR3dnYm1WbFpDQmxlSFJ5WVNCd2NtOXdaWEowYVdWekxseHVJQ0JBYVdZZ0pHSmhjMlV0YkdsdVpTMW9aV2xuYUhRZ0lUMGdNalJ3ZUZ4dUlDQWdJRzl5SUNSaVlYTmxMWFZ1YVhRZ0lUMGdKMlZ0SjF4dUlDQWdJRzl5SUNSb01pMW1iMjUwTFhOcGVtVWdJVDBnTVM0MUlDQXFJQ1JpWVhObExXWnZiblF0YzJsNlpWeHVJQ0FnSUc5eUlDUm9NeTFtYjI1MExYTnBlbVVnSVQwZ01TNHhOeUFxSUNSaVlYTmxMV1p2Ym5RdGMybDZaVnh1SUNBZ0lHOXlJQ1JvTkMxbWIyNTBMWE5wZW1VZ0lUMGdNU0FnSUNBcUlDUmlZWE5sTFdadmJuUXRjMmw2WlZ4dUlDQWdJRzl5SUNSb05TMW1iMjUwTFhOcGVtVWdJVDBnTUM0NE15QXFJQ1JpWVhObExXWnZiblF0YzJsNlpWeHVJQ0FnSUc5eUlDUm9OaTFtYjI1MExYTnBlbVVnSVQwZ01DNDJOeUFxSUNSaVlYTmxMV1p2Ym5RdGMybDZaU0I3WEc0Z0lDQWdKRzV2Y20xaGJHbDZaUzEyWlhKMGFXTmhiQzF5YUhsMGFHMDZJSFJ5ZFdVZ0lXZHNiMkpoYkR0Y2JpQWdmVnh1WEc0Z0lDOHFJU0J1YjNKdFlXeHBlbVV0YzJOemN5QjhJRTFKVkM5SFVFeDJNaUJNYVdObGJuTmxJSHdnWW1sMExteDVMMjV2Y20xaGJHbDZaUzF6WTNOeklDb3ZYRzVjYmlBZ1FHbG1JRjl1YjNKdFlXeHBlbVV0YVc1amJIVmtaU2hrYjJOMWJXVnVkQ2tnZTF4dUlDQWdJQzhxSUVSdlkzVnRaVzUwWEc0Z0lDQWdJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJREV1SUVOdmNuSmxZM1FnZEdobElHeHBibVVnYUdWcFoyaDBJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaUFnSUNBZ0tpQXlMaUJRY21WMlpXNTBJR0ZrYW5WemRHMWxiblJ6SUc5bUlHWnZiblFnYzJsNlpTQmhablJsY2lCdmNtbGxiblJoZEdsdmJpQmphR0Z1WjJWeklHbHVYRzRnSUNBZ0lDb2dJQ0FnU1VVZ2IyNGdWMmx1Wkc5M2N5QlFhRzl1WlNCaGJtUWdhVzRnYVU5VExseHVJQ0FnSUNBcUwxeHVYRzRnSUNBZ2FIUnRiQ0I3WEc0Z0lDQWdJQ0JBYVdZZ0pHSmhjMlV0Wm05dWRDMW1ZVzFwYkhrZ2UxeHVJQ0FnSUNBZ0lDQXZLaUJEYUdGdVoyVWdkR2hsSUdSbFptRjFiSFFnWm05dWRDQm1ZVzFwYkhrZ2FXNGdZV3hzSUdKeWIzZHpaWEp6SUNodmNHbHVhVzl1WVhSbFpDa3VJQ292WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWtZbUZ6WlMxbWIyNTBMV1poYldsc2VUdGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lFQnBaaUFrWW1GelpTMW1iMjUwTFhOcGVtVWdJVDBnTVRad2VDQnZjaUFrYm05eWJXRnNhWHBsTFhabGNuUnBZMkZzTFhKb2VYUm9iU0I3WEc0Z0lDQWdJQ0FnSUM4dklFTnZjbkpsWTNRZ2IyeGtJR0p5YjNkelpYSWdZblZuSUhSb1lYUWdjSEpsZG1WdWRHVmtJR0ZqWTJWemMybGliR1VnY21WemFYcHBibWNnYjJZZ2RHVjRkRnh1SUNBZ0lDQWdJQ0F2THlCM2FHVnVJSEp2YjNRZ1ptOXVkQzF6YVhwbElHbHpJSE5sZENCM2FYUm9JSEI0SUc5eUlHVnRMbHh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SUNna1ltRnpaUzFtYjI1MExYTnBlbVVnTHlBeE5uQjRLU0FxSURFd01DVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQkFhV1lnSkc1dmNtMWhiR2w2WlMxMlpYSjBhV05oYkMxeWFIbDBhRzBnZTF4dUlDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dLQ1JpWVhObExXeHBibVV0YUdWcFoyaDBJQzhnSkdKaGMyVXRabTl1ZEMxemFYcGxLU0FxSURGbGJUc2dMeW9nTVNBcUwxeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ1FHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNUzR4TlRzZ0x5b2dNU0FxTDF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnTFcxekxYUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklERXdNQ1U3SUM4cUlESWdLaTljYmlBZ0lDQWdJQzEzWldKcmFYUXRkR1Y0ZEMxemFYcGxMV0ZrYW5WemREb2dNVEF3SlRzZ0x5b2dNaUFxTDF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUVCcFppQmZibTl5YldGc2FYcGxMV2x1WTJ4MVpHVW9jMlZqZEdsdmJuTXBJSHRjYmlBZ0lDQXZLaUJUWldOMGFXOXVjMXh1SUNBZ0lDQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQlNaVzF2ZG1VZ2RHaGxJRzFoY21kcGJpQnBiaUJoYkd3Z1luSnZkM05sY25NZ0tHOXdhVzVwYjI1aGRHVmtLUzVjYmlBZ0lDQWdLaTljYmx4dUlDQWdJR0p2WkhrZ2UxeHVJQ0FnSUNBZ2JXRnlaMmx1T2lBd08xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCa2FYTndiR0Y1SUdsdUlFbEZJRGt0TGx4dUlDQWdJQ0FxTDF4dVhHNGdJQ0FnWVhKMGFXTnNaU3hjYmlBZ0lDQmhjMmxrWlN4Y2JpQWdJQ0JtYjI5MFpYSXNYRzRnSUNBZ2FHVmhaR1Z5TEZ4dUlDQWdJRzVoZGl4Y2JpQWdJQ0J6WldOMGFXOXVJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFTnZjbkpsWTNRZ2RHaGxJR1p2Ym5RZ2MybDZaU0JoYm1RZ2JXRnlaMmx1SUc5dUlHQm9NV0FnWld4bGJXVnVkSE1nZDJsMGFHbHVJR0J6WldOMGFXOXVZQ0JoYm1SY2JpQWdJQ0FnS2lCZ1lYSjBhV05zWldBZ1kyOXVkR1Y0ZEhNZ2FXNGdRMmh5YjIxbExDQkdhWEpsWm05NExDQmhibVFnVTJGbVlYSnBMbHh1SUNBZ0lDQXFMMXh1WEc0Z0lDQWdhREVnZTF4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnYm05eWJXRnNhWHBsTFdadmJuUXRjMmw2WlNna2FERXRabTl1ZEMxemFYcGxLVHRjYmlBZ0lDQWdJRUJwWmlBa2JtOXliV0ZzYVhwbExYWmxjblJwWTJGc0xYSm9lWFJvYlNCN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHNXZjbTFoYkdsNlpTMXNhVzVsTFdobGFXZG9kQ2drYURFdFptOXVkQzF6YVhwbEtUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdRR2xtSUNSdWIzSnRZV3hwZW1VdGRtVnlkR2xqWVd3dGNtaDVkR2h0SUh0Y2JpQWdJQ0FnSUNBZ0x5b2dVMlYwSURFZ2RXNXBkQ0J2WmlCMlpYSjBhV05oYkNCeWFIbDBhRzBnYjI0Z2RHaGxJSFJ2Y0NCaGJtUWdZbTkwZEc5dElHMWhjbWRwYm5NdUlDb3ZYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzV2Y20xaGJHbDZaUzF0WVhKbmFXNG9NU0F3TENBa2FERXRabTl1ZEMxemFYcGxLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJRUJsYkhObElIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9pQXdMalkzWlcwZ01EdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCQWFXWWdKRzV2Y20xaGJHbDZaUzEyWlhKMGFXTmhiQzF5YUhsMGFHMGdlMXh1SUNBZ0lDQWdhRElnZTF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdWIzSnRZV3hwZW1VdFptOXVkQzF6YVhwbEtDUm9NaTFtYjI1MExYTnBlbVVwTzF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdWIzSnRZV3hwZW1VdGJHbHVaUzFvWldsbmFIUW9KR2d5TFdadmJuUXRjMmw2WlNrN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHNXZjbTFoYkdsNlpTMXRZWEpuYVc0b01TQXdMQ0FrYURJdFptOXVkQzF6YVhwbEtUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhRE1nZTF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdWIzSnRZV3hwZW1VdFptOXVkQzF6YVhwbEtDUm9NeTFtYjI1MExYTnBlbVVwTzF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdWIzSnRZV3hwZW1VdGJHbHVaUzFvWldsbmFIUW9KR2d6TFdadmJuUXRjMmw2WlNrN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHNXZjbTFoYkdsNlpTMXRZWEpuYVc0b01TQXdMQ0FrYURNdFptOXVkQzF6YVhwbEtUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhRFFnZTF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdWIzSnRZV3hwZW1VdFptOXVkQzF6YVhwbEtDUm9OQzFtYjI1MExYTnBlbVVwTzF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdWIzSnRZV3hwZW1VdGJHbHVaUzFvWldsbmFIUW9KR2cwTFdadmJuUXRjMmw2WlNrN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHNXZjbTFoYkdsNlpTMXRZWEpuYVc0b01TQXdMQ0FrYURRdFptOXVkQzF6YVhwbEtUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhRFVnZTF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdWIzSnRZV3hwZW1VdFptOXVkQzF6YVhwbEtDUm9OUzFtYjI1MExYTnBlbVVwTzF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdWIzSnRZV3hwZW1VdGJHbHVaUzFvWldsbmFIUW9KR2cxTFdadmJuUXRjMmw2WlNrN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHNXZjbTFoYkdsNlpTMXRZWEpuYVc0b01TQXdMQ0FrYURVdFptOXVkQzF6YVhwbEtUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhRFlnZTF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdWIzSnRZV3hwZW1VdFptOXVkQzF6YVhwbEtDUm9OaTFtYjI1MExYTnBlbVVwTzF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdWIzSnRZV3hwZW1VdGJHbHVaUzFvWldsbmFIUW9KR2cyTFdadmJuUXRjMmw2WlNrN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHNXZjbTFoYkdsNlpTMXRZWEpuYVc0b01TQXdMQ0FrYURZdFptOXVkQzF6YVhwbEtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQkFhV1lnWDI1dmNtMWhiR2w2WlMxcGJtTnNkV1JsS0dkeWIzVndhVzVuS1NCN1hHNGdJQ0FnTHlvZ1IzSnZkWEJwYm1jZ1kyOXVkR1Z1ZEZ4dUlDQWdJQ0FnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmlBZ0lDQkFhV1lnSkc1dmNtMWhiR2w2WlMxMlpYSjBhV05oYkMxeWFIbDBhRzBnZTF4dUlDQWdJQ0FnTHlvcVhHNGdJQ0FnSUNBZ0tpQlRaWFFnTVNCMWJtbDBJRzltSUhabGNuUnBZMkZzSUhKb2VYUm9iU0J2YmlCMGFHVWdkRzl3SUdGdVpDQmliM1IwYjIwZ2JXRnlaMmx1TGx4dUlDQWdJQ0FnSUNvdlhHNWNiaUFnSUNBZ0lHSnNiMk5yY1hWdmRHVWdlMXh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J1YjNKdFlXeHBlbVV0YldGeVoybHVLREVnSkdsdVpHVnVkQzFoYlc5MWJuUXBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JrYkN4Y2JpQWdJQ0FnSUc5c0xGeHVJQ0FnSUNBZ2RXd2dlMXh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J1YjNKdFlXeHBlbVV0YldGeVoybHVLREVnTUNrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDOHFLbHh1SUNBZ0lDQWdJQ29nVkhWeWJpQnZabVlnYldGeVoybHVjeUJ2YmlCdVpYTjBaV1FnYkdsemRITXVYRzRnSUNBZ0lDQWdLaTljYmx4dUlDQWdJQ0FnYjJ3c1hHNGdJQ0FnSUNCMWJDQjdYRzRnSUNBZ0lDQWdJRzlzTEZ4dUlDQWdJQ0FnSUNCMWJDQjdYRzRnSUNBZ0lDQWdJQ0FnYldGeVoybHVPaUF3TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHUmtJSHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVPaUF3SURBZ01DQWthVzVrWlc1MExXRnRiM1Z1ZER0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2Iyd3NYRzRnSUNBZ0lDQjFiQ0I3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURBZ01DQXdJQ1JwYm1SbGJuUXRZVzF2ZFc1ME8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCa2FYTndiR0Y1SUdsdUlFbEZJRGt0TGx4dUlDQWdJQ0FxTDF4dVhHNGdJQ0FnWm1sblkyRndkR2x2Yml4Y2JpQWdJQ0JtYVdkMWNtVWdlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1FXUmtJSFJvWlNCamIzSnlaV04wSUcxaGNtZHBiaUJwYmlCSlJTQTRMbHh1SUNBZ0lDQXFMMXh1WEc0Z0lDQWdabWxuZFhKbElIdGNiaUFnSUNBZ0lFQnBaaUFrYm05eWJXRnNhWHBsTFhabGNuUnBZMkZzTFhKb2VYUm9iU0I3WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUc1dmNtMWhiR2w2WlMxdFlYSm5hVzRvTVNBa2FXNWtaVzUwTFdGdGIzVnVkQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0JBWld4elpTQjdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dNV1Z0SUNScGJtUmxiblF0WVcxdmRXNTBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJREV1SUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JpYjNnZ2MybDZhVzVuSUdsdUlFWnBjbVZtYjNndVhHNGdJQ0FnSUNvZ01pNGdVMmh2ZHlCMGFHVWdiM1psY21ac2IzY2dhVzRnUldSblpTQmhibVFnU1VVdVhHNGdJQ0FnSUNvdlhHNWNiaUFnSUNCb2NpQjdYRzRnSUNBZ0lDQmliM2d0YzJsNmFXNW5PaUJqYjI1MFpXNTBMV0p2ZURzZ0x5b2dNU0FxTDF4dUlDQWdJQ0FnYUdWcFoyaDBPaUF3T3lBdktpQXhJQ292WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVHNnTHlvZ01pQXFMMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRUZrWkNCMGFHVWdZMjl5Y21WamRDQmthWE53YkdGNUlHbHVJRWxGTGx4dUlDQWdJQ0FxTDF4dVhHNGdJQ0FnYldGcGJpQjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JBYVdZZ0pHNXZjbTFoYkdsNlpTMTJaWEowYVdOaGJDMXlhSGwwYUcwZ2UxeHVJQ0FnSUNBZ0x5b3FYRzRnSUNBZ0lDQWdLaUJUWlhRZ01TQjFibWwwSUc5bUlIWmxjblJwWTJGc0lISm9lWFJvYlNCdmJpQjBhR1VnZEc5d0lHRnVaQ0JpYjNSMGIyMGdiV0Z5WjJsdUxseHVJQ0FnSUNBZ0lDb3ZYRzVjYmlBZ0lDQWdJSEFzWEc0Z0lDQWdJQ0J3Y21VZ2UxeHVJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQnViM0p0WVd4cGVtVXRiV0Z5WjJsdUtERWdNQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nTVM0Z1EyOXljbVZqZENCMGFHVWdhVzVvWlhKcGRHRnVZMlVnWVc1a0lITmpZV3hwYm1jZ2IyWWdabTl1ZENCemFYcGxJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaUFnSUNBZ0tpQXlMaUJEYjNKeVpXTjBJSFJvWlNCdlpHUWdZR1Z0WUNCbWIyNTBJSE5wZW1sdVp5QnBiaUJoYkd3Z1luSnZkM05sY25NdVhHNGdJQ0FnSUNvdlhHNWNiaUFnSUNCd2NtVWdlMXh1SUNBZ0lDQWdabTl1ZEMxbVlXMXBiSGs2SUcxdmJtOXpjR0ZqWlN3Z2JXOXViM053WVdObE95QXZLaUF4SUNvdlhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERmxiVHNnTHlvZ01pQXFMMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJRUJwWmlCZmJtOXliV0ZzYVhwbExXbHVZMngxWkdVb2JHbHVhM01wSUh0Y2JpQWdJQ0F2S2lCTWFXNXJjMXh1SUNBZ0lDQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQXhMaUJTWlcxdmRtVWdkR2hsSUdkeVlYa2dZbUZqYTJkeWIzVnVaQ0J2YmlCaFkzUnBkbVVnYkdsdWEzTWdhVzRnU1VVZ01UQXVYRzRnSUNBZ0lDb2dNaTRnVW1WdGIzWmxJR2RoY0hNZ2FXNGdiR2x1YTNNZ2RXNWtaWEpzYVc1bElHbHVJR2xQVXlBNEt5QmhibVFnVTJGbVlYSnBJRGdyTGx4dUlDQWdJQ0FxTDF4dVhHNGdJQ0FnWVNCN1hHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREc2dMeW9nTVNBcUwxeHVJQ0FnSUNBZ0xYZGxZbXRwZEMxMFpYaDBMV1JsWTI5eVlYUnBiMjR0YzJ0cGNEb2diMkpxWldOMGN6c2dMeW9nTWlBcUwxeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lFQnBaaUJmYm05eWJXRnNhWHBsTFdsdVkyeDFaR1VvZEdWNGRDa2dlMXh1SUNBZ0lDOHFJRlJsZUhRdGJHVjJaV3dnYzJWdFlXNTBhV056WEc0Z0lDQWdJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJREV1SUZKbGJXOTJaU0IwYUdVZ1ltOTBkRzl0SUdKdmNtUmxjaUJwYmlCRGFISnZiV1VnTlRjdElHRnVaQ0JHYVhKbFptOTRJRE01TFM1Y2JpQWdJQ0FnS2lBeUxpQkJaR1FnZEdobElHTnZjbkpsWTNRZ2RHVjRkQ0JrWldOdmNtRjBhVzl1SUdsdUlFTm9jbTl0WlN3Z1JXUm5aU3dnU1VVc0lFOXdaWEpoTENCaGJtUWdVMkZtWVhKcExseHVJQ0FnSUNBcUwxeHVYRzRnSUNBZ1lXSmljbHQwYVhSc1pWMGdlMXh1SUNBZ0lDQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ2JtOXVaVHNnTHlvZ01TQXFMMXh1SUNBZ0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQjFibVJsY214cGJtVTdJQzhxSURJZ0tpOWNiaUFnSUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2RXNWtaWEpzYVc1bElHUnZkSFJsWkRzZ0x5b2dNaUFxTDF4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUZCeVpYWmxiblFnZEdobElHUjFjR3hwWTJGMFpTQmhjSEJzYVdOaGRHbHZiaUJ2WmlCZ1ltOXNaR1Z5WUNCaWVTQjBhR1VnYm1WNGRDQnlkV3hsSUdsdUlGTmhabUZ5YVNBMkxseHVJQ0FnSUNBcUwxeHVYRzRnSUNBZ1lpeGNiaUFnSUNCemRISnZibWNnZTF4dUlDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklHbHVhR1Z5YVhRN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1FXUmtJSFJvWlNCamIzSnlaV04wSUdadmJuUWdkMlZwWjJoMElHbHVJRU5vY205dFpTd2dSV1JuWlN3Z1lXNWtJRk5oWm1GeWFTNWNiaUFnSUNBZ0tpOWNibHh1SUNBZ0lHSXNYRzRnSUNBZ2MzUnliMjVuSUh0Y2JpQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrWlhJN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ01TNGdRMjl5Y21WamRDQjBhR1VnYVc1b1pYSnBkR0Z1WTJVZ1lXNWtJSE5qWVd4cGJtY2diMllnWm05dWRDQnphWHBsSUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBZ0lDQWdLaUF5TGlCRGIzSnlaV04wSUhSb1pTQnZaR1FnWUdWdFlDQm1iMjUwSUhOcGVtbHVaeUJwYmlCaGJHd2dZbkp2ZDNObGNuTXVYRzRnSUNBZ0lDb3ZYRzVjYmlBZ0lDQmpiMlJsTEZ4dUlDQWdJR3RpWkN4Y2JpQWdJQ0J6WVcxd0lIdGNiaUFnSUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJ0YjI1dmMzQmhZMlVzSUcxdmJtOXpjR0ZqWlRzZ0x5b2dNU0FxTDF4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeFpXMDdJQzhxSURJZ0tpOWNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1ptOXVkQ0J6ZEhsc1pTQnBiaUJCYm1SeWIybGtJRFF1TXkwdVhHNGdJQ0FnSUNvdlhHNWNiaUFnSUNCa1ptNGdlMXh1SUNBZ0lDQWdabTl1ZEMxemRIbHNaVG9nYVhSaGJHbGpPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRUZrWkNCMGFHVWdZMjl5Y21WamRDQmlZV05yWjNKdmRXNWtJR0Z1WkNCamIyeHZjaUJwYmlCSlJTQTVMUzVjYmlBZ0lDQWdLaTljYmx4dUlDQWdJRzFoY21zZ2UxeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kyWm1NRHRjYmlBZ0lDQWdJR052Ykc5eU9pQWpNREF3TzF4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JtYjI1MElITnBlbVVnYVc0Z1lXeHNJR0p5YjNkelpYSnpMbHh1SUNBZ0lDQXFMMXh1WEc0Z0lDQWdjMjFoYkd3Z2UxeHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQTRNQ1U3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nVUhKbGRtVnVkQ0JnYzNWaVlDQmhibVFnWUhOMWNHQWdaV3hsYldWdWRITWdabkp2YlNCaFptWmxZM1JwYm1jZ2RHaGxJR3hwYm1VZ2FHVnBaMmgwSUdsdVhHNGdJQ0FnSUNvZ1lXeHNJR0p5YjNkelpYSnpMbHh1SUNBZ0lDQXFMMXh1WEc0Z0lDQWdjM1ZpTEZ4dUlDQWdJSE4xY0NCN1hHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklEYzFKVHRjYmlBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBd08xeHVJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUNBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUdKaGMyVnNhVzVsTzF4dUlDQWdJSDFjYmx4dUlDQWdJSE4xWWlCN1hHNGdJQ0FnSUNCaWIzUjBiMjA2SUMwd0xqSTFaVzA3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjM1Z3SUh0Y2JpQWdJQ0FnSUhSdmNEb2dMVEF1TldWdE8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lFQnBaaUJmYm05eWJXRnNhWHBsTFdsdVkyeDFaR1VvWlcxaVpXUmtaV1FwSUh0Y2JpQWdJQ0F2S2lCRmJXSmxaR1JsWkNCamIyNTBaVzUwWEc0Z0lDQWdJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRUZrWkNCMGFHVWdZMjl5Y21WamRDQmthWE53YkdGNUlHbHVJRWxGSURrdExseHVJQ0FnSUNBcUwxeHVYRzRnSUNBZ1lYVmthVzhzWEc0Z0lDQWdkbWxrWlc4Z2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRUZrWkNCMGFHVWdZMjl5Y21WamRDQmthWE53YkdGNUlHbHVJR2xQVXlBMExUY3VYRzRnSUNBZ0lDb3ZYRzVjYmlBZ0lDQmhkV1JwYnpwdWIzUW9XMk52Ym5SeWIyeHpYU2tnZTF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnSUNBZ0lHaGxhV2RvZERvZ01EdGNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQlNaVzF2ZG1VZ2RHaGxJR0p2Y21SbGNpQnZiaUJwYldGblpYTWdhVzV6YVdSbElHeHBibXR6SUdsdUlFbEZJREV3TFM1Y2JpQWdJQ0FnS2k5Y2JseHVJQ0FnSUdsdFp5QjdYRzRnSUNBZ0lDQmliM0prWlhJdGMzUjViR1U2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dTR2xrWlNCMGFHVWdiM1psY21ac2IzY2dhVzRnU1VVdVhHNGdJQ0FnSUNvdlhHNWNiaUFnSUNCemRtYzZibTkwS0RweWIyOTBLU0I3WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJRUJwWmlCZmJtOXliV0ZzYVhwbExXbHVZMngxWkdVb1ptOXliWE1wSUh0Y2JpQWdJQ0F2S2lCR2IzSnRjMXh1SUNBZ0lDQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQXhMaUJEYUdGdVoyVWdkR2hsSUdadmJuUWdjM1I1YkdWeklHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3lBb2IzQnBibWx2Ym1GMFpXUXBMbHh1SUNBZ0lDQXFJREl1SUZKbGJXOTJaU0IwYUdVZ2JXRnlaMmx1SUdsdUlFWnBjbVZtYjNnZ1lXNWtJRk5oWm1GeWFTNWNiaUFnSUNBZ0tpOWNibHh1SUNBZ0lHSjFkSFJ2Yml4Y2JpQWdJQ0JwYm5CMWRDeGNiaUFnSUNCdmNIUm5jbTkxY0N4Y2JpQWdJQ0J6Wld4bFkzUXNYRzRnSUNBZ2RHVjRkR0Z5WldFZ2UxeHVJQ0FnSUNBZ1ptOXVkQzFtWVcxcGJIazZJR2xtS0NSaVlYTmxMV1p2Ym5RdFptRnRhV3g1TENBa1ltRnpaUzFtYjI1MExXWmhiV2xzZVN3Z2MyRnVjeTF6WlhKcFppazdJQzhxSURFZ0tpOWNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVEF3SlRzZ0x5b2dNU0FxTDF4dUlDQWdJQ0FnUUdsbUlDUnViM0p0WVd4cGVtVXRkbVZ5ZEdsallXd3RjbWg1ZEdodElIdGNiaUFnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SUNna1ltRnpaUzFzYVc1bExXaGxhV2RvZENBdklDUmlZWE5sTFdadmJuUXRjMmw2WlNrZ0tpQXhaVzA3SUM4cUlERWdLaTljYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJRUJsYkhObElIdGNiaUFnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFdU1UVTdJQzhxSURFZ0tpOWNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lHMWhjbWRwYmpvZ01Ec2dMeW9nTWlBcUwxeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlGTm9iM2NnZEdobElHOTJaWEptYkc5M0lHbHVJRWxGTGx4dUlDQWdJQ0FxTDF4dVhHNGdJQ0FnWW5WMGRHOXVJSHRjYmlBZ0lDQWdJRzkyWlhKbWJHOTNPaUIyYVhOcFlteGxPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRkpsYlc5MlpTQjBhR1VnYVc1b1pYSnBkR0Z1WTJVZ2IyWWdkR1Y0ZENCMGNtRnVjMlp2Y20wZ2FXNGdSV1JuWlN3Z1JtbHlaV1p2ZUN3Z1lXNWtJRWxGTGx4dUlDQWdJQ0FxSURFdUlGSmxiVzkyWlNCMGFHVWdhVzVvWlhKcGRHRnVZMlVnYjJZZ2RHVjRkQ0IwY21GdWMyWnZjbTBnYVc0Z1JtbHlaV1p2ZUM1Y2JpQWdJQ0FnS2k5Y2JseHVJQ0FnSUdKMWRIUnZiaXhjYmlBZ0lDQnpaV3hsWTNRZ2V5QXZLaUF4SUNvdlhHNGdJQ0FnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nYm05dVpUdGNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQXhMaUJRY21WMlpXNTBJR0VnVjJWaVMybDBJR0oxWnlCM2FHVnlaU0FvTWlrZ1pHVnpkSEp2ZVhNZ2JtRjBhWFpsSUdCaGRXUnBiMkFnWVc1a0lHQjJhV1JsYjJCY2JpQWdJQ0FnS2lBZ0lDQmpiMjUwY205c2N5QnBiaUJCYm1SeWIybGtJRFF1WEc0Z0lDQWdJQ29nTWk0Z1EyOXljbVZqZENCMGFHVWdhVzVoWW1sc2FYUjVJSFJ2SUhOMGVXeGxJR05zYVdOcllXSnNaU0IwZVhCbGN5QnBiaUJwVDFNZ1lXNWtJRk5oWm1GeWFTNWNiaUFnSUNBZ0tpOWNibHh1SUNBZ0lHSjFkSFJ2Yml4Y2JpQWdJQ0JvZEcxc0lGdDBlWEJsUFZ3aVluVjBkRzl1WENKZExDQXZLaUF4SUNvdlhHNGdJQ0FnVzNSNWNHVTlYQ0p5WlhObGRGd2lYU3hjYmlBZ0lDQmJkSGx3WlQxY0luTjFZbTFwZEZ3aVhTQjdYRzRnSUNBZ0lDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJR0oxZEhSdmJqc2dMeW9nTWlBcUwxeHVJQ0FnSUgxY2JseHVJQ0FnSUdKMWRIUnZiaXhjYmlBZ0lDQmJkSGx3WlQxY0ltSjFkSFJ2Ymx3aVhTeGNiaUFnSUNCYmRIbHdaVDFjSW5KbGMyVjBYQ0pkTEZ4dUlDQWdJRnQwZVhCbFBWd2ljM1ZpYldsMFhDSmRJSHRjYmx4dUlDQWdJQ0FnTHlvcVhHNGdJQ0FnSUNBZ0tpQlNaVzF2ZG1VZ2RHaGxJR2x1Ym1WeUlHSnZjbVJsY2lCaGJtUWdjR0ZrWkdsdVp5QnBiaUJHYVhKbFptOTRMbHh1SUNBZ0lDQWdJQ292WEc1Y2JpQWdJQ0FnSUNZNk9pMXRiM290Wm05amRYTXRhVzV1WlhJZ2UxeHVJQ0FnSUNBZ0lDQmliM0prWlhJdGMzUjViR1U2SUc1dmJtVTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREE3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUM4cUtseHVJQ0FnSUNBZ0lDb2dVbVZ6ZEc5eVpTQjBhR1VnWm05amRYTWdjM1I1YkdWeklIVnVjMlYwSUdKNUlIUm9aU0J3Y21WMmFXOTFjeUJ5ZFd4bExseHVJQ0FnSUNBZ0lDb3ZYRzVjYmlBZ0lDQWdJQ1k2TFcxdmVpMW1iMk4xYzNKcGJtY2dlMXh1SUNBZ0lDQWdJQ0J2ZFhSc2FXNWxPaUF4Y0hnZ1pHOTBkR1ZrSUVKMWRIUnZibFJsZUhRN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1UyaHZkeUIwYUdVZ2IzWmxjbVpzYjNjZ2FXNGdSV1JuWlM1Y2JpQWdJQ0FnS2k5Y2JseHVJQ0FnSUdsdWNIVjBJSHRjYmlBZ0lDQWdJRzkyWlhKbWJHOTNPaUIyYVhOcFlteGxPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJREV1SUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JpYjNnZ2MybDZhVzVuSUdsdUlFbEZJREV3TFM1Y2JpQWdJQ0FnS2lBeUxpQlNaVzF2ZG1VZ2RHaGxJSEJoWkdScGJtY2dhVzRnU1VVZ01UQXRMbHh1SUNBZ0lDQXFMMXh1WEc0Z0lDQWdXM1I1Y0dVOVhDSmphR1ZqYTJKdmVGd2lYU3hjYmlBZ0lDQmJkSGx3WlQxY0luSmhaR2x2WENKZElIdGNiaUFnSUNBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3SUM4cUlERWdLaTljYmlBZ0lDQWdJSEJoWkdScGJtYzZJREE3SUM4cUlESWdLaTljYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJEYjNKeVpXTjBJSFJvWlNCamRYSnpiM0lnYzNSNWJHVWdiMllnYVc1amNtVnRaVzUwSUdGdVpDQmtaV055WlcxbGJuUWdZblYwZEc5dWN5QnBiaUJEYUhKdmJXVXVYRzRnSUNBZ0lDb3ZYRzVjYmlBZ0lDQmJkSGx3WlQxY0ltNTFiV0psY2x3aVhUbzZMWGRsWW10cGRDMXBibTVsY2kxemNHbHVMV0oxZEhSdmJpeGNiaUFnSUNCYmRIbHdaVDFjSW01MWJXSmxjbHdpWFRvNkxYZGxZbXRwZEMxdmRYUmxjaTF6Y0dsdUxXSjFkSFJ2YmlCN1hHNGdJQ0FnSUNCb1pXbG5hSFE2SUdGMWRHODdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dNUzRnUTI5eWNtVmpkQ0IwYUdVZ2IyUmtJR0Z3Y0dWaGNtRnVZMlVnYVc0Z1EyaHliMjFsSUdGdVpDQlRZV1poY21rdVhHNGdJQ0FnSUNvZ01pNGdRMjl5Y21WamRDQjBhR1VnYjNWMGJHbHVaU0J6ZEhsc1pTQnBiaUJUWVdaaGNta3VYRzRnSUNBZ0lDb3ZYRzVjYmlBZ0lDQmJkSGx3WlQxY0luTmxZWEpqYUZ3aVhTQjdYRzRnSUNBZ0lDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJSFJsZUhSbWFXVnNaRHNnTHlvZ01TQXFMMXh1SUNBZ0lDQWdiM1YwYkdsdVpTMXZabVp6WlhRNklDMHljSGc3SUM4cUlESWdLaTljYmx4dUlDQWdJQ0FnTHlvcVhHNGdJQ0FnSUNBZ0tpQlNaVzF2ZG1VZ2RHaGxJR2x1Ym1WeUlIQmhaR1JwYm1jZ1lXNWtJR05oYm1ObGJDQmlkWFIwYjI1eklHbHVJRU5vY205dFpTQmhibVFnVTJGbVlYSnBJRzl1SUcxaFkwOVRMbHh1SUNBZ0lDQWdJQ292WEc1Y2JpQWdJQ0FnSUNZNk9pMTNaV0pyYVhRdGMyVmhjbU5vTFdOaGJtTmxiQzFpZFhSMGIyNHNYRzRnSUNBZ0lDQW1Pam90ZDJWaWEybDBMWE5sWVhKamFDMWtaV052Y21GMGFXOXVJSHRjYmlBZ0lDQWdJQ0FnTFhkbFltdHBkQzFoY0hCbFlYSmhibU5sT2lCdWIyNWxPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJREV1SUVOdmNuSmxZM1FnZEdobElHbHVZV0pwYkdsMGVTQjBieUJ6ZEhsc1pTQmpiR2xqYTJGaWJHVWdkSGx3WlhNZ2FXNGdhVTlUSUdGdVpDQlRZV1poY21rdVhHNGdJQ0FnSUNvZ01pNGdRMmhoYm1kbElHWnZiblFnY0hKdmNHVnlkR2xsY3lCMGJ5QmdhVzVvWlhKcGRHQWdhVzRnVTJGbVlYSnBMbHh1SUNBZ0lDQXFMMXh1WEc0Z0lDQWdPam90ZDJWaWEybDBMV1pwYkdVdGRYQnNiMkZrTFdKMWRIUnZiaUI3WEc0Z0lDQWdJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUdKMWRIUnZianNnTHlvZ01TQXFMMXh1SUNBZ0lDQWdabTl1ZERvZ2FXNW9aWEpwZERzZ0x5b2dNaUFxTDF4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUVOdmNuSmxZM1FnZEdobElIQmhaR1JwYm1jZ2FXNGdSbWx5WldadmVDNWNiaUFnSUNBZ0tpOWNibHh1SUNBZ0lHWnBaV3hrYzJWMElIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklEQXVNelZsYlNBd0xqYzFaVzBnTUM0Mk1qVmxiVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUF4TGlCRGIzSnlaV04wSUhSb1pTQjBaWGgwSUhkeVlYQndhVzVuSUdsdUlFVmtaMlVnWVc1a0lFbEZMbHh1SUNBZ0lDQXFJREl1SUVOdmNuSmxZM1FnZEdobElHTnZiRzl5SUdsdWFHVnlhWFJoYm1ObElHWnliMjBnWUdacFpXeGtjMlYwWUNCbGJHVnRaVzUwY3lCcGJpQkpSUzVjYmlBZ0lDQWdLaUF6TGlCU1pXMXZkbVVnZEdobElIQmhaR1JwYm1jZ2MyOGdaR1YyWld4dmNHVnljeUJoY21VZ2JtOTBJR05oZFdkb2RDQnZkWFFnZDJobGJpQjBhR1Y1SUhwbGNtOGdiM1YwWEc0Z0lDQWdJQ29nSUNBZ1lHWnBaV3hrYzJWMFlDQmxiR1Z0Wlc1MGN5QnBiaUJoYkd3Z1luSnZkM05sY25NdVhHNGdJQ0FnSUNvdlhHNWNiaUFnSUNCc1pXZGxibVFnZTF4dUlDQWdJQ0FnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEc2dMeW9nTVNBcUwxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2RHRmliR1U3SUM4cUlERWdLaTljYmlBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nTVRBd0pUc2dMeW9nTVNBcUwxeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01Ec2dMeW9nTXlBcUwxeHVJQ0FnSUNBZ1kyOXNiM0k2SUdsdWFHVnlhWFE3SUM4cUlESWdLaTljYmlBZ0lDQWdJSGRvYVhSbExYTndZV05sT2lCdWIzSnRZV3c3SUM4cUlERWdLaTljYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUF4TGlCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWkdsemNHeGhlU0JwYmlCSlJTQTVMUzVjYmlBZ0lDQWdLaUF5TGlCQlpHUWdkR2hsSUdOdmNuSmxZM1FnZG1WeWRHbGpZV3dnWVd4cFoyNXRaVzUwSUdsdUlFTm9jbTl0WlN3Z1JtbHlaV1p2ZUN3Z1lXNWtJRTl3WlhKaExseHVJQ0FnSUNBcUwxeHVYRzRnSUNBZ2NISnZaM0psYzNNZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPeUF2S2lBeElDb3ZYRzRnSUNBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN0lDOHFJRElnS2k5Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCU1pXMXZkbVVnZEdobElHUmxabUYxYkhRZ2RtVnlkR2xqWVd3Z2MyTnliMnhzWW1GeUlHbHVJRWxGTGx4dUlDQWdJQ0FxTDF4dVhHNGdJQ0FnZEdWNGRHRnlaV0VnZTF4dUlDQWdJQ0FnYjNabGNtWnNiM2M2SUdGMWRHODdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdRR2xtSUY5dWIzSnRZV3hwZW1VdGFXNWpiSFZrWlNocGJuUmxjbUZqZEdsMlpTa2dlMXh1SUNBZ0lDOHFJRWx1ZEdWeVlXTjBhWFpsWEc0Z0lDQWdJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1SUNBZ0lDOHFYRzRnSUNBZ0lDb2dRV1JrSUhSb1pTQmpiM0p5WldOMElHUnBjM0JzWVhrZ2FXNGdSV1JuWlN3Z1NVVXNJR0Z1WkNCR2FYSmxabTk0TGx4dUlDQWdJQ0FxTDF4dVhHNGdJQ0FnWkdWMFlXbHNjeUI3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNCOVhHNWNiaUFnSUNBdktseHVJQ0FnSUNBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCa2FYTndiR0Y1SUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBZ0lDQWdLaTljYmx4dUlDQWdJSE4xYlcxaGNua2dlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2diR2x6ZEMxcGRHVnRPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFYRzRnSUNBZ0lDb2dRV1JrSUhSb1pTQmpiM0p5WldOMElHUnBjM0JzWVhrZ2FXNGdTVVVnT1MwdVhHNGdJQ0FnSUNvdlhHNWNiaUFnSUNCdFpXNTFJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVYRzRnSUNBZ0lDQkFhV1lnSkc1dmNtMWhiR2w2WlMxMlpYSjBhV05oYkMxeWFIbDBhRzBnZTF4dUlDQWdJQ0FnSUNBdktseHVJQ0FnSUNBZ0lDQWdLaUF4TGlCVFpYUWdNU0IxYm1sMElHOW1JSFpsY25ScFkyRnNJSEpvZVhSb2JTQnZiaUIwYUdVZ2RHOXdJR0Z1WkNCaWIzUjBiMjBnYldGeVoybHVMbHh1SUNBZ0lDQWdJQ0FnS2lBeUxpQlRaWFFnWTI5dWMybHpkR1Z1ZENCemNHRmpaU0JtYjNJZ2RHaGxJR3hwYzNRZ2MzUjViR1VnYVcxaFoyVXVYRzRnSUNBZ0lDQWdJQ0FxTDF4dVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHNXZjbTFoYkdsNlpTMXRZWEpuYVc0b01TQXdLVHNnTHlvZ01TQXFMMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3SURBZ01DQWthVzVrWlc1MExXRnRiM1Z1ZERzZ0x5b2dNaUFxTDF4dVhHNGdJQ0FnSUNBZ0lDOHFLbHh1SUNBZ0lDQWdJQ0FnS2lCVWRYSnVJRzltWmlCdFlYSm5hVzV6SUc5dUlHNWxjM1JsWkNCc2FYTjBjeTVjYmlBZ0lDQWdJQ0FnSUNvdlhHNWNiaUFnSUNBZ0lDQWdiV1Z1ZFNBbUxGeHVJQ0FnSUNBZ0lDQnZiQ0FtTEZ4dUlDQWdJQ0FnSUNCMWJDQW1JSHRjYmlBZ0lDQWdJQ0FnSUNCdFlYSm5hVzQ2SURBN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQkFhV1lnWDI1dmNtMWhiR2w2WlMxcGJtTnNkV1JsS0hOamNtbHdkR2x1WnlrZ2UxeHVJQ0FnSUM4cUlGTmpjbWx3ZEdsdVoxeHVJQ0FnSUNBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWkdsemNHeGhlU0JwYmlCSlJTQTVMUzVjYmlBZ0lDQWdLaTljYmx4dUlDQWdJR05oYm5aaGN5QjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nUVdSa0lIUm9aU0JqYjNKeVpXTjBJR1JwYzNCc1lYa2dhVzRnU1VVdVhHNGdJQ0FnSUNvdlhHNWNiaUFnSUNCMFpXMXdiR0YwWlNCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJRUJwWmlCZmJtOXliV0ZzYVhwbExXbHVZMngxWkdVb2FHbGtaR1Z1S1NCN1hHNGdJQ0FnTHlvZ1NHbGtaR1Z1WEc0Z0lDQWdJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRUZrWkNCMGFHVWdZMjl5Y21WamRDQmthWE53YkdGNUlHbHVJRWxGSURFd0xTNWNiaUFnSUNBZ0tpOWNibHh1SUNBZ0lGdG9hV1JrWlc1ZElIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzRpTEFvSkNTSXZLaUJTYjJKdmRHOGdLaTljYmtCbWIyNTBMV1poWTJVZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0oxSnZZbTkwYnljN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBek1EQTdYRzRnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdjM0pqT2lCMWNtd29KeTR1TDJadmJuUnpMMUp2WW05MGJ5OVNiMkp2ZEc4dE16QXdMbVZ2ZENjcE8xeHVJQ0J6Y21NNklIVnliQ2duTGk0dlptOXVkSE12VW05aWIzUnZMMUp2WW05MGJ5MHpNREF1Wlc5MFB5TnBaV1pwZUNjcElHWnZjbTFoZENnblpXMWlaV1JrWldRdGIzQmxiblI1Y0dVbktTeGNiaUFnSUNBZ0lDQnNiMk5oYkNnblVtOWliM1J2SUV4cFoyaDBKeWtzWEc0Z0lDQWdJQ0FnYkc5allXd29KMUp2WW05MGJ5MHpNREFuS1N4Y2JpQWdJQ0FnSUNCMWNtd29KeTR1TDJadmJuUnpMMUp2WW05MGJ5OVNiMkp2ZEc4dE16QXdMbmR2Wm1ZeUp5a2dabTl5YldGMEtDZDNiMlptTWljcExGeHVJQ0FnSUNBZ0lIVnliQ2duTGk0dlptOXVkSE12VW05aWIzUnZMMUp2WW05MGJ5MHpNREF1ZDI5bVppY3BJR1p2Y20xaGRDZ25kMjltWmljcExGeHVJQ0FnSUNBZ0lIVnliQ2duTGk0dlptOXVkSE12VW05aWIzUnZMMUp2WW05MGJ5MHpNREF1ZEhSbUp5a2dabTl5YldGMEtDZDBjblZsZEhsd1pTY3BMRnh1SUNBZ0lDQWdJSFZ5YkNnbkxpNHZabTl1ZEhNdlVtOWliM1J2TDFKdlltOTBieTB6TURBdWMzWm5JMUp2WW05MGJ5Y3BJR1p2Y20xaGRDZ25jM1puSnlrN1hHNTlYRzVjYmtCbWIyNTBMV1poWTJVZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0oxSnZZbTkwYnljN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzRnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdjM0pqT2lCMWNtd29KeTR1TDJadmJuUnpMMUp2WW05MGJ5OVNiMkp2ZEc4dGNtVm5kV3hoY2k1bGIzUW5LVHRjYmlBZ2MzSmpPaUIxY213b0p5NHVMMlp2Ym5SekwxSnZZbTkwYnk5U2IySnZkRzh0Y21WbmRXeGhjaTVsYjNRL0kybGxabWw0SnlrZ1ptOXliV0YwS0NkbGJXSmxaR1JsWkMxdmNHVnVkSGx3WlNjcExGeHVJQ0FnSUNBZ0lHeHZZMkZzS0NkU2IySnZkRzhuS1N4Y2JpQWdJQ0FnSUNCc2IyTmhiQ2duVW05aWIzUnZMWEpsWjNWc1lYSW5LU3hjYmlBZ0lDQWdJQ0IxY213b0p5NHVMMlp2Ym5SekwxSnZZbTkwYnk5U2IySnZkRzh0Y21WbmRXeGhjaTUzYjJabU1pY3BJR1p2Y20xaGRDZ25kMjltWmpJbktTeGNiaUFnSUNBZ0lDQjFjbXdvSnk0dUwyWnZiblJ6TDFKdlltOTBieTlTYjJKdmRHOHRjbVZuZFd4aGNpNTNiMlptSnlrZ1ptOXliV0YwS0NkM2IyWm1KeWtzWEc0Z0lDQWdJQ0FnZFhKc0tDY3VMaTltYjI1MGN5OVNiMkp2ZEc4dlVtOWliM1J2TFhKbFozVnNZWEl1ZEhSbUp5a2dabTl5YldGMEtDZDBjblZsZEhsd1pTY3BMRnh1SUNBZ0lDQWdJSFZ5YkNnbkxpNHZabTl1ZEhNdlVtOWliM1J2TDFKdlltOTBieTF5WldkMWJHRnlMbk4yWnlOU2IySnZkRzhuS1NCbWIzSnRZWFFvSjNOMlp5Y3BPMXh1ZlZ4dVhHNUFabTl1ZEMxbVlXTmxJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ2RTYjJKdmRHOG5PMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOVEF3TzF4dUlDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYRzRnSUhOeVl6b2dkWEpzS0NjdUxpOW1iMjUwY3k5U2IySnZkRzh2VW05aWIzUnZMVFV3TUM1bGIzUW5LVHRjYmlBZ2MzSmpPaUIxY213b0p5NHVMMlp2Ym5SekwxSnZZbTkwYnk5U2IySnZkRzh0TlRBd0xtVnZkRDhqYVdWbWFYZ25LU0JtYjNKdFlYUW9KMlZ0WW1Wa1pHVmtMVzl3Wlc1MGVYQmxKeWtzWEc0Z0lDQWdJQ0FnYkc5allXd29KMUp2WW05MGJ5Qk5aV1JwZFcwbktTeGNiaUFnSUNBZ0lDQnNiMk5oYkNnblVtOWliM1J2TFRVd01DY3BMRnh1SUNBZ0lDQWdJSFZ5YkNnbkxpNHZabTl1ZEhNdlVtOWliM1J2TDFKdlltOTBieTAxTURBdWQyOW1aakluS1NCbWIzSnRZWFFvSjNkdlptWXlKeWtzWEc0Z0lDQWdJQ0FnZFhKc0tDY3VMaTltYjI1MGN5OVNiMkp2ZEc4dlVtOWliM1J2TFRVd01DNTNiMlptSnlrZ1ptOXliV0YwS0NkM2IyWm1KeWtzWEc0Z0lDQWdJQ0FnZFhKc0tDY3VMaTltYjI1MGN5OVNiMkp2ZEc4dlVtOWliM1J2TFRVd01DNTBkR1luS1NCbWIzSnRZWFFvSjNSeWRXVjBlWEJsSnlrc1hHNGdJQ0FnSUNBZ2RYSnNLQ2N1TGk5bWIyNTBjeTlTYjJKdmRHOHZVbTlpYjNSdkxUVXdNQzV6ZG1jalVtOWliM1J2SnlrZ1ptOXliV0YwS0NkemRtY25LVHRjYm4xY2JseHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFuVW05aWIzUnZKenRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2JpQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh1SUNCemNtTTZJSFZ5YkNnbkxpNHZabTl1ZEhNdlVtOWliM1J2TDFKdlltOTBieTAzTURBdVpXOTBKeWs3WEc0Z0lITnlZem9nZFhKc0tDY3VMaTltYjI1MGN5OVNiMkp2ZEc4dlVtOWliM1J2TFRjd01DNWxiM1EvSTJsbFptbDRKeWtnWm05eWJXRjBLQ2RsYldKbFpHUmxaQzF2Y0dWdWRIbHdaU2NwTEZ4dUlDQWdJQ0FnSUd4dlkyRnNLQ2RTYjJKdmRHOGdRbTlzWkNjcExGeHVJQ0FnSUNBZ0lHeHZZMkZzS0NkU2IySnZkRzh0TnpBd0p5a3NYRzRnSUNBZ0lDQWdkWEpzS0NjdUxpOW1iMjUwY3k5U2IySnZkRzh2VW05aWIzUnZMVGN3TUM1M2IyWm1NaWNwSUdadmNtMWhkQ2duZDI5bVpqSW5LU3hjYmlBZ0lDQWdJQ0IxY213b0p5NHVMMlp2Ym5SekwxSnZZbTkwYnk5U2IySnZkRzh0TnpBd0xuZHZabVluS1NCbWIzSnRZWFFvSjNkdlptWW5LU3hjYmlBZ0lDQWdJQ0IxY213b0p5NHVMMlp2Ym5SekwxSnZZbTkwYnk5U2IySnZkRzh0TnpBd0xuUjBaaWNwSUdadmNtMWhkQ2duZEhKMVpYUjVjR1VuS1N4Y2JpQWdJQ0FnSUNCMWNtd29KeTR1TDJadmJuUnpMMUp2WW05MGJ5OVNiMkp2ZEc4dE56QXdMbk4yWnlOU2IySnZkRzhuS1NCbWIzSnRZWFFvSjNOMlp5Y3BPMXh1ZlZ4dVhHNUFabTl1ZEMxbVlXTmxJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ2RTYjJKdmRHOG5PMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4dUlDQm1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTTdYRzRnSUhOeVl6b2dkWEpzS0NjdUxpOW1iMjUwY3k5U2IySnZkRzh2VW05aWIzUnZMV2wwWVd4cFl5NWxiM1FuS1R0Y2JpQWdjM0pqT2lCMWNtd29KeTR1TDJadmJuUnpMMUp2WW05MGJ5OVNiMkp2ZEc4dGFYUmhiR2xqTG1WdmREOGphV1ZtYVhnbktTQm1iM0p0WVhRb0oyVnRZbVZrWkdWa0xXOXdaVzUwZVhCbEp5a3NYRzRnSUNBZ0lDQWdiRzlqWVd3b0oxSnZZbTkwYnljcExGeHVJQ0FnSUNBZ0lHeHZZMkZzS0NkU2IySnZkRzh0YVhSaGJHbGpKeWtzWEc0Z0lDQWdJQ0FnZFhKc0tDY3VMaTltYjI1MGN5OVNiMkp2ZEc4dlVtOWliM1J2TFdsMFlXeHBZeTUzYjJabU1pY3BJR1p2Y20xaGRDZ25kMjltWmpJbktTeGNiaUFnSUNBZ0lDQjFjbXdvSnk0dUwyWnZiblJ6TDFKdlltOTBieTlTYjJKdmRHOHRhWFJoYkdsakxuZHZabVluS1NCbWIzSnRZWFFvSjNkdlptWW5LU3hjYmlBZ0lDQWdJQ0IxY213b0p5NHVMMlp2Ym5SekwxSnZZbTkwYnk5U2IySnZkRzh0YVhSaGJHbGpMblIwWmljcElHWnZjbTFoZENnbmRISjFaWFI1Y0dVbktTeGNiaUFnSUNBZ0lDQjFjbXdvSnk0dUwyWnZiblJ6TDFKdlltOTBieTlTYjJKdmRHOHRhWFJoYkdsakxuTjJaeU5TYjJKdmRHOG5LU0JtYjNKdFlYUW9KM04yWnljcE8xeHVmVnh1WEc0dktpQnRZWFJsY21saGJDQnBZMjl1Y3lBcUwxeHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFuVFdGMFpYSnBZV3dnU1dOdmJuTW5PMXh1SUNCbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzRnSUhOeVl6b2dkWEpzS0NjdUxpOW1iMjUwY3k5TllYUmxjbWxoYkVsamIyNXpMVkpsWjNWc1lYSXVaVzkwSnlrN0lDOHFJRVp2Y2lCSlJUWXRPQ0FxTDF4dUlDQnpjbU02SUd4dlkyRnNLQ2ROWVhSbGNtbGhiQ0JKWTI5dWN5Y3BMRnh1SUNBZ0lDQWdJR3h2WTJGc0tDZE5ZWFJsY21saGJFbGpiMjV6TFZKbFozVnNZWEluS1N4Y2JpQWdJQ0FnSUNCMWNtd29KeTR1TDJadmJuUnpMMDFoZEdWeWFXRnNTV052Ym5NdFVtVm5kV3hoY2k1M2IyWm1NaWNwSUdadmNtMWhkQ2duZDI5bVpqSW5LU3hjYmlBZ0lDQWdJQ0IxY213b0p5NHVMMlp2Ym5SekwwMWhkR1Z5YVdGc1NXTnZibk10VW1WbmRXeGhjaTUzYjJabUp5a2dabTl5YldGMEtDZDNiMlptSnlrc1hHNGdJQ0FnSUNBZ2RYSnNLQ2N1TGk5bWIyNTBjeTlOWVhSbGNtbGhiRWxqYjI1ekxWSmxaM1ZzWVhJdWRIUm1KeWtnWm05eWJXRjBLQ2QwY25WbGRIbHdaU2NwTzF4dWZWeHVMbTFoZEdWeWFXRnNMV2xqYjI1eklIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDZE5ZWFJsY21saGJDQkpZMjl1Y3ljN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lCdWIzSnRZV3c3WEc0Z0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnWm05dWRDMXphWHBsT2lBeU5IQjRPeUFnTHlvZ1VISmxabVZ5Y21Wa0lHbGpiMjRnYzJsNlpTQXFMMXh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nYm05dVpUdGNiaUFnYkdWMGRHVnlMWE53WVdOcGJtYzZJRzV2Y20xaGJEdGNiaUFnZDI5eVpDMTNjbUZ3T2lCdWIzSnRZV3c3WEc0Z0lIZG9hWFJsTFhOd1lXTmxPaUJ1YjNkeVlYQTdYRzRnSUdScGNtVmpkR2x2YmpvZ2JIUnlPMXh1WEc0Z0lDOHFJRk4xY0hCdmNuUWdabTl5SUdGc2JDQlhaV0pMYVhRZ1luSnZkM05sY25NdUlDb3ZYRzRnSUMxM1pXSnJhWFF0Wm05dWRDMXpiVzl2ZEdocGJtYzZJR0Z1ZEdsaGJHbGhjMlZrTzF4dUlDQXZLaUJUZFhCd2IzSjBJR1p2Y2lCVFlXWmhjbWtnWVc1a0lFTm9jbTl0WlM0Z0tpOWNiaUFnZEdWNGRDMXlaVzVrWlhKcGJtYzZJRzl3ZEdsdGFYcGxUR1ZuYVdKcGJHbDBlVHRjYmx4dUlDQXZLaUJUZFhCd2IzSjBJR1p2Y2lCR2FYSmxabTk0TGlBcUwxeHVJQ0F0Ylc5NkxXOXplQzFtYjI1MExYTnRiMjkwYUdsdVp6b2daM0poZVhOallXeGxPMXh1WEc0Z0lDOHFJRk4xY0hCdmNuUWdabTl5SUVsRkxpQXFMMXh1SUNCbWIyNTBMV1psWVhSMWNtVXRjMlYwZEdsdVozTTZJQ2RzYVdkaEp6dGNibjFjYmlJc0Nna0pJaTh2WTI5c2IzSnpYRzRrZEdWNGRFTnZiRzl5T2lCb2Myd29NQ3dnTUN3Z01qVXBPMXh1SkdKblEyOXNiM0k2SUdoemJDZ3dMQ0F3TENBNU5pazdYRzRrY0dGdVpXeENaem9nYUhOc0tEQXNJREFzSURFd01DazdYRzRrY0dGdVpXeE1hV2RvZEVOdmJHOXlPaUJvYzJ3b01qRTRMQ0F4T1N3Z056VXBPMXh1Skd4cGJtdERiMnh2Y2pvZ2FITnNLREU1TkN3Z01UQXdMQ0F6T1NrN1hHNGthR2xuYUd4cFoyaDBRMjlzYjNJNklHaHpiQ2d6TkRBc0lEZ3lMQ0ExT1NrN1hHNWNiaTh2ZG1Gc2RXVnpYRzRrWjNWMGRHVnlPaUF5TUhCNE8xeHVKSEJoYm1Wc1JtOXVkRk5wZW1VNklERXpjSGc3WEc0a1luUnVTR1ZwWjJoME9pQXpObkI0TzF4dUpHbHVjSFYwU0dWcFoyaDBPaUF6TW5CNE8xeHVYRzRrWW1GelpVWnZiblE2SUNkU2IySnZkRzhuTENCSVpXeDJaWFJwWTJFc0lFRnlhV0ZzTENCellXNXpMWE5sY21sbU8xeHVYRzRsWTJ4bFlYSm1hWGdnZTF4dUlDQWdJQ1k2T21GbWRHVnlJSHRjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVHAwWVdKc1pUdGNiaUFnSUNBZ0lDQWdZMnhsWVhJNlltOTBhRHRjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRHBjSWx3aU8xeHVJQ0FnSUgxY2JuMWNibHh1SlcxaGRHVnlhV0ZzTFdsamIyNXpJSHRjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjAxaGRHVnlhV0ZzSUVsamIyNXpKenRjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nYm05eWJXRnNPMXh1SUNBZ0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklESTBjSGc3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFN1hHNGdJQ0FnYkdWMGRHVnlMWE53WVdOcGJtYzZJRzV2Y20xaGJEdGNiaUFnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nYm05dVpUdGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEdGNiaUFnSUNCM2IzSmtMWGR5WVhBNklHNXZjbTFoYkR0Y2JpQWdJQ0JrYVhKbFkzUnBiMjQ2SUd4MGNqdGNiaUFnSUNBdGQyVmlhMmwwTFdadmJuUXRabVZoZEhWeVpTMXpaWFIwYVc1bmN6b2dKMnhwWjJFbk8xeHVJQ0FnSUMxM1pXSnJhWFF0Wm05dWRDMXpiVzl2ZEdocGJtYzZJR0Z1ZEdsaGJHbGhjMlZrTzF4dWZWeHVYRzR2TDNKbGMzQnZibk5wZG1VZ1luSmxZV3R3YjJsdWRITmNiaVJpY21WaGF5MXNaem94TWpBd2NIZzdYRzRrWW5KbFlXc3RiV1E2T1RreWNIZzdYRzRrWW5KbFlXc3RjMjA2TnpZNGNIZzdYRzRrWW5KbFlXc3RlSE02TkRnd2NIZzdYRzVjYmx4dUpXWmhaR1ZKYmlCN1hHNGdJQ0FnWVc1cGJXRjBhVzl1T21aaFpHVkpiaUF6TlRCdGN5QmxZWE5sTFc5MWREdGNibjFjYmtCclpYbG1jbUZ0WlhNZ1ptRmtaVWx1SUh0Y2JpQWdJQ0JtY205dElIdGNiaUFnSUNBZ0lDQWdiM0JoWTJsMGVUb3dPMXh1SUNBZ0lIMWNiaUFnSUNCMGIzQWdlMXh1SUNBZ0lDQWdJQ0J2Y0dGamFYUjVPakU3WEc0Z0lDQWdmVnh1ZlZ4dUlpd0tDUWtpTG01c0xXZHlhV1FnZTF4dUlDQWdJR1JwYzNCc1lYazZabXhsZUR0Y2JpQWdJQ0JtYkdWNExYZHlZWEE2ZDNKaGNEdGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb3RKR2QxZEhSbGNqdGNiaUFnSUNCdFlYSm5hVzR0Y21sbmFIUTZMU1JuZFhSMFpYSTdYRzRnSUNBZ1BpQmJZMnhoYzNOZVBTZGpiMnd0SjEwZ2UxeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SkdkMWRIUmxjanRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2taM1YwZEdWeU8xeHVJQ0FnSUNBZ0lDQm1iR1Y0T2pBZ01DQXhNREFsTzF4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCOVhHNGdJQ0FnTG1OdmJDMTRlSE14SUh0Y2JpQWdJQ0FnSUNBZ1pteGxlRG93SURBZ09DNHpNek16TXpNek16TXpKVHRjYmlBZ0lDQWdJQ0FnYldGNExYZHBaSFJvT2lBNExqTXpNek16TXpNek16TWxPMXh1SUNBZ0lIMWNiaUFnSUNBdVkyOXNMWGg0Y3pJZ2UxeHVJQ0FnSUNBZ0lDQm1iR1Y0T2pBZ01DQXhOaTQyTmpZMk5qWTJOamNsTzF4dUlDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklERTJMalkyTmpZMk5qWTJOeVU3WEc0Z0lDQWdmVnh1SUNBZ0lDNWpiMnd0ZUhoek15QjdYRzRnSUNBZ0lDQWdJR1pzWlhnNk1DQXdJREkxSlR0Y2JpQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQXlOU1U3WEc0Z0lDQWdmVnh1SUNBZ0lDNWpiMnd0ZUhoek5DQjdYRzRnSUNBZ0lDQWdJR1pzWlhnNk1DQXdJRE16TGpNek16TXpNek16TXlVN1hHNGdJQ0FnSUNBZ0lHMWhlQzEzYVdSMGFEb2dNek11TXpNek16TXpNek16SlR0Y2JpQWdJQ0I5WEc0Z0lDQWdMbU52YkMxNGVITTFJSHRjYmlBZ0lDQWdJQ0FnWm14bGVEb3dJREFnTkRFdU5qWTJOalkyTmpZM0pUdGNiaUFnSUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUEwTVM0Mk5qWTJOalkyTmpjbE8xeHVJQ0FnSUgxY2JpQWdJQ0F1WTI5c0xYaDRjellnZTF4dUlDQWdJQ0FnSUNCbWJHVjRPakFnTUNBMU1DVTdYRzRnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nTlRBbE8xeHVJQ0FnSUgxY2JpQWdJQ0F1WTI5c0xYaDRjemNnZTF4dUlDQWdJQ0FnSUNCbWJHVjRPakFnTUNBMU9DNHpNek16TXpNek16TWxPMXh1SUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURVNExqTXpNek16TXpNek15VTdYRzRnSUNBZ2ZWeHVJQ0FnSUM1amIyd3RlSGh6T0NCN1hHNGdJQ0FnSUNBZ0lHWnNaWGc2TUNBd0lEWTJMalkyTmpZMk5qWTJOaVU3WEc0Z0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ05qWXVOalkyTmpZMk5qWTJKVHRjYmlBZ0lDQjlYRzRnSUNBZ0xtTnZiQzE0ZUhNNUlIdGNiaUFnSUNBZ0lDQWdabXhsZURvd0lEQWdOelVsTzF4dUlDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklEYzFKVHRjYmlBZ0lDQjlYRzRnSUNBZ0xtTnZiQzE0ZUhNeE1DQjdYRzRnSUNBZ0lDQWdJR1pzWlhnNk1DQXdJRGd6TGpNek16TXpNek16TXlVN1hHNGdJQ0FnSUNBZ0lHMWhlQzEzYVdSMGFEb2dPRE11TXpNek16TXpNek16SlR0Y2JpQWdJQ0I5WEc0Z0lDQWdMbU52YkMxNGVITXhNU0I3WEc0Z0lDQWdJQ0FnSUdac1pYZzZNQ0F3SURreExqWTJOalkyTmpZMk5pVTdYRzRnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nT1RFdU5qWTJOalkyTmpZMkpUdGNiaUFnSUNCOVhHNGdJQ0FnTG1OdmJDMTRlSE14TWlCN1hHNGdJQ0FnSUNBZ0lHWnNaWGc2TUNBd0lERXdNQ1U3WEc0Z0lDQWdmVnh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZKR0p5WldGckxYaHpLU0I3WEc0Z0lDQWdJQ0FnSUM1amIyd3RlSE14SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1pzWlhnNk1DQXdJRGd1TXpNek16TXpNek16TXlVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURndU16TXpNek16TXpNek15VTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnTG1OdmJDMTRjeklnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabXhsZURvd0lEQWdNVFl1TmpZMk5qWTJOalkzSlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nTVRZdU5qWTJOalkyTmpZM0pUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0F1WTI5c0xYaHpNeUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0T2pBZ01DQXlOU1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJREkxSlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQXVZMjlzTFhoek5DQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWJHVjRPakFnTUNBek15NHpNek16TXpNek16TWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQXpNeTR6TXpNek16TXpNek1sTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNWpiMnd0ZUhNMUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZzZNQ0F3SURReExqWTJOalkyTmpZMk55VTdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklEUXhMalkyTmpZMk5qWTJOeVU3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0xtTnZiQzE0Y3pZZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVEb3dJREFnTlRBbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGNExYZHBaSFJvT2lBMU1DVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnTG1OdmJDMTRjemNnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabXhsZURvd0lEQWdOVGd1TXpNek16TXpNek16SlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nTlRndU16TXpNek16TXpNekpUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0F1WTI5c0xYaHpPQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0T2pBZ01DQTJOaTQyTmpZMk5qWTJOallsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUEyTmk0Mk5qWTJOalkyTmpZbE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQzVqYjJ3dGVITTVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnNaWGc2TUNBd0lEYzFKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhlQzEzYVdSMGFEb2dOelVsTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNWpiMnd0ZUhNeE1DQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWJHVjRPakFnTUNBNE15NHpNek16TXpNek16TWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTRNeTR6TXpNek16TXpNek1sTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNWpiMnd0ZUhNeE1TQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWJHVjRPakFnTUNBNU1TNDJOalkyTmpZMk5qWWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTVNUzQyTmpZMk5qWTJOallsTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNWpiMnd0ZUhNeE1pQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWJHVjRPakFnTUNBeE1EQWxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZKR0p5WldGckxYTnRLU0I3WEc0Z0lDQWdJQ0FnSUM1amIyd3RjekVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabXhsZURvd0lEQWdPQzR6TXpNek16TXpNek16SlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nT0M0ek16TXpNek16TXpNekpUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0F1WTI5c0xYTXlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnNaWGc2TUNBd0lERTJMalkyTmpZMk5qWTJOeVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJREUyTGpZMk5qWTJOalkyTnlVN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMbU52YkMxek15QjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWJHVjRPakFnTUNBeU5TVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklESTFKVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBdVkyOXNMWE0wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1pzWlhnNk1DQXdJRE16TGpNek16TXpNek16TXlVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURNekxqTXpNek16TXpNek15VTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnTG1OdmJDMXpOU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0T2pBZ01DQTBNUzQyTmpZMk5qWTJOamNsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUEwTVM0Mk5qWTJOalkyTmpjbE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQzVqYjJ3dGN6WWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pteGxlRG93SURBZ05UQWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTFNQ1U3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0xtTnZiQzF6TnlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkdWNE9qQWdNQ0ExT0M0ek16TXpNek16TXpNbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGNExYZHBaSFJvT2lBMU9DNHpNek16TXpNek16TWxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUM1amIyd3RjemdnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabXhsZURvd0lEQWdOall1TmpZMk5qWTJOalkySlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nTmpZdU5qWTJOalkyTmpZMkpUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0F1WTI5c0xYTTVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnNaWGc2TUNBd0lEYzFKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhlQzEzYVdSMGFEb2dOelVsTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNWpiMnd0Y3pFd0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZzZNQ0F3SURnekxqTXpNek16TXpNek15VTdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklEZ3pMak16TXpNek16TXpNeVU3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0xtTnZiQzF6TVRFZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVEb3dJREFnT1RFdU5qWTJOalkyTmpZMkpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ09URXVOalkyTmpZMk5qWTJKVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBdVkyOXNMWE14TWlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkdWNE9qQWdNQ0F4TURBbE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNkpHSnlaV0ZyTFcxa0tTQjdYRzRnSUNBZ0lDQWdJQzVqYjJ3dGJURWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pteGxlRG93SURBZ09DNHpNek16TXpNek16TXpKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhlQzEzYVdSMGFEb2dPQzR6TXpNek16TXpNek16SlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQXVZMjlzTFcweUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZzZNQ0F3SURFMkxqWTJOalkyTmpZMk55VTdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklERTJMalkyTmpZMk5qWTJOeVU3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0xtTnZiQzF0TXlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkdWNE9qQWdNQ0F5TlNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURJMUpUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0F1WTI5c0xXMDBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnNaWGc2TUNBd0lETXpMak16TXpNek16TXpNeVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJRE16TGpNek16TXpNek16TXlVN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMbU52YkMxdE5TQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWJHVjRPakFnTUNBME1TNDJOalkyTmpZMk5qY2xPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTBNUzQyTmpZMk5qWTJOamNsTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNWpiMnd0YlRZZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVEb3dJREFnTlRBbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGNExYZHBaSFJvT2lBMU1DVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnTG1OdmJDMXROeUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0T2pBZ01DQTFPQzR6TXpNek16TXpNek1sTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUExT0M0ek16TXpNek16TXpNbE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQzVqYjJ3dGJUZ2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pteGxlRG93SURBZ05qWXVOalkyTmpZMk5qWTJKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhlQzEzYVdSMGFEb2dOall1TmpZMk5qWTJOalkySlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQXVZMjlzTFcwNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZzZNQ0F3SURjMUpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ056VWxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUM1amIyd3RiVEV3SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1pzWlhnNk1DQXdJRGd6TGpNek16TXpNek16TXlVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURnekxqTXpNek16TXpNek15VTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnTG1OdmJDMXRNVEVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabXhsZURvd0lEQWdPVEV1TmpZMk5qWTJOalkySlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nT1RFdU5qWTJOalkyTmpZMkpUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0F1WTI5c0xXMHhNaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0T2pBZ01DQXhNREFsTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SkdKeVpXRnJMV3huS1NCN1hHNGdJQ0FnSUNBZ0lDNWpiMnd0YkRFZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVEb3dJREFnT0M0ek16TXpNek16TXpNekpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ09DNHpNek16TXpNek16TXpKVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBdVkyOXNMV3d5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1pzWlhnNk1DQXdJREUyTGpZMk5qWTJOalkyTnlVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURFMkxqWTJOalkyTmpZMk55VTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnTG1OdmJDMXNNeUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0T2pBZ01DQXlOU1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJREkxSlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQXVZMjlzTFd3MElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZzZNQ0F3SURNekxqTXpNek16TXpNek15VTdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklETXpMak16TXpNek16TXpNeVU3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0xtTnZiQzFzTlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkdWNE9qQWdNQ0EwTVM0Mk5qWTJOalkyTmpjbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGNExYZHBaSFJvT2lBME1TNDJOalkyTmpZMk5qY2xPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUM1amIyd3RiRFlnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabXhsZURvd0lEQWdOVEFsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUExTUNVN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMbU52YkMxc055QjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWJHVjRPakFnTUNBMU9DNHpNek16TXpNek16TWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTFPQzR6TXpNek16TXpNek1sTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNWpiMnd0YkRnZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVEb3dJREFnTmpZdU5qWTJOalkyTmpZMkpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ05qWXVOalkyTmpZMk5qWTJKVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBdVkyOXNMV3c1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1pzWlhnNk1DQXdJRGMxSlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nTnpVbE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQzVqYjJ3dGJERXdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnNaWGc2TUNBd0lEZ3pMak16TXpNek16TXpNeVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJRGd6TGpNek16TXpNek16TXlVN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMbU52YkMxc01URWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pteGxlRG93SURBZ09URXVOalkyTmpZMk5qWTJKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhlQzEzYVdSMGFEb2dPVEV1TmpZMk5qWTJOalkySlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQXVZMjlzTFd3eE1pQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWJHVjRPakFnTUNBeE1EQWxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dUlpd0tDUWtpYUhSdGJDeGNibUp2WkhrZ2UxeHVJQ0FnSUdobGFXZG9kRG94TURBbE8xeHVmVnh1WEc0dWJtd3RjblZzWlhNZ2UxeHVJQ0FnSUhCdmMybDBhVzl1T25KbGJHRjBhWFpsTzF4dWZWeHVYRzR1YkdGNWIzVjBjeTFqYjI1MGNtOXNjeUI3WEc0Z0lDQWdiV0Z5WjJsdU9qQWdNQ0F4WlcwN1hHNGdJQ0FnZEdWNGRDMWhiR2xuYmpweWFXZG9kRHRjYmlBZ0lDQXVjMjl5ZEdsdVp5MXphRzkzSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRwdWIyNWxPMXh1SUNBZ0lIMWNiaUFnSUNBdWJHRjViM1YwTFdWNGNHOXlkQ0FtSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQjlYRzU5WEc1Y2JpNWxlSEJ2Y25RdGJHRjViM1YwY3kxamIyNTBjbTlzY3lCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnSUNCbWJHOWhkRG9nY21sbmFIUTdYRzRnSUNBZ2JXRnlaMmx1T2pBZ01DQXhaVzA3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5ianB5YVdkb2REdGNiaUFnSUNBdWJHRjViM1YwTFdWNGNHOXlkQ0FtSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHVibWN0YkdGNWIzVjBjeTFoY0hBZ2UxeHVJQ0FnSUNvZ2UxeHVJQ0FnSUNBZ0lDQmliM2d0YzJsNmFXNW5PbUp2Y21SbGNpMWliM2c3WEc0Z0lDQWdmVnh1SUNBZ0lDWXVZV3BoZUMxc2IyRmthVzVuTEZ4dUlDQWdJQ1l1WVdwaGVDMXNiMkZrYVc1bklDb2dlMXh1SUNBZ0lDQWdJQ0JqZFhKemIzSTZkMkZwZENBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUgxY2JpQWdJQ0JrYVhOd2JHRjVPbVpzWlhnN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9rWW1kRGIyeHZjanRjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9rWW1GelpVWnZiblE3WEc0Z0lDQWdabTl1ZEMxemFYcGxPakUyY0hnN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNk1TNDFPMXh1SUNBZ0lHTnZiRzl5T2lSMFpYaDBRMjlzYjNJN1hHNGdJQ0FnYldsdUxXaGxhV2RvZERveE1EQWxPMXh1SUNBZ0lDMTNaV0pyYVhRdFptOXVkQzF6Ylc5dmRHaHBibWM2SUdGdWRHbGhiR2xoYzJWa08xeHVJQ0FnSUMxdGIzb3RiM040TFdadmJuUXRjMjF2YjNSb2FXNW5PaUJuY21GNWMyTmhiR1U3WEc0Z0lDQWdZVHB1YjNRb0xtNXNMV0owYmlrZ2UxeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pva2JHbHVhME52Ykc5eU8xeHVJQ0FnSUgxY2JpQWdJQ0JvTVNCN1hHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb3hMall5TldWdE8xeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0Nk1XVnRJREFnTTJWdE8xeHVJQ0FnSUgxY2JpQWdJQ0F1Ym1jdGJHRjViM1YwY3kxamIyNTBZV2x1WlhJZ2UxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0Nk1DQmhkWFJ2TzF4dUlDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNk1USXdNSEI0TzF4dUlDQWdJQ0FnSUNCM2FXUjBhRG81T0NVN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNlpteGxlRHRjYmlBZ0lDQjlYRzRnSUNBZ0xteGhlVzkxZEhNdGMybGtaV0poY2lCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2pJd0pUdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRHBvYzJ3b01Dd2dNQ3dnT1RBcE8xeHVJQ0FnSUNBZ0lDQXViV0ZwYmkxdFpXNTFJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGRHOXdPaVJuZFhSMFpYSXFNanRjYmlBZ0lDQWdJQ0FnSUNBZ0lENGdkV3dnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4cGMzUXRjM1I1YkdVdGRIbHdaVHB1YjI1bE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jNk1EdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0Nk1EdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQStJR3hwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxXSnZkSFJ2YlRveGNIZ2djMjlzYVdRZ2FITnNZU2d3TENBd0xDQXdMQ0F3TGpBeUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSmpwbWFYSnpkQzFqYUdsc1pDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGRHOXdPakZ3ZUNCemIyeHBaQ0JvYzJ4aEtEQXNJREFzSURBc0lEQXVNRElwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUQ0Z1lTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bk9qRXdjSGdnTVRWd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNllteHZZMnM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2TUM0NE56VmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2pNd01EdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpwdWIyNWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKanBvYjNabGNpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRwb2MyeGhLREFzSURBc0lEQXNJREF1TURJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDWXVZM1Z5Y21WdWRDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQStJR0VnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZKR0puUTI5c2IzSTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZKR2hwWjJoc2FXZG9kRU52Ykc5eU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR04xY25OdmNqcGtaV1poZFd4ME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lDNXNZWGx2ZFhSekxXTnZiblJsYm5RZ2UxeHVJQ0FnSUNBZ0lDQm1iR1Y0T2pFN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNkpHZDFkSFJsY2lveExqVTdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPbkpsYkdGMGFYWmxPMXh1SUNBZ0lIMWNiaUFnSUNBbUxuTnZjblJwYm1jZ2UxeHVJQ0FnSUNBZ0lDQXViR0Y1YjNWMGN5MWpiMjUwY205c2N5QjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdWMyOXlkR2x1WnkxemFHOTNJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXVjMjl5ZEdsdVp5MW9hV1JsTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdMbTVzTFdacGJIUmxjaTFrY205d1pHOTNiaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpTQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQzVxY3kxaFpHUXRjblZzWlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQzV1YkMxdWJ5MW1hV3gwWlhKbFpDMXBkR1Z0Y3lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bElDRnBiWEJ2Y25SaGJuUTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ0xtMTFiSFJwWlc1MGNua3RhWFJsYlhNZ2UxeHVJQ0FnSUNBZ0lDQXViWFZzZEdsbGJuUnllUzFwZEdWdElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T25KbGJHRjBhWFpsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdMbWxqYjI0dFkyeHZjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVCbGVIUmxibVFnSlcxaGRHVnlhV0ZzTFdsamIyNXpPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPbUZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpwWjJoME9qWndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYjNBNk9YQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09qRTRjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPakU0Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZNVGh3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNk1UUndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZFhKemIzSTZjRzlwYm5SbGNqdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPbU5sYm5SbGNqdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPbUpoWTJ0bmNtOTFibVFnTUM0eE5YTTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKam82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERwY0ltTnNaV0Z5WENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDWTZhRzkyWlhJZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT25KblltRW9NQ3dnTUN3Z01Dd2dNQzR3TlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdhVzV3ZFhSYmRIbHdaVDEwWlhoMFhTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvelpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FtT21acGNuTjBMV05vYVd4a09tNTBhQzFzWVhOMExXTm9hV3hrS0RFcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVhV052YmkxamJHOXpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lDNXRkV3gwYVdWdWRISjVXMlJoZEdFdGJHRnpkRjlwZEdWdFgyTmhibDlpWlY5eVpXMXZkbVZrUFZ3aWRISjFaVndpWFNCN1hHNGdJQ0FnSUNBZ0lDNXRkV3gwYVdWdWRISjVMV2wwWlcxeklIdGNiaUFnSUNBZ0lDQWdJQ0FnSUM1dGRXeDBhV1Z1ZEhKNUxXbDBaVzBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1cFkyOXVMV05zYjNObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ0xtMTFiSFJwWlc1MGNua2dlMXh1SUNBZ0lDQWdJQ0F1Ym04dGFYUmxiWE10YlhObklIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERXpjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXVOV1Z0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSTJZeFpqRm1NVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQXdJREZsYlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQW1Mbk5vYjNjdGJXVnpjMkZuWlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F1Ym04dGFYUmxiWE10YlhObklIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYm4xY2JseHVMbXhoZVc5MWRITXRhR1ZoWkdWeUlIdGNiaUFnSUNCdFlYSm5hVzQ2TUNBd0lESmxiVHRjYmlBZ0lDQXViR0Y1YjNWMGN5MTBhWFJzWlNCN1hHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb3lNWEI0TzF4dUlDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REbzBNREE3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam93TzF4dUlDQWdJQ0FnSUNCbWJHOWhkRHBzWldaME8xeHVJQ0FnSUgxY2JpQWdJQ0F1YkdGNWIzVjBjeTFqYjI1MGNtOXNjeUI3WEc0Z0lDQWdJQ0FnSUdac2IyRjBPbkpwWjJoME8xeHVJQ0FnSUNBZ0lDQXVibXd0WkhKdmNHUnZkMjRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJQ1k2T21GbWRHVnlJSHRjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRHBjSWx3aU8xeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9uUmhZbXhsTzF4dUlDQWdJQ0FnSUNCamJHVmhjanBpYjNSb08xeHVJQ0FnSUgxY2JpQWdJQ0J3SUh0Y2JpQWdJQ0FnSUNBZ1kyeGxZWEk2WW05MGFEdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPakUwY0hnN1hHNGdJQ0FnZlZ4dWZWeHVJaXdLQ1FraUxtNXNMVzF2WkdGc0xXMWhjMnNnZTF4dUlDQWdJQ1J0YjJSaGJFSnZjbVJsY2xKaFpHbDFjem93Y0hnN1hHNGdJQ0FnY0c5emFYUnBiMjQ2Wm1sNFpXUTdYRzRnSUNBZ2VpMXBibVJsZURveE1EQXdPMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZhSE5zWVNnd0xDQXdMQ0F3TENBd0xqVXBPMXh1SUNBZ0lIUnZjRG93TzF4dUlDQWdJR3hsWm5RNk1EdGNiaUFnSUNCM2FXUjBhRG94TURBbE8xeHVJQ0FnSUdobGFXZG9kRG94TURBbE8xeHVJQ0FnSUc5MlpYSm1iRzkzT21ocFpHUmxianRjYmlBZ0lDQndZV1JrYVc1bk9qRTFjSGc3WEc0Z0lDQWdZVzVwYldGMGFXOXVPbTFoYzJ0R1lXUmxTVzRnTUM0eWN6dGNiaUFnSUNBcUlIdGNiaUFnSUNBZ0lDQWdZbTk0TFhOcGVtbHVaenBpYjNKa1pYSXRZbTk0TzF4dUlDQWdJSDFjYmlBZ0lDQXVibXd0Ylc5a1lXd2dlMXh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZianBoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJQ0FnZEc5d09qVXdKVHRjYmlBZ0lDQWdJQ0FnYkdWbWREbzFNQ1U3WEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRwMGNtRnVjMnhoZEdVb0xUVXdKU3dnTFRVd0pTazdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2STJabVpqdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pva2JXOWtZV3hDYjNKa1pYSlNZV1JwZFhNN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2pVd01IQjRPMXh1SUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2T1RnbE8xeHVJQ0FnSUNBZ0lDQnRZWGd0YUdWcFoyaDBPams0SlR0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRwbWJHVjRPMXh1SUNBZ0lDQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqcGpiMngxYlc0N1hHNGdJQ0FnSUNBZ0lHRnVhVzFoZEdsdmJqcHRiMlJoYkZOc2FXUmxJREF1TkhNZ1pXRnpaUzF2ZFhRN1hHNGdJQ0FnSUNBZ0lDNWpiRzl6WlMxdGIyUmhiQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqcGhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKcFoyaDBPakUxY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYjNBNk1UWndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNllteHZZMnM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvalptWm1PMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T201dmJtVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuT2pBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2TWpSd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NlkyVnVkR1Z5TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRHAwY21GdWMzQmhjbVZ1ZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqcHViMjVsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdRR1Y0ZEdWdVpDQWxiV0YwWlhKcFlXd3RhV052Ym5NN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FtT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2WENKamJHVmhjbHdpTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUM1dWJDMXRiMlJoYkMxaWIyUjVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jNk1qVndlQ0F4TlhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNabGNtWnNiM2N0ZVRwaGRYUnZPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhObkI0TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNXViQzF0YjJSaGJDMW9aV0ZrSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtYzZNVFZ3ZUNBek5YQjRJREUxY0hnZ01UVndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZhSE5zS0RBc0lEQXNJREkxS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pTm1abVk3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lSdGIyUmhiRUp2Y21SbGNsSmhaR2wxY3lBa2JXOWtZV3hDYjNKa1pYSlNZV1JwZFhNZ01DQXdPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9qSXdjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRhVzR0YUdWcFoyaDBPalU0Y0hnN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMbTVzTFcxdlpHRnNMV0ZqZEdsdmJuTWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01UVndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUmxlSFF0WVd4cFoyNDZJSEpwWjJoME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWFJ2Y0RvZ01YQjRJSE52Ykdsa0lISm5ZbUVvSXpBd01Dd2dMakVwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdMbTVzTFdKMGJpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxXeGxablE2SUM0MVpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMbVZ5Y205eWN5QjdYRzRnSUNBZ0lDQWdJQ0FnSUNCc2FYTjBMWE4wZVd4bExYUjVjR1U2Ym05dVpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiam90TUM0MVpXMGdNQ0F4TGpWbGJUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWM2TUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG94TlhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T25KbFpEdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0JtYjNKdElIdGNiaUFnSUNBZ0lDQWdiR0ZpWld3Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVHBpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9tNXZjbTFoYkR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG94TkhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVPakFnTUNBMGNIZzdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnYVc1d2RYUmJkSGx3WlQxY0luUmxlSFJjSWwwc1hHNGdJQ0FnSUNBZ0lHbHVjSFYwVzNSNWNHVTlYQ0p1ZFcxaVpYSmNJbDBzWEc0Z0lDQWdJQ0FnSUdsdWNIVjBXM1I1Y0dVOVhDSjFjbXhjSWwwc1hHNGdJQ0FnSUNBZ0lHbHVjSFYwVzNSNWNHVTlYQ0psYldGcGJGd2lYU3hjYmlBZ0lDQWdJQ0FnZEdWNGRHRnlaV0VnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUcGliRzlqYXp0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJqb3dJREFnTVdWdE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b3ljSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURveE1EQWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHRmtaR2x1Wnpvd0lEQXVOelZsYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG94TkhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPalEwY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpYjNKa1pYSTZNWEI0SUhOdmJHbGtJR2h6YkNnd0xDQXdMQ0EzTUNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBalptWm1PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0pqbzZjR3hoWTJWb2IyeGtaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPbWh6YkNnd0xDQXdMQ0EzTUNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2RHVjRkR0Z5WldFZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPbUYxZEc4N1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0YVc0dGFHVnBaMmgwT2pFeU1IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZNQzR6TnpWbGJUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGMybDZaVHAyWlhKMGFXTmhiRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCcGJuQjFkRnQwZVhCbFBWd2lZMmhsWTJ0aWIzaGNJbDBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pXWjBPaTA1T1RrNVpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNBcklHeGhZbVZzSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T21Kc2IyTnJPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPbkpsYkdGMGFYWmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtYzZNQzR6T0RRMk1UVXpPRFEyWlcwZ01DNHpPRFEyTVRVek9EUTJaVzBnTUM0ek9EUTJNVFV6T0RRMlpXMGdNbVZ0SUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1T2pBZ01DQXdMalZsYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamRYSnpiM0k2Y0c5cGJuUmxjanRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FtT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkFaWGgwWlc1a0lDVnRZWFJsY21saGJDMXBZMjl1Y3p0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPakkwY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5SbGJuUTZYQ0pqYUdWamExOWliM2hmYjNWMGJHbHVaVjlpYkdGdWExd2lPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpwaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1ZtZERvd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYjNBNk1DNHhaVzA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T21oemJDZ3dMQ0F3TENBME1DazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSmpwamFHVmphMlZrSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBcklHeGhZbVZzSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKam82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5SbGJuUTZYQ0pqYUdWamExOWliM2hjSWp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaVJzYVc1clEyOXNiM0k3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FtT21sdVpHVjBaWEp0YVc1aGRHVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ3NnYkdGaVpXd2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERwY0ltbHVaR1YwWlhKdGFXNWhkR1ZmWTJobFkydGZZbTk0WENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ0xtWnZjbTB0WVdOMGFXOXVjeUI3WEc0Z0lDQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NmNtbG5hSFE3WEc0Z0lDQWdmVnh1SUNBZ0lDNXViQzF0YjJSaGJDMXNiMkZrWlhJZ2UxeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvalptWm1PMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2TVRSd2VEdGNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQWdJSFJ2Y0RvMU1DVTdYRzRnSUNBZ0lDQWdJR3hsWm5RNk5UQWxPMXh1SUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2ZEhKaGJuTnNZWFJsS0MwMU1DVXNJQzAxTUNVcE8xeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9tNXZibVU3WEc0Z0lDQWdJQ0FnSUQ0Z2MzQmhiaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQkFaWGgwWlc1a0lDNXNiMkZrYVc1bkxXNW5MV2xqYjI0N1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmk1dGIyUmhiQzFzYjJGa2FXNW5JSHRjYmlBZ0lDQWdJQ0FnTG01c0xXMXZaR0ZzTFd4dllXUmxjaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9tSnNiMk5yTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNXViQzF0YjJSaGJDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T201dmJtVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc1QWEyVjVabkpoYldWeklHMWhjMnRHWVdSbFNXNGdlMXh1SUNBZ0lHWnliMjBnZTF4dUlDQWdJQ0FnSUNCdmNHRmphWFI1T2pBN1hHNGdJQ0FnZlZ4dUlDQWdJSFJ2SUh0Y2JpQWdJQ0FnSUNBZ2IzQmhZMmwwZVRveE8xeHVJQ0FnSUgxY2JuMWNia0JyWlhsbWNtRnRaWE1nYlc5a1lXeFRiR2xrWlNCN1hHNGdJQ0FnWm5KdmJTQjdYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMTBiM0E2TlRCd2VEdGNiaUFnSUNBZ0lDQWdiM0JoWTJsMGVUb3dPMXh1SUNBZ0lIMWNiaUFnSUNCMGIzQWdlMXh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2pBN1hHNGdJQ0FnSUNBZ0lHOXdZV05wZEhrNk1UdGNiaUFnSUNCOVhHNTlYRzRpTEFvSkNTSXVibXd0ZEc5dmJIUnBjQ0I3WEc0Z0lDQWdaR2x6Y0d4aGVUcHViMjVsTzF4dUlDQWdJSEJ2YzJsMGFXOXVPbVpwZUdWa08xeHVJQ0FnSUhkcFpIUm9Pak13TUhCNE8xeHVJQ0FnSUhvdGFXNWtaWGc2TVRBeE1EdGNiaUFnSUNBdWJtd3RkRzl2YkhScGNDMXBibTVsY2lCN1hHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZhSE5zWVNnd0xDQXdMQ0F5TUN3Z01DNDVLVHRjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJMlptWmp0Y2JpQWdJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqcGpaVzUwWlhJN1hHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb3hNSEI0TzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2pBdU5XVnRJREZsYlR0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZNakF3TzF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpwaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem95Y0hnN1hHNGdJQ0FnSUNBZ0lDWTZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBaVzUwT2x3aVhDSTdYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG93TzF4dUlDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9qQTdYRzRnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpwaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmk1dWJDMTBiMjlzZEdsd0xYUnZjQ3hjYmlBZ0lDQW1MbTVzTFhSdmIyeDBhWEF0WW05MGRHOXRJSHRjYmlBZ0lDQWdJQ0FnTG01c0xYUnZiMngwYVhBdGFXNXVaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiR1ZtZERvd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T25SeVlXNXpiR0YwWlZnb0xUVXdKU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1PanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsWm5RNk5UQWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1elptOXliVHAwY21GdWMyeGhkR1ZZS0MwMU1DVXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMXNaV1owT2pSd2VDQnpiMnhwWkNCMGNtRnVjM0JoY21WdWREdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGNtbG5hSFE2TkhCNElITnZiR2xrSUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJQ1l1Ym13dGRHOXZiSFJwY0MxMGIzQWdlMXh1SUNBZ0lDQWdJQ0F1Ym13dGRHOXZiSFJwY0MxcGJtNWxjaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliM1IwYjIwNk1UQndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDWTZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRzl3T2pFd01DVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYUnZjRG8yY0hnZ2MyOXNhV1FnYUhOc1lTZ3dMQ0F3TENBeU1Dd2dNQzQ1S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQW1MbTVzTFhSdmIyeDBhWEF0WW05MGRHOXRJSHRjYmlBZ0lDQWdJQ0FnTG01c0xYUnZiMngwYVhBdGFXNXVaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkRzl3T2pFd2NIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnZkSFJ2YlRveE1EQWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMWliM1IwYjIwNk5uQjRJSE52Ykdsa0lHaHpiR0VvTUN3Z01Dd2dNakFzSURBdU9TazdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmk1dWJDMTBiMjlzZEdsd0xXeGxablFzWEc0Z0lDQWdKaTV1YkMxMGIyOXNkR2x3TFhKcFoyaDBJSHRjYmlBZ0lDQWdJQ0FnTG01c0xYUnZiMngwYVhBdGFXNXVaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkRzl3T2pBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2ZEhKaGJuTnNZWFJsV1NndE5UQWxLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDWTZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRzl3T2pVd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZkSEpoYm5Oc1lYUmxXU2d0TlRBbEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGRHOXdPalJ3ZUNCemIyeHBaQ0IwY21GdWMzQmhjbVZ1ZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0WW05MGRHOXRPalJ3ZUNCemIyeHBaQ0IwY21GdWMzQmhjbVZ1ZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQW1MbTVzTFhSdmIyeDBhWEF0YkdWbWRDQjdYRzRnSUNBZ0lDQWdJQzV1YkMxMGIyOXNkR2x3TFdsdWJtVnlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISnBaMmgwT2pFd2NIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxablE2TVRBd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGJHVm1kRG8yY0hnZ2MyOXNhV1FnYUhOc1lTZ3dMQ0F3TENBeU1Dd2dNQzQ1S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQW1MbTVzTFhSdmIyeDBhWEF0Y21sbmFIUWdlMXh1SUNBZ0lDQWdJQ0F1Ym13dGRHOXZiSFJwY0MxcGJtNWxjaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaV1owT2pFd2NIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISnBaMmgwT2pFd01DVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYSnBaMmgwT2pad2VDQnpiMnhwWkNCb2MyeGhLREFzSURBc0lESXdMQ0F3TGprcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJQ1l1Ym13dGRHOXZiSFJwY0MxaFkzUnBkbVVnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T21Kc2IyTnJPMXh1SUNBZ0lDQWdJQ0JoYm1sdFlYUnBiMjQ2YzJodmQxUlVJREl3TUcxeklHVmhjMlV0YjNWME8xeHVJQ0FnSUgxY2JuMWNia0JyWlhsbWNtRnRaWE1nYzJodmQxUlVJSHRjYmlBZ0lDQm1jbTl0SUh0Y2JpQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvd08xeHVJQ0FnSUgxY2JpQWdJQ0IwYjNBZ2UxeHVJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9qRTdYRzRnSUNBZ2ZWeHVmVnh1SWl3S0NRa2lMbTVzTFdSeWIzQmtiM2R1SUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdKbHRrWVhSaExYQnZjMmwwYVc5dVBTZHlhV2RvZENkZElIdGNiaUFnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nY21sbmFIUTdYRzRnSUNBZ0lDQWdJQzV1YkMxa2NtOXdaRzkzYmkxdFpXNTFJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISnBaMmgwT2lBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWbWREb2dZWFYwYnp0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0F1Ym13dFpISnZjR1J2ZDI0dGJXVnVkU0I3WEc0Z0lDQWdJQ0FnSUhacGMybGlhV3hwZEhrNklHaHBaR1JsYmp0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQmliM1IwYjIwNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJREE3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklHaHpiQ2d3TENBd0xDQXlOU2s3WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFqWm1abU8xeHVJQ0FnSUNBZ0lDQjZMV2x1WkdWNE9pQXRNVEE3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nTUR0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ0xqVmxiU0F3TzF4dUlDQWdJQ0FnSUNCc2FYTjBMWE4wZVd4bExYUjVjR1U2SUc1dmJtVTdYRzRnSUNBZ0lDQWdJRDRnYkdrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJqb2dNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lENGdZU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lENGdjM0JoYml4Y2JpQWdJQ0FnSUNBZ0lDQWdJRDRnWW5WMGRHOXVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV6Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ0xqWmxiU0F4WlcwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTnBkR2x2YmpvZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2lBdU1uTWdaV0Z6WlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEk2SURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dkSEpoYm5Od1lYSmxiblE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dhVzVvWlhKcGREdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW1XMlJwYzJGaWJHVmtYU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXdZV05wZEhrNklDNHlPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamRYSnpiM0k2SUdSbFptRjFiSFE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ1BpQmhMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1BpQmlkWFIwYjI0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCcGJtaGxjbWwwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNZNmFHOTJaWEk2Ym05MEtGdGthWE5oWW14bFpGMHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dhSE5zWVNnd0xDQXdMQ0F4TURBc0lDNHdOU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1dWIzUmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dMalk1TWpNd056WTVNak5sYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHaHpiQ2d3TENBd0xDQTJOU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lDWXVibXd0WkhKdmNHUnZkMjR0WVdOMGFYWmxJSHRjYmlBZ0lDQWdJQ0FnTG01c0xXUnliM0JrYjNkdUxXMWxiblVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkbWx6YVdKcGJHbDBlVG9nZG1semFXSnNaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIb3RhVzVrWlhnNklERXdNREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBiM0E2SURFd01DVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzUjBiMjA2SUdGMWRHODdYRzRnSUNBZ0lDQWdJQ0FnSUNCaGJtbHRZWFJwYjI0NklITm9iM2RFY205d1pHOTNiaUF5TURCdGN5QmxZWE5sTFc5MWREdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FtTG01c0xXUnliM0JrYjNkdUxYUnZjQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXVibXd0WkhKdmNHUnZkMjR0YldWdWRTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRzl3T2lCaGRYUnZPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p2ZEhSdmJUb2dNVEF3SlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBdWJtd3RaSEp2Y0dSdmQyNHRkRzluWjJ4bExGeHVJQ0FnSUNBZ0lDQXVibXd0WkhKdmNHUnZkMjR0ZEc5bloyeGxPbWh2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklHaHpiQ2d3TENBd0xDQXlOU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0kyWm1aanRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQXVZMmhsWTJ0aWIzZ2dlMXh1SUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCc1pXWjBPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3SURGbGJUdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TTNCNE8xeHVJQ0FnSUNBZ0lDQnNZV0psYkNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2JtOTNjbUZ3TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJQzVtYVd4MFpYSXRZMmhsWTJ0bFpDMWhiVzkxYm5RZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ2NtbG5hSFE2SURGbGJUdGNiaUFnSUNBZ0lDQWdkRzl3T2lBd08xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV3Y0hnN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklDNDFaVzA3WEc0Z0lDQWdJQ0FnSUcxcGJpMTNhV1IwYURvZ01tVnRPMXh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1SUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhPMXh1SUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlROa0tEQXNJQzAxTUNVc0lEQXBPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBalJqTTFPVEJCTzF4dUlDQWdJQ0FnSUNCamIyeHZjam9nSTJabVpqdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ05UQXdaVzA3WEc0Z0lDQWdJQ0FnSUhvdGFXNWtaWGc2SURJN1hHNGdJQ0FnZlZ4dWZWeHVYRzVBYTJWNVpuSmhiV1Z6SUhOb2IzZEVjbTl3Wkc5M2JpQjdYRzRnSUNBZ1puSnZiU0I3WEc0Z0lDQWdJQ0FnSUc5d1lXTnBkSGs2SURBN1hHNGdJQ0FnZlZ4dUlDQWdJSFJ2Y0NCN1hHNGdJQ0FnSUNBZ0lHOXdZV05wZEhrNklERTdYRzRnSUNBZ2ZWeHVmVnh1SWl3S0NRa2lMbTVzTFdKMGJpQjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb3dJREE3WEc0Z0lDQWdZbTl5WkdWeU9tNXZibVU3WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pveWNIZzdYRzRnSUNBZ1kyOXNiM0k2SkhSbGVIUkRiMnh2Y2p0Y2JpQWdJQ0J3YjNOcGRHbHZianB5Wld4aGRHbDJaVHRjYmlBZ0lDQm9aV2xuYUhRNkpHSjBia2hsYVdkb2REdGNiaUFnSUNCdFlYSm5hVzQ2TUR0Y2JpQWdJQ0J0YVc0dGQybGtkR2c2TmpSd2VEdGNiaUFnSUNCd1lXUmthVzVuT2pBZ01USndlRHRjYmlBZ0lDQmthWE53YkdGNU9tbHViR2x1WlMxaWJHOWphenRjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9rWW1GelpVWnZiblE3WEc0Z0lDQWdabTl1ZEMxemFYcGxPakV6Y0hnN1hHNGdJQ0FnYjNabGNtWnNiM2M2YUdsa1pHVnVPMXh1SUNBZ0lIZHBiR3d0WTJoaGJtZGxPbUp2ZUMxemFHRmtiM2M3WEc0Z0lDQWdkSEpoYm5OcGRHbHZianBpYjNndGMyaGhaRzkzSUM0eWN5QmpkV0pwWXkxaVpYcHBaWElvTGpRc01Dd3hMREVwTENCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5SUM0eWN5QmpkV0pwWXkxaVpYcHBaWElvTGpRc01Dd3VNaXd4S1N3Z1kyOXNiM0lnTGpKeklHTjFZbWxqTFdKbGVtbGxjaWd1TkN3d0xDNHlMREVwTzF4dUlDQWdJRzkxZEd4cGJtVTZibTl1WlR0Y2JpQWdJQ0JqZFhKemIzSTZjRzlwYm5SbGNqdGNiaUFnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2Ym05dVpUdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9tTmxiblJsY2p0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERva1luUnVTR1ZwWjJoME8xeHVJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPbTFwWkdSc1pUdGNiaUFnSUNBbU9taHZkbVZ5SUh0Y2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEcG9jMnhoS0RBc0lEQXNJRFl5TENBd0xqSXBPMXh1SUNBZ0lDQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZibTl1WlR0Y2JpQWdJQ0I5WEc0Z0lDQWdKanBtYjJOMWN6cHViM1FvT21GamRHbDJaU2tnZTF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09taHpiR0VvTUN3Z01Dd2dOaklzSURBdU15azdYRzRnSUNBZ2ZWeHVJQ0FnSUNZNllXTjBhWFpsSUh0Y2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEcG9jMnhoS0RBc0lEQXNJRFl5TENBd0xqUXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDWXVibXd0WW5SdUxXeHBibXNnZTF4dUlDQWdJQ0FnSUNCamIyeHZjam9rYkdsdWEwTnZiRzl5TzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1l1Ym13dFluUnVMV2xqYjI0Z2UxeHVJQ0FnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2pVd0pUdGNiaUFnSUNBZ0lDQWdkMmxrZEdnNkpHSjBia2hsYVdkb2REdGNiaUFnSUNBZ0lDQWdiV2x1TFhkcFpIUm9PaVJpZEc1SVpXbG5hSFE3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2TUR0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9qSTBjSGc3WEc0Z0lDQWdJQ0FnSUdrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT21sdWFHVnlhWFE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9tSnNiMk5yTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmk1dWJDMWlkRzR0Y0hKcGJXRnllU0I3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNkpHeHBibXREYjJ4dmNqdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNkkyWm1aanRjYmlBZ0lDQWdJQ0FnSmpwb2IzWmxjaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPbVJoY210bGJpZ2tiR2x1YTBOdmJHOXlMQ0EwSlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdKanBtYjJOMWN6cHViM1FvT21GamRHbDJaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRHBrWVhKclpXNG9KR3hwYm10RGIyeHZjaXdnTlNVcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ1k2WVdOMGFYWmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZaR0Z5YTJWdUtDUnNhVzVyUTI5c2IzSXNJRFlsS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUNZdWJtd3RZblJ1TFhkb2FYUmxJSHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvalptWm1PMXh1SUNBZ0lDQWdJQ0FtT21odmRtVnlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZhSE5zWVNnd0xDQXdMQ0EyTWl3Z01DNHlLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBbU9tWnZZM1Z6T201dmRDZzZZV04wYVhabEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09taHpiR0VvTUN3Z01Dd2dOaklzSURBdU15azdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSmpwaFkzUnBkbVVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRHBvYzJ4aEtEQXNJREFzSURZeUxDQXdMalFwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVNCN1hHNGdJQ0FnSUNBZ0lIWmxjblJwWTJGc0xXRnNhV2R1T20xcFpHUnNaVHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2pFMWNIZzdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0pqcGthWE5oWW14bFpDQjdYRzRnSUNBZ0lDQWdJRzl3WVdOcGRIazZNQzQxTzF4dUlDQWdJSDFjYmlBZ0lDQXVibXd0WkhKdmNHUnZkMjR0WVdOMGFYWmxJRDRnSmlCN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VDQXljSGdnTUNBd08xeHVJQ0FnSUgxY2JuMWNibHh1TG01c0xYTmxiR1ZqZENCN1hHNGdJQ0FnWW05eVpHVnlPbTV2Ym1VN1hHNGdJQ0FnWTI5c2IzSTZKSFJsZUhSRGIyeHZjanRjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9rWW1GelpVWnZiblE3WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pveWNIZzdYRzRnSUNBZ2FHVnBaMmgwT2lSaWRHNUlaV2xuYUhRN1hHNGdJQ0FnY0dGa1pHbHVaem8wY0hnZ016SndlQ0EwY0hnZ01UQndlRHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZKSEJoYm1Wc1JtOXVkRk5wZW1VN1hHNGdJQ0FnWVhCd1pXRnlZVzVqWlRwdWIyNWxPMXh1SUNBZ0lHTjFjbk52Y2pwd2IybHVkR1Z5TzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZhSE5zS0RBc0lEQXNJRGsyS1R0Y2JpQWdJQ0IwY21GdWMybDBhVzl1T21KaFkydG5jbTkxYm1RdFkyOXNiM0lnTGpKeklHTjFZbWxqTFdKbGVtbGxjaWd1TkN3d0xDNHlMREVwTENCamIyeHZjaUF1TW5NZ1kzVmlhV010WW1WNmFXVnlLQzQwTERBc0xqSXNNU2s3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUcGNiaUFnSUNBZ0lDQWdiR2x1WldGeUxXZHlZV1JwWlc1MEtEUTFaR1ZuTENCMGNtRnVjM0JoY21WdWRDQTFNQ1VzSUdkeVlYa2dOVEFsS1N4Y2JpQWdJQ0FnSUNBZ2JHbHVaV0Z5TFdkeVlXUnBaVzUwS0RFek5XUmxaeXdnWjNKaGVTQTFNQ1VzSUhSeVlXNXpjR0Z5Wlc1MElEVXdKU2s3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZianBjYmlBZ0lDQWdJQ0FnWTJGc1l5Z3hNREFsSUMwZ01UWndlQ2tnTlRBbExGeHVJQ0FnSUNBZ0lDQmpZV3hqS0RFd01DVWdMU0F4TVhCNEtTQTFNQ1U3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9seHVJQ0FnSUNBZ0lDQTBjSGdnTlhCNExGeHVJQ0FnSUNBZ0lDQTFjSGdnTlhCNE8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhRN1hHNGdJQ0FnYldGNExYZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCdGFXUmtiR1U3WEc0Z0lDQWdKanBvYjNabGNpQjdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZhSE5zS0RBc0lEQXNJRGswS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdKanBtYjJOMWN6cHViM1FvT21GamRHbDJaU2tnZTF4dUlDQWdJQ0FnSUNCdmRYUnNhVzVsT201dmJtVTdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZhSE5zS0RBc0lEQXNJRGt5S1R0Y2JpQWdJQ0I5WEc1OVhHNWNiaTVzWVhsdmRYUXRhV052YmlCN1hHNGdJQ0FnWkdsemNHeGhlVHBpYkc5amF6dGNiaUFnSUNCM2FXUjBhRG8xTUhCNE8xeHVJQ0FnSUdobGFXZG9kRG8zTlhCNE8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT201dkxYSmxjR1ZoZER0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2pVd0pTQTFNQ1U3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9tTnZiblJoYVc0N1hHNGdJQ0FnTG01blkySWdMbkJ5WlhacFpYY3RjR0Z1Wld3Z0ppQjdYRzRnSUNBZ0lDQWdJSGRwWkhSb09qa3dKVHRjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPakE3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPakV6TUNVN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpveFpXMGdZWFYwYnlBd08xeHVJQ0FnSUNBZ0lDQmliM0prWlhJNk1uQjRJSE52Ykdsa0lHaHpiQ2d3TENBd0xDQTJNeWs3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGMybDZaVG81TlNVN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02TTNCNE8xeHVJQ0FnSUgxY2JuMWNibHh1TG14dllXUnBibWN0Ym1jdGFXTnZiaUI3WEc0Z0lHUnBjM0JzWVhrNmFXNXNhVzVsTFdKc2IyTnJPMXh1SUNCd2IzTnBkR2x2YmpweVpXeGhkR2wyWlR0Y2JpQWdabTl1ZEMxemFYcGxPakZsYlR0Y2JpQWdkMmxrZEdnNk1TNHpOelZsYlR0Y2JpQWdhR1ZwWjJoME9qSXVNemMxWlcwN1hHNGdJRzFoY21kcGJqb3daVzBnTVM0MVpXMGdMVEF1TTJWdE8xeHVJQ0IwY21GdWMyWnZjbTA2Y205MFlYUmxLQzAwT0dSbFp5azdYRzRnSUdGdWFXMWhkR2x2Ympwc2IyRmtVbTkwWVhSbElERXVOWE1nYVc1bWFXNXBkR1VnWTNWaWFXTXRZbVY2YVdWeUtEQXVORFVzSURBdU1EVXNJREF1TlRVc0lEQXVPVFVwTzF4dUlDQW1PanBpWldadmNtVXNYRzRnSUNZNk9tRm1kR1Z5SUh0Y2JpQWdJQ0JqYjI1MFpXNTBPbHdpWENJN1hHNGdJQ0FnWkdsemNHeGhlVHBpYkc5amF6dGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09tTjFjbkpsYm5SRGIyeHZjanRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2pVd0pUdGNiaUFnSUNCd2IzTnBkR2x2YmpwaFluTnZiSFYwWlR0Y2JpQWdJQ0JzWldaME9qVXdKVHRjYmlBZ2ZWeHVJQ0FtT2pwaVpXWnZjbVVnZTF4dUlDQWdJSGRwWkhSb09qRmxiVHRjYmlBZ0lDQm9aV2xuYUhRNk1XVnRPMXh1SUNBZ0lHMWhjbWRwYmkxc1pXWjBPaTB3TGpWbGJUdGNiaUFnSUNCaWIzUjBiMjA2TVM0ek56VmxiVHRjYmlBZ0lDQmhibWx0WVhScGIyNDZiRzloWkVKdmRXNWpaVlJ2Y0ZOeGRXRnphQ0F3TGpjMWN5QmhiSFJsY201aGRHVWdhVzVtYVc1cGRHVWdaV0Z6WlN3Z2JHOWhaRUp2ZFc1alpWUnZjRVpzYjNjZ01DNDNOWE1nWVd4MFpYSnVZWFJsSUdsdVptbHVhWFJsSUdWaGMyVTdYRzRnSUgxY2JpQWdKam82WVdaMFpYSWdlMXh1SUNBZ0lIZHBaSFJvT2pFdU16YzFaVzA3WEc0Z0lDQWdhR1ZwWjJoME9qRXVNemMxWlcwN1hHNGdJQ0FnYldGeVoybHVMV3hsWm5RNkxUQXVOamczTldWdE8xeHVJQ0FnSUdKdmRIUnZiVG93TzF4dUlDQWdJR0Z1YVcxaGRHbHZianBzYjJGa1FtOTFibU5sUW05MGRHOXRVM0YxWVhOb0lEQXVOelZ6SUdGc2RHVnlibUYwWlNCcGJtWnBibWwwWlNCbFlYTmxMQ0JzYjJGa1FtOTFibU5sUW05MGRHOXRSbXh2ZHlBd0xqYzFjeUJoYkhSbGNtNWhkR1VnYVc1bWFXNXBkR1VnWldGelpUdGNiaUFnZlZ4dWZWeHVRR3RsZVdaeVlXMWxjeUJzYjJGa1FtOTFibU5sVkc5d1UzRjFZWE5vSUh0Y2JpQWdNQ1VnZTF4dUlDQWdJR2hsYVdkb2REb3dMak0zTldWdE8xeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZNeTQzTldWdElETXVOelZsYlNBeExqSTFaVzBnTVM0eU5XVnRPMXh1SUNBZ0lIUnlZVzV6Wm05eWJUcHpZMkZzWlZnb01pazdYRzRnSUgxY2JpQWdNVFVsSUh0Y2JpQWdJQ0JvWldsbmFIUTZNV1Z0TzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNk5UQWxPMXh1SUNBZ0lIUnlZVzV6Wm05eWJUcHpZMkZzWlZnb01TazdYRzRnSUgxY2JpQWdNVEF3SlNCN1hHNGdJQ0FnYUdWcFoyaDBPakZsYlR0Y2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9qVXdKVHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZjMk5oYkdWWUtERXBPMXh1SUNCOVhHNTlYRzVBYTJWNVpuSmhiV1Z6SUd4dllXUkNiM1Z1WTJWQ2IzUjBiMjFUY1hWaGMyZ2dlMXh1SUNBd0pTQjdYRzRnSUNBZ2FHVnBaMmgwT2pGbGJUdGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPakV1TWpWbGJTQXhMakkxWlcwZ015NDNOV1Z0SURNdU56VmxiVHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZjMk5oYkdWWUtERXVOU2s3WEc0Z0lIMWNiaUFnTVRVbElIdGNiaUFnSUNCb1pXbG5hSFE2TVM0ek56VmxiVHRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2pVd0pUdGNiaUFnSUNCMGNtRnVjMlp2Y20wNmMyTmhiR1ZZS0RFcE8xeHVJQ0I5WEc0Z0lERXdNQ1VnZTF4dUlDQWdJR2hsYVdkb2REb3hMak0zTldWdE8xeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZOVEFsTzF4dUlDQWdJSFJ5WVc1elptOXliVHB6WTJGc1pWZ29NU2s3WEc0Z0lIMWNibjFjYmtCclpYbG1jbUZ0WlhNZ2JHOWhaRUp2ZFc1alpWUnZjRVpzYjNjZ2UxeHVJQ0F3SlNCN1hHNGdJQ0FnWW05MGRHOXRPakV1TVRJMVpXMDdYRzRnSUgxY2JpQWdOVEFsSUh0Y2JpQWdJQ0JpYjNSMGIyMDZNaTR5TldWdE8xeHVJQ0FnSUdGdWFXMWhkR2x2YmkxMGFXMXBibWN0Wm5WdVkzUnBiMjQ2WTNWaWFXTXRZbVY2YVdWeUtEQXVOVFVzSURBdU1EWXNJREF1Tmpnc0lEQXVNVGtwTzF4dUlDQjlYRzRnSURrd0pTQjdYRzRnSUNBZ1ltOTBkRzl0T2pFdU56VmxiVHRjYmlBZ2ZWeHVJQ0F4TURBbElIdGNiaUFnSUNCaWIzUjBiMjA2TVM0M05XVnRPMXh1SUNCOVhHNTlYRzVBYTJWNVpuSmhiV1Z6SUd4dllXUkNiM1Z1WTJWQ2IzUjBiMjFHYkc5M0lIdGNiaUFnTUNVZ2UxeHVJQ0FnSUdKdmRIUnZiVG93TGpFNE56VmxiVHRjYmlBZ2ZWeHVJQ0ExTUNVZ2UxeHVJQ0FnSUdKdmRIUnZiVG90TUM0NU16YzFaVzA3WEc0Z0lDQWdZVzVwYldGMGFXOXVMWFJwYldsdVp5MW1kVzVqZEdsdmJqcGpkV0pwWXkxaVpYcHBaWElvTUM0MU5Td2dNQzR3Tml3Z01DNDJPQ3dnTUM0eE9TazdYRzRnSUgxY2JpQWdPVEFsSUh0Y2JpQWdJQ0JpYjNSMGIyMDZNR1Z0TzF4dUlDQjlYRzRnSURFd01DVWdlMXh1SUNBZ0lHSnZkSFJ2YlRvd1pXMDdYRzRnSUgxY2JuMWNia0JyWlhsbWNtRnRaWE1nYkc5aFpGSnZkR0YwWlNCN1hHNGdJREFsSUh0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2Y205MFlYUmxLQzB5TWpoa1pXY3BPMXh1SUNCOVhHNGdJRFE1SlNCN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T25KdmRHRjBaU2d0TkRoa1pXY3BPMXh1SUNCOVhHNGdJRFV4SlNCN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T25KdmRHRjBaU2d0TkRoa1pXY3BPMXh1SUNCOVhHNGdJRGt5SlNCN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T25KdmRHRjBaU2d4TXpKa1pXY3BPMXh1SUNCOVhHNGdJREV3TUNVZ2UxeHVJQ0FnSUhSeVlXNXpabTl5YlRweWIzUmhkR1VvTVRNeVpHVm5LVHRjYmlBZ2ZWeHVmVnh1SWl3S0NRa2lJM0oxYkdWeklIdGNiaUFnSUNCMmFYTnBZbWxzYVhSNU9pQm9hV1JrWlc0N1hHNGdJQ0FnYVc1d2RYUmJkSGx3WlQwblkyaGxZMnRpYjNnblhTQjdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJQ0FnYkdWbWREb2dMVGs1T1RsbGJUdGNiaUFnSUNBZ0lDQWdLeUJzWVdKbGJDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWM2SURBZ01DQXdJREV1TnpWbGJUdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiam9nTGpWbGJTQXdJREZsYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR04xY25OdmNqb2djRzlwYm5SbGNqdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01XVnRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV1TkR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ1k2T21KbFptOXlaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUUdWNGRHVnVaQ0FsYldGMFpYSnBZV3d0YVdOdmJuTTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dKMk5vWldOclgySnZlRjl2ZFhSc2FXNWxYMkpzWVc1ckp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREU0Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHOXdPaUF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNZNlkyaGxZMnRsWkNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FySUd4aFltVnNJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FtT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQW5ZMmhsWTJ0ZlltOTRKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc1Y2JpNXViQzF5ZFd4bGN5MW9aV0ZrSUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01USndlRHRjYmlBZ0lDQmpiMnh2Y2pvZ2FITnNLREFzSURBc0lETTBLVHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdJREFnTW5CNE8xeHVJQ0FnSUM1dWJDMXlkV3hsY3kxb1pXRmtMWGR5WVhCd1pYSWdlMXh1SUNBZ0lDQWdJQ0JtYkdWNE9pQXhPMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SUNSbmRYUjBaWEk3WEc0Z0lDQWdmVnh1SUNBZ0lDNXlkV3hsTFhCeWFXOXlhWFI1SUh0Y2JpQWdJQ0FnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2JpQWdJQ0I5WEc1OVhHNWNiaTV1YkMxeWRXeGxMV05sYkd3Z2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnSUNCd1lXUmthVzVuT2lBMGNIZ2dKR2QxZEhSbGNpQTBjSGdnTUR0Y2JpQWdJQ0FtTG5KMWJHVXRjSEpwYjNKcGRIa2dlMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dOREJ3ZUR0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE1uQjRPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXdPMXh1SUNBZ0lIMWNiaUFnSUNBbUxuSjFiR1V0YkdGNWIzVjBJSHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREkxSlR0Y2JpQWdJQ0I5WEc0Z0lDQWdKaTV5ZFd4bExYUmhjbWRsZEhNZ2UxeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01qVWxPMXh1SUNBZ0lDQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0FnSUNBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWm14bGVDMXpkR0Z5ZER0Y2JpQWdJQ0FnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCalpXNTBaWEk3WEc0Z0lDQWdmVnh1SUNBZ0lDWXVjblZzWlMxamIyNWthWFJwYjI1eklIdGNiaUFnSUNBZ0lDQWdabXhsZURvZ01UdGNiaUFnSUNBZ0lDQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JpQWdJQ0FnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR1pzWlhndGMzUmhjblE3WEc0Z0lDQWdJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh1SUNBZ0lDQWdJQ0J0YVc0dGQybGtkR2c2SURBN1hHNGdJQ0FnSUNBZ0lIVnNJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TGpRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhndGFHVnBaMmgwT2lBMExqSmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUMxM1pXSnJhWFF0WW05NE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnTFhkbFltdHBkQzFzYVc1bExXTnNZVzF3T2lBek8xeHVJQ0FnSUNBZ0lDQWdJQ0FnTFhkbFltdHBkQzFpYjNndGIzSnBaVzUwT2lCMlpYSjBhV05oYkR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhRdGIzWmxjbVpzYjNjNklHVnNiR2x3YzJsek8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FtTG01c0xXbHViR2x1WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUGlCc2FTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXljSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDWTZPbUZtZEdWeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklDY3NKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbU9teGhjM1F0WTJocGJHUWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKam82WVdaMFpYSWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUNjbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0ppNXViQzFsYkd4cGNITnBjeUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUGlCc2FTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSbGVIUXRiM1psY21ac2IzYzZJR1ZzYkdsd2MybHpPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2FHbDBaUzF6Y0dGalpUb2dibTkzY21Gd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNCd0lIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9pQXdPMXh1SUNBZ0lIMWNiaUFnSUNCMWJDQjdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dNRHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTUR0Y2JpQWdJQ0FnSUNBZ2JHbHpkQzF6ZEhsc1pTMTBlWEJsT2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0ErSUd4cElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiam9nTUR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQXVkVzVwY1hWbElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2FITnNLREFzSURBc0lESXdLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYm4xY2JseHVMbTVzTFhKMWJHVWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdJREFnTVRCd2VEdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXljSGc3WEc0Z0lDQWdKaTV1YkMxeWRXeGxMV2hwWkdSbGJpQjdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJQ0FnZlZ4dUlDQWdJQzV5ZFd4bExYQnlhVzl5YVhSNUlIdGNiaUFnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdac1pYZ3RjM1JoY25RN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGRHOXdPaUFrWjNWMGRHVnlPMXh1SUNBZ0lIMWNiaUFnSUNBbUxuTm9iM2N0WW05a2VTQjdYRzRnSUNBZ0lDQWdJQzV1YkMxeWRXeGxMV0p2WkhrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQWdJQ0FnSUNCQVpYaDBaVzVrSUNWbVlXUmxTVzQ3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0xuSjFiR1V0WkdWMFlXbHNjeUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1PanBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dKMnRsZVdKdllYSmtYMkZ5Y205M1gzVndKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNBbUxuTm9iM2N0WVdOMGFXOXVjeUI3WEc0Z0lDQWdJQ0FnSUM1dWJDMXlkV3hsTFdGamRHbHZibk1nZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JBWlhoMFpXNWtJQ1ZtWVdSbFNXNDdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSmk1emFHOTNMV0p2WkhrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnTG01c0xYSjFiR1V0WVdOMGFXOXVjeUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2FITnNLREFzSURBc0lEa3dLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDNXlkV3hsTFdSbGRHRnBiSE1nZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lDQWdJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJQ1JuZFhSMFpYSWdNVEp3ZUR0Y2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dhSE5zS0RBc0lEQXNJRGt3S1R0Y2JpQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV1TmpZMk5qWTJOalkyTnp0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUdoemJDZ3dMQ0F3TENBeU1DazdYRzRnSUNBZ0lDQWdJQ1k2T21GbWRHVnlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJqb2dNWEI0SURBZ01DQXVNVEkxWlcwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JBWlhoMFpXNWtJQ1Z0WVhSbGNtbGhiQzFwWTI5dWN6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUNkclpYbGliMkZ5WkY5aGNuSnZkMTlrYjNkdUp6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNBdWJtd3RjblZzWlMxb1pXRmtJSHRjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBa1ozVjBkR1Z5TzF4dUlDQWdJQ0FnSUNCamIyeHZjam9nYUhOc0tEQXNJREFzSURRd0tUdGNiaUFnSUNBZ0lDQWdMbkoxYkdVdGJHRjViM1YwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRSd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2FITnNLREFzSURBc0lESXdLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBdWJtd3RaSEp2Y0dSdmQyNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJ6ZEhKbGRHTm9PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0xtNXNMV1J5YjNCa2IzZHVMWFJ2WjJkc1pTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YVc0dGQybGtkR2c2SUdGMWRHODdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TkhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEQWdMamMxWlcwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lCcGJtaGxjbWwwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBdWJtOHRiR0Y1YjNWMElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2FITnNLREFzSURBc0lEWXdLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1lTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxXeGxablE2SURGd2VDQnpiMnhwWkNCb2Myd29NQ3dnTUN3Z09UQXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtYzZJQzQyWlcwZ0xqWmxiU0F1Tm1WdElERmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUF4WlcwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQm9jMndvTUN3Z01Dd2dOekFwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SUM0eU5XVnRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNBdWJtd3RjblZzWlMxaWIyUjVJSHRjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dKR2QxZEhSbGNqdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nYUhOc0tEQXNJREFzSURrd0tUdGNiaUFnSUNBZ0lDQWdhRFFnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TW5CNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQXdJREV1TmpZMk5qWTJOalkyTjJWdE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSEF1Ym05MFpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzQ2SURFdU5XVnRJREFnTUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMzUjViR1U2SUdsMFlXeHBZenRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBdWNuVnNaUzFzWVhsdmRYUXRhVzVtYnlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVDMTNjbUZ3T2lCM2NtRndPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR1pzWlhndGMzUmhjblE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXVjblZzWlMxc1lYbHZkWFF0YVc1bWJ5MXBZMjl1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREV5Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ2FITnNLREFzSURBc0lEWXpLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF5Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURVMmNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM0JoWTJsMGVUb2dMalkxTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1c1lYbHZkWFF0YVdOdmJpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01UVXdKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBdWNuVnNaUzFzWVhsdmRYUXRhVzVtYnkxMFpYaDBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YVc0dGQybGtkR2c2SURnd2NIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabXhsZURvZ01UdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QyOXlaQzFpY21WaGF6b2dZbkpsWVdzdGQyOXlaRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCbWIzSnRJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJR2h6YkNnd0xDQXdMQ0E1TmlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF1T0dWdE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVPaUF1TldWdElEQTdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERXpjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNZV0psYkNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVPaUF3SURBZ0xqSTFaVzA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SUM0NVpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwYm5CMWRGdDBlWEJsUFNkMFpYaDBKMTBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNqb2dNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF1TldWdE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQXdJREZsYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVM0NE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdjMlZzWldOME9tNXZkQ2hiYlhWc2RHbHdiR1ZkS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FHVjRkR1Z1WkNBdWJtd3RjMlZzWldOME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVPaUF3SURBZ01XVnRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1pXTjBXMjExYkhScGNHeGxYU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQXdJREZsYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmNIUnBiMjRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXVNalZsYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXVabTl5YlMxaFkzUnBiMjV6SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQnlhV2RvZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDNXViQzFpZEc0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01qaHdlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01qaHdlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0xtcHpMV2x1Y0hWMExXSnliM2R6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtcHpMV05zWldGeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0kyWm1aanRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYSnBaMmgwT2lBeGNIZ2djMjlzYVdRZ2FITnNLREFzSURBc0lEazJLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pqcG9iM1psY2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQm9jMndvTUN3Z01Dd2dPVGdwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzVxY3kxMGNtbG5aMlZ5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSTJabVpqdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJR2x1YUdWeWFYUTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nSkdsdWNIVjBTR1ZwWjJoME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURGbGJUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzQmhiaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ0pHbHVjSFYwU0dWcFoyaDBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1k2T21GbWRHVnlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUNSc2FXNXJRMjlzYjNJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSTJabVpqdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUFrYVc1d2RYUklaV2xuYUhRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQmlZV05yWjNKdmRXNWtJQzR4TlhNZ1pXRnpaU3dnWTI5c2IzSWdMakUxY3lCbFlYTmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01EdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNakJ3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbU9taHZkbVZ5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNZNk9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUJrWVhKclpXNG9KR3hwYm10RGIyeHZjaXdnTkNVcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQXVaWEp5YjNKeklIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNhWE4wTFhOMGVXeGxMWFI1Y0dVNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVPaUF0TGpWbGJTQXdJREZsYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuT2lBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUNObU1EQTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdGaVpXd2dLeUF1WlhKeWIzSnpJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNDZJQzR5TldWdElEQWdMakV5TldWdE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNCOVhHNGdJQ0FnTG01c0xYSjFiR1V0WVdOMGFXOXVjeUI3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMTBiM0E2SURGd2VDQnpiMnhwWkNCb2MyeGhLREFzSURBc0lEQXNJQzR3TnpVcE8xeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQWtaM1YwZEdWeU8xeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFqWm1abU8xeHVJQ0FnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJ5YVdkb2REdGNiaUFnSUNCOVhHNGdJQ0FnTG5ObGRIUnBibWR6TFd4dllXUmxjaUI3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQm9jMndvTUN3Z01Dd2dOelVwTzF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERXdjSGc3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURGbGJTQXdPMXh1SUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lDQWdmVnh1SUNBZ0lDNXpaWFIwYVc1bmN5MXNhWE4wSUh0Y2JpQWdJQ0FnSUNBZ2JHbHpkQzF6ZEhsc1pTMTBlWEJsT2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0J0WVhKbmFXNDZJREE3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURBN1hHNGdJQ0FnSUNBZ0lENGdiR2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dMalZsYlNBeUxqVmxiU0F1TldWdElERmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQXdJQzQxWlcwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQm9jMnhoS0RBc0lEQXNJREV3TUN3Z0xqVXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0xuSmxiVzkyWlMxelpYUjBhVzVuSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtbG5hSFE2SURad2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBiM0E2SURkd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UaHdlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4T0hCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4T0hCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJvYzJ3b016TXdMQ0F4TURBc0lEVXdLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCaVlXTnJaM0p2ZFc1a0lDNHhOWE03WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVM0ek16TXpNek16TXpNelpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQnBibWhsY21sME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW1PbWh2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2NtZGlZU2d3TENBd0xDQXdMQ0F1TURncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQXVjMlYwZEdsdVozTXRkbUZzZFdVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVOVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDWXVaV1JwZEdGaWJHVXRkbUZzZFdVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ1pHRnphR1ZrSUdoemJHRW9NQ3dnTUN3Z01Dd2dMaklwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNZNk9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRR1Y0ZEdWdVpDQWxiV0YwWlhKcFlXd3RhV052Ym5NN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5SbGJuUTZJQ2RsWkdsMEp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeExqRTJOalkyTmpZMk5qZGxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUNSc2FXNXJRMjlzYjNJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJqb2dNQ0F3SURKd2VDQXVOV1Z0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ2JXbGtaR3hsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQXVaR2x6WVdKc1pXUXRiR0ZpWld3Z2UxeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV3Y0hnN1hHNGdJQ0FnSUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklDNDFaVzBnTVM0eU5XVnRPMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQWtaM1YwZEdWeU8xeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFrYUdsbmFHeHBaMmgwUTI5c2IzSTdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQWpabVptTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzV6YjNKMGFXNW5JQ1lnZTF4dUlDQWdJQ0FnSUNBdWJtd3RjblZzWlMxamIyNTBaVzUwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR04xY25OdmNqb2diVzkyWlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR04xY25OdmNqb2daM0poWWp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR04xY25OdmNqb2dMWGRsWW10cGRDMW5jbUZpTzF4dUlDQWdJQ0FnSUNBZ0lDQWdZbTk0TFhOb1lXUnZkem9nTUNBeWNIZ2dOSEI0SUdoemJHRW9NQ3dnTUN3Z01Dd2dMak1wTzF4dUlDQWdJQ0FnSUNBZ0lDQWdKanBoWTNScGRtVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR04xY25OdmNqb2daM0poWW1KcGJtYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1Z5YzI5eU9pQXRkMlZpYTJsMExXZHlZV0ppYVc1bk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNXViQzF5ZFd4bExXaGxZV1FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0pqbzZZbVZtYjNKbElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQW5KenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RISmhibk53WVhKbGJuUWdkWEpzS0Nka1lYUmhPaUJwYldGblpTOXdibWM3WW1GelpUWTBMR2xXUWs5U2R6QkxSMmR2UVVGQlFVNVRWV2hGVldkQlFVRkJUVUZCUVVGRVEwRlpRVUZCUWxkTFRGY3ZRVUZCUVVZd2JFVlJWbEZKVnpKT2ExbEhSRFI2T0VSQmQwMW5RVWt3UVUxRVFUUkJTVE5GUWtKRFMzSlBibEZCUVVGQlFWTlZWazlTU3pWRFdVbEpQU2NwSUhKbGNHVmhkRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dPSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bFpuUTZJRFJ3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGIzQTZJRGh3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWIzUjBiMjA2SURod2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQXVNalU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBdWJtd3RaSEp2Y0dSdmQyNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzl3WVdOcGRIazZJQzR6TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCdmFXNTBaWEl0WlhabGJuUnpPaUJ1YjI1bE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNXViQzF5ZFd4bExXRmpkR2x2Ym5Nc1hHNGdJQ0FnSUNBZ0lDNXlaVzF2ZG1VdGMyVjBkR2x1Wnl4Y2JpQWdJQ0FnSUNBZ0xuTmxkSFJwYm1kekxXRmpkR2x2Yml4Y2JpQWdJQ0FnSUNBZ1lTNXFjeTFzYVc1ckxXeGhlVzkxZEN4Y2JpQWdJQ0FnSUNBZ0xtcHpMVzl3Wlc0dFltMGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaU0FoYVcxd2IzSjBZVzUwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNWxaR2wwWVdKc1pTMTJZV3gxWlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpYjNKa1pYSTZJREFnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ1k2T21GbWRHVnlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bElDRnBiWEJ2Y25SaGJuUTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdKaTV1YkMxeWRXeGxMV2hwWkdSbGJpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lDWXVkV2t0YzI5eWRHRmliR1V0Y0d4aFkyVm9iMnhrWlhJZ2UxeHVJQ0FnSUNBZ0lDQjJhWE5wWW1sc2FYUjVPaUIyYVhOcFlteGxJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNBZ0lDQWdJQ0JpYjNndGMyaGhaRzkzT2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0J2ZFhSc2FXNWxPaUF4Y0hnZ1pHRnphR1ZrSUNSd1lXNWxiRXhwWjJoMFEyOXNiM0k3WEc0Z0lDQWdJQ0FnSUc5MWRHeHBibVV0YjJabWMyVjBPaUEwY0hnN1hHNGdJQ0FnSUNBZ0lDb2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1WEc0dWJtd3RjblZzWlMxamIyNTBaVzUwSUh0Y2JpQWdJQ0JtYkdWNE9pQXhPMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ05tWm1ZN1hHNGdJQ0FnWW05NExYTm9ZV1J2ZHpvZ01DQXhjSGdnTW5CNElISm5ZbUVvTUN3Z01Dd2dNQ3dnTGpJcE8xeHVmVnh1WEc0dWJtd3RjblZzWlhNZ2UxeHVJQ0FnSUc5MlpYSm1iRzkzTFhrNklHRjFkRzg3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnY21sbmFIUTZJREE3WEc0Z0lDQWdkRzl3T2lBeE5qUndlRHRjYmlBZ0lDQmliM1IwYjIwNklDUm5kWFIwWlhJZ0tpQXhMalU3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dOSEI0SUNSbmRYUjBaWElnS2lBeExqVWdKR2QxZEhSbGNpQXFJRFFnSkdkMWRIUmxjaUFxSURFdU5UdGNiaUFnSUNBdWJtd3RjblZzWlMxaVpYUjNaV1Z1SUh0Y2JpQWdJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0NklDNDNOV1Z0SURBN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNBZ0lDQWdMbk52Y25ScGJtY2dKaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUcxcFpHUnNaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNUzQzTldWdE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQzVvYVdSa1pXNHRZVzF2ZFc1MElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR3hsWm5RNklEVXdKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnZjRG9nTlRBbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVelpDZ3dMQ0F0TlRBbExDQXdLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dMamhsYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBeFpXMDdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc1Y2JpNXViQzF1YnkxcGRHVnRjeXhjYmk1dWJDMXVieTFtYVd4MFpYSmxaQzFwZEdWdGN5QjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dhWFJoYkdsak8xeHVJQ0FnSUcxaGNtZHBiam9nTTJWdElEQTdYRzRnSUNBZ0pqbzZZbVZtYjNKbExGeHVJQ0FnSUNZNk9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0p5MG5PMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQXVOV1Z0TzF4dUlDQWdJSDFjYm4xY2JpNXVieTFtYVd4MFpYSmxaQzFwZEdWdGN5QjdYRzRnSUNBZ0xtNXNMWEoxYkdVdFltVjBkMlZsYmlCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdmVnh1SUNBZ0lDNXViQzF1YnkxbWFXeDBaWEpsWkMxcGRHVnRjeUI3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lIMWNibjFjYmx4dUxtNXNMVzFoY0hCcGJtZHpMV1pwYkhSbGNpQjdYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2diR1ZtZER0Y2JuMWNiaUlzQ2drSklpTnNZWGx2ZFhSeklIdGNiaUFnSUNCa2FYTndiR0Y1T201dmJtVTdYRzU5WEc1Y2JpNXFjeTFqYUdGdVoyVXRiR0Y1YjNWMGN5MTJhV1YzSUh0Y2JpQWdJQ0FtT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNCQVpYaDBaVzVrSUNWdFlYUmxjbWxoYkMxcFkyOXVjenRjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRHBjSW5acFpYZGZZMjl0Wm5sY0lqdGNiaUFnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2YVc1b1pYSnBkRHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2pJMGNIZzdYRzRnSUNBZ2ZWeHVmVnh1WEc0dWJtd3RiR0Y1YjNWMExXbGpiMjRnZTF4dUlDQWdJR0p2Y21SbGNqb3hjSGdnYzI5c2FXUWdhSE5zS0RBc0lEQXNJRFl6S1R0Y2JpQWdJQ0J3WVdSa2FXNW5PakZ3ZUR0Y2JpQWdJQ0J2Y0dGamFYUjVPakF1TmpVN1hHNGdJQ0FnTG14aGVXOTFkQzFwWTI5dUlIdGNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUcGliRzlqYXp0Y2JpQWdJQ0FnSUNBZ2QybGtkR2c2TVRBd0pUdGNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9qQTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9qRTFNQ1U3WEc0Z0lDQWdmVnh1ZlZ4dUxtNXNMV3hoZVc5MWRDMXBibVp2SUh0Y2JpQWdJQ0F1Ym13dGJHRjViM1YwTFdSbGMyTnlhWEIwYVc5dUlIdGNiaUFnSUNBZ0lDQWdjQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0NklEQTdYRzRnSUNBZ0lDQWdJQ0FnSUNCM2IzSmtMV0p5WldGck9pQmljbVZoYXkxM2IzSmtPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dUxtNXNMV3hoZVc5MWRDMWpiMjUwWlc1MElIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pTm1abVk3WEc0Z0lDQWdZMjlzYjNJNmFITnNLREFzSURBc0lEUXdLVHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZNVEp3ZUR0Y2JpQWdJQ0F1Ym13dGJHRjViM1YwTFc1aGJXVWdlMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqcG9jMndvTUN3Z01Dd2dNakFwTzF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNk1UUndlRHRjYmlBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNk56QXdPMXh1SUNBZ0lDQWdJQ0JoSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9tbHVhR1Z5YVhRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZibTl1WlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0F1ZFc1d2RXSnNhWE5vWldRdGJHRmlaV3dnZTF4dUlDQWdJQ0FnSUNCMFpYaDBMWFJ5WVc1elptOXliVHAxY0hCbGNtTmhjMlU3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2YVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPbU5sYm5SbGNqdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9qQWdNV1Z0TzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2pBdU5XVnRJREF1TjJWdE8xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZPSEI0TzF4dUlDQWdJQ0FnSUNCamIyeHZjam9qWm1abU8xeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPbWh6YkNneU1EQXNJREl3TENBMU1DazdYRzRnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2pFdU16YzFPMXh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvM01EQTdYRzRnSUNBZ2ZWeHVmVnh1TG01c0xXeGhlVzkxZEMxaFkzUnBiMjV6SUh0Y2JpQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pwemRISmxkR05vTzF4dUlDQWdJQzV1YkMxc1lYbHZkWFF0WkdGMFlTQjdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZabXhsZUR0Y2JpQWdJQ0FnSUNBZ1pteGxlRG94TzF4dUlDQWdJQ0FnSUNCaGJHbG5iaTFwZEdWdGN6cGpaVzUwWlhJN1hHNGdJQ0FnSUNBZ0lDNXRaWFJoTFdsdVptOGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRwbWJHVjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1lXeHBaMjR0YVhSbGJYTTZZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9qSXdjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9qQXVNalZsYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQXVibXd0WkhKdmNHUnZkMjRnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T21ac1pYZzdYRzRnSUNBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T25OMGNtVjBZMmc3WEc0Z0lDQWdJQ0FnSUM1dWJDMWlkRzRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUcG1iR1Y0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02WTJWdWRHVnlPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT21GMWRHODdYRzRnSUNBZ0lDQWdJQ0FnSUNCdGFXNHRkMmxrZEdnNllYVjBienRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb3lOSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9tbHVhR1Z5YVhRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1OVhHNWNiaThxSUdkeWFXUWdkbWxsZHlBcUwxeHVMbTVzTFd4aGVXOTFkSE10ZG1sbGR5MW5jbWxrSUh0Y2JpQWdJQ0F1YW5NdFkyaGhibWRsTFd4aGVXOTFkSE10ZG1sbGR5QjdYRzRnSUNBZ0lDQWdJQ1k2T21KbFptOXlaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9sd2lkbWxsZDE5c2FYTjBYQ0k3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdMbTVzTFd4aGVXOTFkSE1nZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T21ac1pYZzdYRzRnSUNBZ0lDQWdJR1pzWlhndGQzSmhjRHAzY21Gd08xeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0Nk1DQXRNQzQzTlNva1ozVjBkR1Z5TzF4dUlDQWdJSDFjYmlBZ0lDQXVibXd0YkdGNWIzVjBJSHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZNalVsTzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2pBZ01DNDNOU29rWjNWMGRHVnlPMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPbVpzWlhnN1hHNGdJQ0FnSUNBZ0lDNXViQzFzWVhsdmRYUXRZMjl1ZEdWdWRDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzZ3RjMmhoWkc5M09qQWdNWEI0SURKd2VDQm9jMnhoS0RBc0lEQXNJREFnTENBdU1pazdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzQ2TUNBd0lERXVOU29rWjNWMGRHVnlPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRwbWJHVjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pteGxlRG94TzF4dUlDQWdJQ0FnSUNBZ0lDQWdabXhsZUMxa2FYSmxZM1JwYjI0NlkyOXNkVzF1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdKanBvYjNabGNpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMbTVzTFd4aGVXOTFkQzFoWTNScGIyNXpJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pva2JHbHVhME52Ykc5eU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2pabVptTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDNTFibkIxWW14cGMyaGxaQzFzWVdKbGJDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdU9qRXdjSGdnTUNBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNXViQzFzWVhsdmRYUXRhVzVtYnlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PakV3Y0hnZ01UQndlQ0F4TlhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVHBtYkdWNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWVd4cFoyNHRhWFJsYlhNNlpteGxlQzF6ZEdGeWREdGNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZzZNVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDNXViQzFzWVhsdmRYUXRkR1Y0ZENCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pteGxlRG94TzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0xtNXNMV3hoZVc5MWRDMXVZVzFsSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzQ2TUNBd0lEQXVOV1Z0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0xtNXNMV3hoZVc5MWRDMXRiMlJwWm1sbFpDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPakV4Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1T2pGbGJTQXdJREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZhSE5zS0RBc0lEQXNJRFl3S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVPakE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUM1dWJDMXNZWGx2ZFhRdGRIbHdaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvME1IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1T2pBZ01UQndlQ0F3SURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T201dmJtVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMbTVzTFd4aGVXOTFkQzFoWTNScGIyNXpJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNmFITnNLREFzSURBc0lEZ3pLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvek1IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NmNtVnNZWFJwZG1VN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T21KaFkydG5jbTkxYm1RZ0xqSnpPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRwbWJHVjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0xtNXNMV3hoZVc5MWRDMWtZWFJoSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuT2pBZ01UQndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1YldWMFlTMXBibVp2SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqcHBibWhsY21sME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0xtNXNMV1J5YjNCa2IzZHVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZianB6ZEdGMGFXTTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMbTVzTFdKMGJpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWM2TUNBeE1IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjanBwYm1obGNtbDBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1Ym13dFpISnZjR1J2ZDI0dGJXVnVkU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxablE2TUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbWxuYUhRNk1EdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnTG01c0xXeGhlVzkxZEhNdGFHVmhaQ0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2Ym05dVpTQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lIMWNiaUFnSUNBdWJHRjViM1YwTFhOdmNuUnBibWN0WTI5dWRISnZiSE1nZTF4dUlDQWdJQ0FnSUNCbWJHOWhkRG9nYkdWbWREdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNQ0F4WlcwZ01DQXdPMXh1SUNBZ0lDQWdJQ0F1Ym13dGMyVnNaV04wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdiR0ZpWld3Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVPaUF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHMXBaR1JzWlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJ0YVdSa2JHVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ01URXdNSEI0S1NCN1hHNGdJQ0FnSUNBZ0lDNXNZWGx2ZFhRdGMyOXlkR2x1WnkxamIyNTBjbTlzY3lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkc5aGREb2dibTl1WlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREZsYlNBd0lEQTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dNVFF3TUhCNEtTQjdYRzRnSUNBZ0lDQWdJQzV1YkMxc1lYbHZkWFFnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNk16TXVNek16TXpNek16TXpNek16SlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lSaWNtVmhheTF0WkNrZ2UxeHVJQ0FnSUNBZ0lDQXVibXd0YkdGNWIzVjBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2pVd0pUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibjFjYmx4dUx5b2diR2x6ZENCMmFXVjNJQ292WEc0dWJtd3RiR0Y1YjNWMGN5MTJhV1YzTFd4cGMzUWdlMXh1SUNBZ0lDNXViQzFzWVhsdmRYUXRhVzVtYnlCN1hHNGdJQ0FnSUNBZ0lHWnNaWGc2TVR0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1Wnpvd0lDUm5kWFIwWlhJN1hHNGdJQ0FnSUNBZ0lDNXViQzFzWVhsdmRYUXRkR1Y0ZENCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPbVpzWlhnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pwalpXNTBaWEk3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0T2pFN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMbTVzTFd4aGVXOTFkQzF1WVcxbElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZKR2QxZEhSbGNqdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9Pak13SlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQzV1YkMxc1lYbHZkWFF0Wlhod2IzSjBMV05vWldOclltOTRJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNXViQzFzWVhsdmRYUXRaR1Z6WTNKcGNIUnBiMjRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabXhsZURveE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2taM1YwZEdWeU8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQzV1YkMxc1lYbHZkWFF0Ylc5a2FXWnBaV1FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNk1UZ3djSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPbkpwWjJoME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb3lNSEI0TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJQzV1YkMxc1lYbHZkWFF0ZEhsd1pTQjdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb3dJREFnTUNBa1ozVjBkR1Z5TzF4dUlDQWdJQ0FnSUNCM2FXUjBhRG94TURCd2VEdGNiaUFnSUNBZ0lDQWdiM0prWlhJNk1UdGNiaUFnSUNCOVhHNGdJQ0FnTG01c0xXeGhlVzkxZEMxaFkzUnBiMjV6SUh0Y2JpQWdJQ0FnSUNBZ2IzSmtaWEk2TWp0Y2JpQWdJQ0FnSUNBZ2QybGtkR2c2TVRnd2NIZzdYRzRnSUNBZ0lDQWdJRDRnS2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPbVpzWlhnN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMbTVzTFd4aGVXOTFkQzFrWVhSaElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZzZNVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jNk1DQWtaM1YwZEdWeU8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0xtNXNMV3hoZVc5MWRDQjdYRzRnSUNBZ0lDQWdJQzV1YkMxc1lYbHZkWFF0WTI5dWRHVnVkQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJNk1YQjRJSE52Ykdsa0lHaHpiQ2d3TENBd0xDQTROU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0Nk1DQXdJQzB4Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPbVpzWlhnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0YVc0dGFHVnBaMmgwT2pZd2NIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBK0lDb2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZabXhsZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGJHbG5iaTFwZEdWdGN6cGpaVzUwWlhJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0xtNXNMV3hoZVc5MWRDMTBlWEJsSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZabXhsZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REbzJNSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02WTJWdWRHVnlPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUM1dWJDMXNZWGx2ZFhRdGFXTnZiaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvek1uQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1T2pBZ01UQndlQ0F3SURBN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMbTVzTFd4aGVXOTFkQzFoWTNScGIyNXpJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPbk4wY21WMFkyZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBdWJtd3RiR0Y1YjNWMExXUmhkR0VnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1dFpYUmhMV2x1Wm04Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPbWh6YkNnd0xDQXdMQ0EyTUNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBdWJtd3RaSEp2Y0dSdmQyNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzV1YkMxaWRHNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuT2pBZ01DNDNOV1Z0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBdWJtd3RiR0Y1YjNWMExXUmxjMk55YVhCMGFXOXVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2pFdU5UdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWGd0YUdWcFoyaDBPak5sYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRtVnlabXh2ZHpwb2FXUmtaVzQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVHBpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pMTNaV0pyYVhRdFltOTRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzEzWldKcmFYUXRiR2x1WlMxamJHRnRjRG95TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUMxM1pXSnJhWFF0WW05NExXOXlhV1Z1ZERwMlpYSjBhV05oYkR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMFpYaDBMVzkyWlhKbWJHOTNPbVZzYkdsd2MybHpPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09qRXdNQ1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnTG01c0xXeGhlVzkxZEMxdGIyUnBabWxsWkNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2TVRGd2VEdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNBdWJtd3RiR0Y1YjNWMGN5MW9aV0ZrSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRwbWJHVjRPMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2TVRKd2VEdGNiaUFnSUNBZ0lDQWdQaUFxSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZabXhsZUR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQXVhbk10Y21WdmNtUmxjaTFzWVhsdmRYUnpJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lBa2RHVjRkRU52Ykc5eU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZFhObGNpMXpaV3hsWTNRNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXVOV1Z0SURGbGJUdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiam9nTUNBdE1XVnRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEdGNiaUFnSUNBZ0lDQWdJQ0FnSUM1emIzSjBMV2xqYjI0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUEyY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeE0zQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQnRhV1JrYkdVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1T2lBd0lEQWdNQ0F1TldWdE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnZhVzUwWlhJdFpYWmxiblJ6T2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1k2T21KbFptOXlaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklDY25PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsWm5RNklEVXdKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHOXdPaUExTUNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsTTJRb0xUVXdKU3dnTFRVd0pTd2dNQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxc1pXWjBPaUEwY0hnZ2MyOXNhV1FnZEhKaGJuTndZWEpsYm5RN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMXlhV2RvZERvZ05IQjRJSE52Ykdsa0lIUnlZVzV6Y0dGeVpXNTBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUE0Y0hnZ2MyOXNhV1FnWTNWeWNtVnVkRU52Ykc5eU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ1l1WVdOMGFYWmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUdoemJDZ3dMQ0F3TENBNU1DazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMbk52Y25RdGFXTnZiaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSmk1emIzSjBhVzVuTFdGell5QjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1emIzSjBMV2xqYjI0Nk9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0ZEc5d09pQTRjSGdnYzI5c2FXUWdZM1Z5Y21WdWRFTnZiRzl5TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMV0p2ZEhSdmJUb2dNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0F1YkdGNWIzVjBMWE52Y25ScGJtY3RZMjl1ZEhKdmJITWdlMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bElDRnBiWEJ2Y25SaGJuUTdYRzRnSUNBZ2ZWeHVJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNkpHSnlaV0ZyTFd4bktTQjdYRzRnSUNBZ0lDQWdJQzV1YkMxc1lYbHZkWFF0ZEhsd1pTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzQ2TUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09qZ3djSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPbTV2Ym1VN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0xtNXNMV3hoZVc5MWRDMWhZM1JwYjI1eklIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PakUwTUhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaem93TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDNXViQzFzWVhsdmRYUXRhVzVtYnlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F1Ym13dGJHRjViM1YwTFc1aGJXVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09qUXdKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUM1dWJDMXNZWGx2ZFhRdGJXOWthV1pwWldRZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2TWpCd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURveE1EQndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0F1Ym13dGJHRjViM1YwY3kxb1pXRmtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDNXFjeTF5Wlc5eVpHVnlMV3hoZVc5MWRITWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtYzZJQzQxWlcwZ0xqYzFaVzA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVPaUF3SUMwdU56VmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pUmljbVZoYXkxdFpDa2dlMXh1SUNBZ0lDQWdJQ0F1Ym13dGJHRjViM1YwTFdsdVptOGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHRmtaR2x1Wnpvd0lEQWdNQ0FrWjNWMGRHVnlPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0xtNXNMV3hoZVc5MWRDMXVZVzFsSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWJHVjRPakU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZZWFYwYnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDNXViQzFzWVhsdmRYUXRaR1Z6WTNKcGNIUnBiMjRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2Ym05dVpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JuMWNibHh1TG01c0xYTm9ZWEpsWkMxc1lYbHZkWFJ6SUh0Y2JpQWdJQ0F1YldWMFlTMXBibVp2SUh0Y2JpQWdJQ0FnSUNBZ2FTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNmRISmhibk5zWVhSbE0yUW9NQ3dnTUM0eFpXMHNJREFwSUhKdmRHRjBaU2d5TVRCa1pXY3BPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dVhHNHVibXd0YkdGNWIzVjBMV1Y0Y0c5eWRDMWphR1ZqYTJKdmVDQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQnBibkIxZENCN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdjRzlwYm5SbGNpMWxkbVZ1ZEhNNklHRnNiRHRjYmlBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nTUR0Y2JpQWdJQ0FnSUNBZ2JHVm1kRG9nTFRrNU9UbGxiVHRjYmlBZ0lDQWdJQ0FnS3lCc1lXSmxiQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzQ2SURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklERmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldsdUxXaGxhV2RvZERvZ01XVnRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdKam82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JBWlhoMFpXNWtJQ1Z0WVhSbGNtbGhiQzFwWTI5dWN6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4WlcwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWbWREb2dNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYjNBNklEQTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0pqYUdWamExOWliM2hmYjNWMGJHbHVaVjlpYkdGdWExd2lPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ1k2WTJobFkydGxaQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXJJR3hoWW1Wc0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW1PanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNTBaVzUwT2lCY0ltTm9aV05yWDJKdmVGd2lPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkd4cGJtdERiMnh2Y2p0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0pqcGthWE5oWW14bFpDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBcklHeGhZbVZzSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmNHRmphWFI1T2lBdU1qdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpkWEp6YjNJNklHNXZkQzFoYkd4dmQyVmtPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUM1c1lYbHZkWFF0Wlhod2IzSjBJQ1lnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUNBZ2ZWeHVmVnh1SWl3S0NRa2lMbTVzTFcxdlpHRnNMV05oWTJobElIdGNiaUFnSUNBdWJtd3RiVzlrWVd3Z2UxeHVJQ0FnSUNBZ0lDQjNhV1IwYURvMk1EQndlRHRjYmlBZ0lDQWdJQ0FnTG01c0xXMXZaR0ZzTFdKdlpIa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHRmtaR2x1Wnpvd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnTG1WeWNtOXljeUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaem94TlhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmpvd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dWZWeHVMbTVzTFdOaFkyaGxjeTEwWVdKc1pTQjdYRzRnSUNBZ2QybGtkR2c2TVRBd0pUdGNiaUFnSUNCaWIzSmtaWEl0WTI5c2JHRndjMlU2WTI5c2JHRndjMlU3WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG90TVhCNE8xeHVJQ0FnSUhSb0xGeHVJQ0FnSUhSa0lIdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b3hOWEI0SURFMWNIZ2dNVFJ3ZUNBd08xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZNVEp3ZUR0Y2JpQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZNUzQxTzF4dUlDQWdJQ0FnSUNBbU9tWnBjbk4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG94TlhCNE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUhSb0lIdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRHBvYzJ3b01Dd2dNQ3dnT1RVcE8xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG8zTURBN1hHNGdJQ0FnSUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T25Wd2NHVnlZMkZ6WlR0Y2JpQWdJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqcHNaV1owTzF4dUlDQWdJQ0FnSUNBdWJtd3RZblJ1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhRdGRISmhibk5tYjNKdE9tNXZibVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG8xTURBN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnZEdRZ2UxeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pwb2Myd29NQ3dnTUN3Z016QXBPMXh1SUNBZ0lDQWdJQ0J3SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJqb3dPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZhVzVvWlhKcGREdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FtTG01c0xXTmhZMmhsY3kxMGRHd2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9qRTBjSGc3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdMbTVzTFdOaFkyaGxjeTFoWTNScGIyNGdlMXh1SUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T25KcFoyaDBPMXh1SUNBZ0lIMWNiaUFnSUNCMFltOWtlU0I3WEc0Z0lDQWdJQ0FnSUhSeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTFpYjNSMGIyMDZNWEI0SUhOdmJHbGtJR2h6YkNnd0xDQXdMQ0E0TWlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FtT214aGMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxaWIzUjBiMjA2Ym05dVpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0JwYm5CMWRGdDBlWEJsUFZ3aVkyaGxZMnRpYjNoY0lsMGdlMXh1SUNBZ0lDQWdJQ0FySUd4aFltVnNJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTJaWEptYkc5M09taHBaR1JsYmp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhRdGFXNWtaVzUwT2kwNU9UbGxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDWTZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR1Y0ZEMxcGJtUmxiblE2TUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDNXViQzF0YjJSaGJDMXRZWE5ySUNZZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jNk1DQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09qSmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZNbVZ0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiam93TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2YVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dWZWeHVMbTVzTFdOaFkyaGxjeTFsYlhCMGVTQjdYRzRnSUNBZ2NHRmtaR2x1WnpveE5YQjRPMXh1SUNBZ0lHMWhjbWRwYmpveFpXMGdNRHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPbU5sYm5SbGNqdGNibjFjYmlJc0Nna0pJa0JwYlhCdmNuUWdYQ0l1TGk4dUxpOHVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZaVzl1WVhOa1lXNHRZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUwySjFhV3hrTDJOemN5OWliMjkwYzNSeVlYQXRaR0YwWlhScGJXVndhV05yWlhKY0lqdGNibHh1TG0xaGRHVnlhV0ZzTFdsamIyNHRiR1ZtZENCN1hHNGdJQ1k2T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dKMnRsZVdKdllYSmtYMkZ5Y205M1gyeGxablFuTzF4dUlDQjlYRzU5WEc0dWJXRjBaWEpwWVd3dGFXTnZiaTF5YVdkb2RDQjdYRzRnSUNZNk9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nSjJ0bGVXSnZZWEprWDJGeWNtOTNYM0pwWjJoMEp6dGNiaUFnZlZ4dWZWeHVMbTFoZEdWeWFXRnNMV2xqYjI0dGRYQWdlMXh1SUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUNkclpYbGliMkZ5WkY5aGNuSnZkMTkxY0NjN1hHNGdJSDFjYm4xY2JpNXRZWFJsY21saGJDMXBZMjl1TFdSdmQyNGdlMXh1SUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUNkclpYbGliMkZ5WkY5aGNuSnZkMTlrYjNkdUp6dGNiaUFnZlZ4dWZWeHVMbTFoZEdWeWFXRnNMV2xqYjI0dGRHbHRaU0I3WEc0Z0lDWTZPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ0oyRmpZMlZ6YzE5MGFXMWxKenRjYmlBZ2ZWeHVmVnh1TG0xaGRHVnlhV0ZzTFdsamIyNHRZMkZzWlc1a1lYSWdlMXh1SUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUNkMGIyUmhlU2M3WEc0Z0lIMWNibjFjYmk1dFlYUmxjbWxoYkMxcFkyOXVMV1J2ZDI0Z2UxeHVJQ0FtT2pwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJQ2RyWlhsaWIyRnlaRjloY25KdmQxOWtiM2R1Snp0Y2JpQWdmVnh1ZlZ4dUxtMWhkR1Z5YVdGc0xXbGpiMjR0ZEhKaGMyZ2dlMXh1SUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUNka1pXeGxkR1VuTzF4dUlDQjlYRzU5WEc0dWJXRjBaWEpwWVd3dGFXTnZiaTFqYkc5elpTQjdYRzRnSUNZNk9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nSjJOc2IzTmxKenRjYmlBZ2ZWeHVmVnh1TG0xaGRHVnlhV0ZzTFdsamIyNHRkRzlrWVhrZ2UxeHVJQ0FtT2pwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJQ2R0ZVY5c2IyTmhkR2x2YmljN1hHNGdJSDFjYm4xY2JseHVMbVJoZEdWMGFXMWxjR2xqYTJWeUlIdGNiaUFnY0dGa1pHbHVaeTF5YVdkb2REb2dNbkpsYlR0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBdWFXNXdkWFF0WjNKdmRYQWdlMXh1SUNBZ0lHWnNaWGc2SURFN1hHNGdJSDFjYmlBZ0xtcHpMV05zWldGeUxXbHVjSFYwSUh0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF3TzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQnlhV2RvZERvZ01EdGNiaUFnSUNCM2FXUjBhRG9nTW5KbGJUdGNiaUFnSUNCMGIzQTZJRFV3SlR0Y2JpQWdJQ0JvWldsbmFIUTZJREp5WlcwN1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ0xURnlaVzA3WEc0Z0lDQWdZbTl5WkdWeU9pQXdPMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQWdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQnViMjVsTzF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnTGpJMWN6dGNiaUFnSUNCamIyeHZjam9nSTJRd01ESXhZanRjYmlBZ0lDQnBJSHRjYmlBZ0lDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQnRhV1JrYkdVN1hHNGdJQ0FnZlZ4dUlDQWdJQ1k2Wm05amRYTWdlMXh1SUNBZ0lDQWdiM1YwYkdsdVpUb2dibTl1WlR0Y2JpQWdJQ0I5WEc0Z0lIMWNiaUFnTG1SaGRHVjBhVzFsSUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdJREFnTGpWbGJUdGNiaUFnSUNCcGJuQjFkRnQwZVhCbFBWd2lkR1Y0ZEZ3aVhTQjdYRzRnSUNBZ0lDQnRZWEpuYVc0NklEQTdYRzRnSUNBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBelpXMDdYRzRnSUNBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJQ0FnZlZ4dUlDQWdJQzVwYm5CMWRDMXBZMjl1SUh0Y2JpQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUhKcFoyaDBPaUF3TzF4dUlDQWdJQ0FnZEc5d09pQTFNQ1U3WEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZrb0xUVXdKU2s3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5PaUF1TWpWbGJTQXVOV1Z0TzF4dUlDQWdJQ0FnY0c5cGJuUmxjaTFsZG1WdWRITTZJRzV2Ym1VN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1a1lYUmxkR2x0WlMxbWIzSnRZWFIwWldRZ2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0JzWldaME9pQXRPVGs1WlcwN1hHNGdJQ0FnZEc5d09pQXRPVGs1WlcwN1hHNGdJQ0FnZDJsa2RHZzZJREJ3ZUNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUdobGFXZG9kRG9nTUhCNElDRnBiWEJ2Y25SaGJuUTdYRzRnSUNBZ2RtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHVJQ0I5WEc0Z0lDWXVaR0YwWlMxbGJuUmxjbVZrSUh0Y2JpQWdJQ0F1YW5NdFkyeGxZWEl0YVc1d2RYUWdlMXh1SUNBZ0lDQWdiM0JoWTJsMGVUb2dNVHRjYmlBZ0lDQWdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQnBibWwwYVdGc08xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dUlpd0tDUWtpTHlvaFhHNGdLaUJFWVhSbGRHbHRaWEJwWTJ0bGNpQm1iM0lnUW05dmRITjBjbUZ3SUROY2JpQXFJSFpsY25OcGIyNGdPaUEwTGpFM0xqUTNYRzRnS2lCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdlJXOXVZWE5rWVc0dlltOXZkSE4wY21Gd0xXUmhkR1YwYVcxbGNHbGphMlZ5TDF4dUlDb3ZYRzR1WW05dmRITjBjbUZ3TFdSaGRHVjBhVzFsY0dsamEyVnlMWGRwWkdkbGRDQjdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1OVhHNHVZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUxYZHBaR2RsZEM1a2NtOXdaRzkzYmkxdFpXNTFJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lHMWhjbWRwYmpvZ01uQjRJREE3WEc0Z0lIQmhaR1JwYm1jNklEUndlRHRjYmlBZ2QybGtkR2c2SURFNVpXMDdYRzU5WEc1QWJXVmthV0VnS0cxcGJpMTNhV1IwYURvZ056WTRjSGdwSUh0Y2JpQWdMbUp2YjNSemRISmhjQzFrWVhSbGRHbHRaWEJwWTJ0bGNpMTNhV1JuWlhRdVpISnZjR1J2ZDI0dGJXVnVkUzUwYVcxbGNHbGphMlZ5TFhOaWN5QjdYRzRnSUNBZ2QybGtkR2c2SURNNFpXMDdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV2x1TFhkcFpIUm9PaUE1T1RKd2VDa2dlMXh1SUNBdVltOXZkSE4wY21Gd0xXUmhkR1YwYVcxbGNHbGphMlZ5TFhkcFpHZGxkQzVrY205d1pHOTNiaTF0Wlc1MUxuUnBiV1Z3YVdOclpYSXRjMkp6SUh0Y2JpQWdJQ0IzYVdSMGFEb2dNemhsYlR0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklERXlNREJ3ZUNrZ2UxeHVJQ0F1WW05dmRITjBjbUZ3TFdSaGRHVjBhVzFsY0dsamEyVnlMWGRwWkdkbGRDNWtjbTl3Wkc5M2JpMXRaVzUxTG5ScGJXVndhV05yWlhJdGMySnpJSHRjYmlBZ0lDQjNhV1IwYURvZ016aGxiVHRjYmlBZ2ZWeHVmVnh1TG1KdmIzUnpkSEpoY0Mxa1lYUmxkR2x0WlhCcFkydGxjaTEzYVdSblpYUXVaSEp2Y0dSdmQyNHRiV1Z1ZFRwaVpXWnZjbVVzWEc0dVltOXZkSE4wY21Gd0xXUmhkR1YwYVcxbGNHbGphMlZ5TFhkcFpHZGxkQzVrY205d1pHOTNiaTF0Wlc1MU9tRm1kR1Z5SUh0Y2JpQWdZMjl1ZEdWdWREb2dKeWM3WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVmVnh1TG1KdmIzUnpkSEpoY0Mxa1lYUmxkR2x0WlhCcFkydGxjaTEzYVdSblpYUXVaSEp2Y0dSdmQyNHRiV1Z1ZFM1aWIzUjBiMjA2WW1WbWIzSmxJSHRjYmlBZ1ltOXlaR1Z5TFd4bFpuUTZJRGR3ZUNCemIyeHBaQ0IwY21GdWMzQmhjbVZ1ZER0Y2JpQWdZbTl5WkdWeUxYSnBaMmgwT2lBM2NIZ2djMjlzYVdRZ2RISmhibk53WVhKbGJuUTdYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMDZJRGR3ZUNCemIyeHBaQ0FqWTJOak8xeHVJQ0JpYjNKa1pYSXRZbTkwZEc5dExXTnZiRzl5T2lCeVoySmhLREFzSURBc0lEQXNJREF1TWlrN1hHNGdJSFJ2Y0RvZ0xUZHdlRHRjYmlBZ2JHVm1kRG9nTjNCNE8xeHVmVnh1TG1KdmIzUnpkSEpoY0Mxa1lYUmxkR2x0WlhCcFkydGxjaTEzYVdSblpYUXVaSEp2Y0dSdmQyNHRiV1Z1ZFM1aWIzUjBiMjA2WVdaMFpYSWdlMXh1SUNCaWIzSmtaWEl0YkdWbWREb2dObkI0SUhOdmJHbGtJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQmliM0prWlhJdGNtbG5hSFE2SURad2VDQnpiMnhwWkNCMGNtRnVjM0JoY21WdWREdGNiaUFnWW05eVpHVnlMV0p2ZEhSdmJUb2dObkI0SUhOdmJHbGtJSGRvYVhSbE8xeHVJQ0IwYjNBNklDMDJjSGc3WEc0Z0lHeGxablE2SURod2VEdGNibjFjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBMbVJ5YjNCa2IzZHVMVzFsYm5VdWRHOXdPbUpsWm05eVpTQjdYRzRnSUdKdmNtUmxjaTFzWldaME9pQTNjSGdnYzI5c2FXUWdkSEpoYm5Od1lYSmxiblE3WEc0Z0lHSnZjbVJsY2kxeWFXZG9kRG9nTjNCNElITnZiR2xrSUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0JpYjNKa1pYSXRkRzl3T2lBM2NIZ2djMjlzYVdRZ0kyTmpZenRjYmlBZ1ltOXlaR1Z5TFhSdmNDMWpiMnh2Y2pvZ2NtZGlZU2d3TENBd0xDQXdMQ0F3TGpJcE8xeHVJQ0JpYjNSMGIyMDZJQzAzY0hnN1hHNGdJR3hsWm5RNklEWndlRHRjYm4xY2JpNWliMjkwYzNSeVlYQXRaR0YwWlhScGJXVndhV05yWlhJdGQybGtaMlYwTG1SeWIzQmtiM2R1TFcxbGJuVXVkRzl3T21GbWRHVnlJSHRjYmlBZ1ltOXlaR1Z5TFd4bFpuUTZJRFp3ZUNCemIyeHBaQ0IwY21GdWMzQmhjbVZ1ZER0Y2JpQWdZbTl5WkdWeUxYSnBaMmgwT2lBMmNIZ2djMjlzYVdRZ2RISmhibk53WVhKbGJuUTdYRzRnSUdKdmNtUmxjaTEwYjNBNklEWndlQ0J6YjJ4cFpDQjNhR2wwWlR0Y2JpQWdZbTkwZEc5dE9pQXRObkI0TzF4dUlDQnNaV1owT2lBM2NIZzdYRzU5WEc0dVltOXZkSE4wY21Gd0xXUmhkR1YwYVcxbGNHbGphMlZ5TFhkcFpHZGxkQzVrY205d1pHOTNiaTF0Wlc1MUxuQjFiR3d0Y21sbmFIUTZZbVZtYjNKbElIdGNiaUFnYkdWbWREb2dZWFYwYnp0Y2JpQWdjbWxuYUhRNklEWndlRHRjYm4xY2JpNWliMjkwYzNSeVlYQXRaR0YwWlhScGJXVndhV05yWlhJdGQybGtaMlYwTG1SeWIzQmtiM2R1TFcxbGJuVXVjSFZzYkMxeWFXZG9kRHBoWm5SbGNpQjdYRzRnSUd4bFpuUTZJR0YxZEc4N1hHNGdJSEpwWjJoME9pQTNjSGc3WEc1OVhHNHVZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUxYZHBaR2RsZENBdWJHbHpkQzExYm5OMGVXeGxaQ0I3WEc0Z0lHMWhjbWRwYmpvZ01EdGNibjFjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBJR0ZiWkdGMFlTMWhZM1JwYjI1ZElIdGNiaUFnY0dGa1pHbHVaem9nTm5CNElEQTdYRzU5WEc0dVltOXZkSE4wY21Gd0xXUmhkR1YwYVcxbGNHbGphMlZ5TFhkcFpHZGxkQ0JoVzJSaGRHRXRZV04wYVc5dVhUcGhZM1JwZG1VZ2UxeHVJQ0JpYjNndGMyaGhaRzkzT2lCdWIyNWxPMXh1ZlZ4dUxtSnZiM1J6ZEhKaGNDMWtZWFJsZEdsdFpYQnBZMnRsY2kxM2FXUm5aWFFnTG5ScGJXVndhV05yWlhJdGFHOTFjaXhjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBJQzUwYVcxbGNHbGphMlZ5TFcxcGJuVjBaU3hjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBJQzUwYVcxbGNHbGphMlZ5TFhObFkyOXVaQ0I3WEc0Z0lIZHBaSFJvT2lBMU5IQjRPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dZbTlzWkR0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TGpKbGJUdGNiaUFnYldGeVoybHVPaUF3TzF4dWZWeHVMbUp2YjNSemRISmhjQzFrWVhSbGRHbHRaWEJwWTJ0bGNpMTNhV1JuWlhRZ1luVjBkRzl1VzJSaGRHRXRZV04wYVc5dVhTQjdYRzRnSUhCaFpHUnBibWM2SURad2VEdGNibjFjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBJQzVpZEc1YlpHRjBZUzFoWTNScGIyNDlYQ0pwYm1OeVpXMWxiblJJYjNWeWMxd2lYVG82WVdaMFpYSWdlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSGRwWkhSb09pQXhjSGc3WEc0Z0lHaGxhV2RvZERvZ01YQjRPMXh1SUNCdFlYSm5hVzQ2SUMweGNIZzdYRzRnSUhCaFpHUnBibWM2SURBN1hHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzRnSUdOc2FYQTZJSEpsWTNRb01Dd2dNQ3dnTUN3Z01DazdYRzRnSUdKdmNtUmxjam9nTUR0Y2JpQWdZMjl1ZEdWdWREb2dYQ0pKYm1OeVpXMWxiblFnU0c5MWNuTmNJanRjYm4xY2JpNWliMjkwYzNSeVlYQXRaR0YwWlhScGJXVndhV05yWlhJdGQybGtaMlYwSUM1aWRHNWJaR0YwWVMxaFkzUnBiMjQ5WENKcGJtTnlaVzFsYm5STmFXNTFkR1Z6WENKZE9qcGhablJsY2lCN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ2QybGtkR2c2SURGd2VEdGNiaUFnYUdWcFoyaDBPaUF4Y0hnN1hHNGdJRzFoY21kcGJqb2dMVEZ3ZUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JpQWdZMnhwY0RvZ2NtVmpkQ2d3TENBd0xDQXdMQ0F3S1R0Y2JpQWdZbTl5WkdWeU9pQXdPMXh1SUNCamIyNTBaVzUwT2lCY0lrbHVZM0psYldWdWRDQk5hVzUxZEdWelhDSTdYRzU5WEc0dVltOXZkSE4wY21Gd0xXUmhkR1YwYVcxbGNHbGphMlZ5TFhkcFpHZGxkQ0F1WW5SdVcyUmhkR0V0WVdOMGFXOXVQVndpWkdWamNtVnRaVzUwU0c5MWNuTmNJbDA2T21GbWRHVnlJSHRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0IzYVdSMGFEb2dNWEI0TzF4dUlDQm9aV2xuYUhRNklERndlRHRjYmlBZ2JXRnlaMmx1T2lBdE1YQjRPMXh1SUNCd1lXUmthVzVuT2lBd08xeHVJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNCamJHbHdPaUJ5WldOMEtEQXNJREFzSURBc0lEQXBPMXh1SUNCaWIzSmtaWEk2SURBN1hHNGdJR052Ym5SbGJuUTZJRndpUkdWamNtVnRaVzUwSUVodmRYSnpYQ0k3WEc1OVhHNHVZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUxYZHBaR2RsZENBdVluUnVXMlJoZEdFdFlXTjBhVzl1UFZ3aVpHVmpjbVZ0Wlc1MFRXbHVkWFJsYzF3aVhUbzZZV1owWlhJZ2UxeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lIZHBaSFJvT2lBeGNIZzdYRzRnSUdobGFXZG9kRG9nTVhCNE8xeHVJQ0J0WVhKbmFXNDZJQzB4Y0hnN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJR05zYVhBNklISmxZM1FvTUN3Z01Dd2dNQ3dnTUNrN1hHNGdJR0p2Y21SbGNqb2dNRHRjYmlBZ1kyOXVkR1Z1ZERvZ1hDSkVaV055WlcxbGJuUWdUV2x1ZFhSbGMxd2lPMXh1ZlZ4dUxtSnZiM1J6ZEhKaGNDMWtZWFJsZEdsdFpYQnBZMnRsY2kxM2FXUm5aWFFnTG1KMGJsdGtZWFJoTFdGamRHbHZiajFjSW5Ob2IzZEliM1Z5YzF3aVhUbzZZV1owWlhJZ2UxeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lIZHBaSFJvT2lBeGNIZzdYRzRnSUdobGFXZG9kRG9nTVhCNE8xeHVJQ0J0WVhKbmFXNDZJQzB4Y0hnN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJR05zYVhBNklISmxZM1FvTUN3Z01Dd2dNQ3dnTUNrN1hHNGdJR0p2Y21SbGNqb2dNRHRjYmlBZ1kyOXVkR1Z1ZERvZ1hDSlRhRzkzSUVodmRYSnpYQ0k3WEc1OVhHNHVZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUxYZHBaR2RsZENBdVluUnVXMlJoZEdFdFlXTjBhVzl1UFZ3aWMyaHZkMDFwYm5WMFpYTmNJbDA2T21GbWRHVnlJSHRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0IzYVdSMGFEb2dNWEI0TzF4dUlDQm9aV2xuYUhRNklERndlRHRjYmlBZ2JXRnlaMmx1T2lBdE1YQjRPMXh1SUNCd1lXUmthVzVuT2lBd08xeHVJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNCamJHbHdPaUJ5WldOMEtEQXNJREFzSURBc0lEQXBPMXh1SUNCaWIzSmtaWEk2SURBN1hHNGdJR052Ym5SbGJuUTZJRndpVTJodmR5Qk5hVzUxZEdWelhDSTdYRzU5WEc0dVltOXZkSE4wY21Gd0xXUmhkR1YwYVcxbGNHbGphMlZ5TFhkcFpHZGxkQ0F1WW5SdVcyUmhkR0V0WVdOMGFXOXVQVndpZEc5bloyeGxVR1Z5YVc5a1hDSmRPanBoWm5SbGNpQjdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdkMmxrZEdnNklERndlRHRjYmlBZ2FHVnBaMmgwT2lBeGNIZzdYRzRnSUcxaGNtZHBiam9nTFRGd2VEdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnWTJ4cGNEb2djbVZqZENnd0xDQXdMQ0F3TENBd0tUdGNiaUFnWW05eVpHVnlPaUF3TzF4dUlDQmpiMjUwWlc1ME9pQmNJbFJ2WjJkc1pTQkJUUzlRVFZ3aU8xeHVmVnh1TG1KdmIzUnpkSEpoY0Mxa1lYUmxkR2x0WlhCcFkydGxjaTEzYVdSblpYUWdMbUowYmx0a1lYUmhMV0ZqZEdsdmJqMWNJbU5zWldGeVhDSmRPanBoWm5SbGNpQjdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdkMmxrZEdnNklERndlRHRjYmlBZ2FHVnBaMmgwT2lBeGNIZzdYRzRnSUcxaGNtZHBiam9nTFRGd2VEdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnWTJ4cGNEb2djbVZqZENnd0xDQXdMQ0F3TENBd0tUdGNiaUFnWW05eVpHVnlPaUF3TzF4dUlDQmpiMjUwWlc1ME9pQmNJa05zWldGeUlIUm9aU0J3YVdOclpYSmNJanRjYm4xY2JpNWliMjkwYzNSeVlYQXRaR0YwWlhScGJXVndhV05yWlhJdGQybGtaMlYwSUM1aWRHNWJaR0YwWVMxaFkzUnBiMjQ5WENKMGIyUmhlVndpWFRvNllXWjBaWElnZTF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUhkcFpIUm9PaUF4Y0hnN1hHNGdJR2hsYVdkb2REb2dNWEI0TzF4dUlDQnRZWEpuYVc0NklDMHhjSGc3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzRnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc0Z0lHTnNhWEE2SUhKbFkzUW9NQ3dnTUN3Z01Dd2dNQ2s3WEc0Z0lHSnZjbVJsY2pvZ01EdGNiaUFnWTI5dWRHVnVkRG9nWENKVFpYUWdkR2hsSUdSaGRHVWdkRzhnZEc5a1lYbGNJanRjYm4xY2JpNWliMjkwYzNSeVlYQXRaR0YwWlhScGJXVndhV05yWlhJdGQybGtaMlYwSUM1d2FXTnJaWEl0YzNkcGRHTm9JSHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVmVnh1TG1KdmIzUnpkSEpoY0Mxa1lYUmxkR2x0WlhCcFkydGxjaTEzYVdSblpYUWdMbkJwWTJ0bGNpMXpkMmwwWTJnNk9tRm1kR1Z5SUh0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCM2FXUjBhRG9nTVhCNE8xeHVJQ0JvWldsbmFIUTZJREZ3ZUR0Y2JpQWdiV0Z5WjJsdU9pQXRNWEI0TzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dUlDQmpiR2x3T2lCeVpXTjBLREFzSURBc0lEQXNJREFwTzF4dUlDQmliM0prWlhJNklEQTdYRzRnSUdOdmJuUmxiblE2SUZ3aVZHOW5aMnhsSUVSaGRHVWdZVzVrSUZScGJXVWdVMk55WldWdWMxd2lPMXh1ZlZ4dUxtSnZiM1J6ZEhKaGNDMWtZWFJsZEdsdFpYQnBZMnRsY2kxM2FXUm5aWFFnTG5CcFkydGxjaTF6ZDJsMFkyZ2dkR1FnZTF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCdFlYSm5hVzQ2SURBN1hHNGdJR2hsYVdkb2REb2dZWFYwYnp0Y2JpQWdkMmxrZEdnNklHRjFkRzg3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUJwYm1obGNtbDBPMXh1ZlZ4dUxtSnZiM1J6ZEhKaGNDMWtZWFJsZEdsdFpYQnBZMnRsY2kxM2FXUm5aWFFnTG5CcFkydGxjaTF6ZDJsMFkyZ2dkR1FnYzNCaGJpQjdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXlMalU3WEc0Z0lHaGxhV2RvZERvZ01pNDFaVzA3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1ZlZ4dUxtSnZiM1J6ZEhKaGNDMWtZWFJsZEdsdFpYQnBZMnRsY2kxM2FXUm5aWFFnZEdGaWJHVWdlMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnYldGeVoybHVPaUF3TzF4dWZWeHVMbUp2YjNSemRISmhjQzFrWVhSbGRHbHRaWEJwWTJ0bGNpMTNhV1JuWlhRZ2RHRmliR1VnZEdRc1hHNHVZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUxYZHBaR2RsZENCMFlXSnNaU0IwYUNCN1hHNGdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTkhCNE8xeHVmVnh1TG1KdmIzUnpkSEpoY0Mxa1lYUmxkR2x0WlhCcFkydGxjaTEzYVdSblpYUWdkR0ZpYkdVZ2RHZ2dlMXh1SUNCb1pXbG5hSFE2SURJd2NIZzdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXlNSEI0TzF4dUlDQjNhV1IwYURvZ01qQndlRHRjYm4xY2JpNWliMjkwYzNSeVlYQXRaR0YwWlhScGJXVndhV05yWlhJdGQybGtaMlYwSUhSaFlteGxJSFJvTG5CcFkydGxjaTF6ZDJsMFkyZ2dlMXh1SUNCM2FXUjBhRG9nTVRRMWNIZzdYRzU5WEc0dVltOXZkSE4wY21Gd0xXUmhkR1YwYVcxbGNHbGphMlZ5TFhkcFpHZGxkQ0IwWVdKc1pTQjBhQzVrYVhOaFlteGxaQ3hjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBJSFJoWW14bElIUm9MbVJwYzJGaWJHVmtPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2JtOXVaVHRjYmlBZ1kyOXNiM0k2SUNNM056YzNOemM3WEc0Z0lHTjFjbk52Y2pvZ2JtOTBMV0ZzYkc5M1pXUTdYRzU5WEc0dVltOXZkSE4wY21Gd0xXUmhkR1YwYVcxbGNHbGphMlZ5TFhkcFpHZGxkQ0IwWVdKc1pTQjBhQzV3Y21WMk9qcGhablJsY2lCN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ2QybGtkR2c2SURGd2VEdGNiaUFnYUdWcFoyaDBPaUF4Y0hnN1hHNGdJRzFoY21kcGJqb2dMVEZ3ZUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JpQWdZMnhwY0RvZ2NtVmpkQ2d3TENBd0xDQXdMQ0F3S1R0Y2JpQWdZbTl5WkdWeU9pQXdPMXh1SUNCamIyNTBaVzUwT2lCY0lsQnlaWFpwYjNWeklFMXZiblJvWENJN1hHNTlYRzR1WW05dmRITjBjbUZ3TFdSaGRHVjBhVzFsY0dsamEyVnlMWGRwWkdkbGRDQjBZV0pzWlNCMGFDNXVaWGgwT2pwaFpuUmxjaUI3WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnZDJsa2RHZzZJREZ3ZUR0Y2JpQWdhR1ZwWjJoME9pQXhjSGc3WEc0Z0lHMWhjbWRwYmpvZ0xURndlRHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmlBZ1kyeHBjRG9nY21WamRDZ3dMQ0F3TENBd0xDQXdLVHRjYmlBZ1ltOXlaR1Z5T2lBd08xeHVJQ0JqYjI1MFpXNTBPaUJjSWs1bGVIUWdUVzl1ZEdoY0lqdGNibjFjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBJSFJoWW14bElIUm9aV0ZrSUhSeU9tWnBjbk4wTFdOb2FXeGtJSFJvSUh0Y2JpQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVmVnh1TG1KdmIzUnpkSEpoY0Mxa1lYUmxkR2x0WlhCcFkydGxjaTEzYVdSblpYUWdkR0ZpYkdVZ2RHaGxZV1FnZEhJNlptbHljM1F0WTJocGJHUWdkR2c2YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpaV1ZsWldWbE8xeHVmVnh1TG1KdmIzUnpkSEpoY0Mxa1lYUmxkR2x0WlhCcFkydGxjaTEzYVdSblpYUWdkR0ZpYkdVZ2RHUWdlMXh1SUNCb1pXbG5hSFE2SURVMGNIZzdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQTFOSEI0TzF4dUlDQjNhV1IwYURvZ05UUndlRHRjYm4xY2JpNWliMjkwYzNSeVlYQXRaR0YwWlhScGJXVndhV05yWlhJdGQybGtaMlYwSUhSaFlteGxJSFJrTG1OM0lIdGNiaUFnWm05dWRDMXphWHBsT2lBdU9HVnRPMXh1SUNCb1pXbG5hSFE2SURJd2NIZzdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXlNSEI0TzF4dUlDQmpiMnh2Y2pvZ0l6YzNOemMzTnp0Y2JuMWNiaTVpYjI5MGMzUnlZWEF0WkdGMFpYUnBiV1Z3YVdOclpYSXRkMmxrWjJWMElIUmhZbXhsSUhSa0xtUmhlU0I3WEc0Z0lHaGxhV2RvZERvZ01qQndlRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREl3Y0hnN1hHNGdJSGRwWkhSb09pQXlNSEI0TzF4dWZWeHVMbUp2YjNSemRISmhjQzFrWVhSbGRHbHRaWEJwWTJ0bGNpMTNhV1JuWlhRZ2RHRmliR1VnZEdRdVpHRjVPbWh2ZG1WeUxGeHVMbUp2YjNSemRISmhjQzFrWVhSbGRHbHRaWEJwWTJ0bGNpMTNhV1JuWlhRZ2RHRmliR1VnZEdRdWFHOTFjanBvYjNabGNpeGNiaTVpYjI5MGMzUnlZWEF0WkdGMFpYUnBiV1Z3YVdOclpYSXRkMmxrWjJWMElIUmhZbXhsSUhSa0xtMXBiblYwWlRwb2IzWmxjaXhjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBJSFJoWW14bElIUmtMbk5sWTI5dVpEcG9iM1psY2lCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNObFpXVmxaV1U3WEc0Z0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JuMWNiaTVpYjI5MGMzUnlZWEF0WkdGMFpYUnBiV1Z3YVdOclpYSXRkMmxrWjJWMElIUmhZbXhsSUhSa0xtOXNaQ3hjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBJSFJoWW14bElIUmtMbTVsZHlCN1hHNGdJR052Ykc5eU9pQWpOemMzTnpjM08xeHVmVnh1TG1KdmIzUnpkSEpoY0Mxa1lYUmxkR2x0WlhCcFkydGxjaTEzYVdSblpYUWdkR0ZpYkdVZ2RHUXVkRzlrWVhrZ2UxeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1OVhHNHVZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUxYZHBaR2RsZENCMFlXSnNaU0IwWkM1MGIyUmhlVHBpWldadmNtVWdlMXh1SUNCamIyNTBaVzUwT2lBbkp6dGNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0JpYjNKa1pYSTZJSE52Ykdsa0lIUnlZVzV6Y0dGeVpXNTBPMXh1SUNCaWIzSmtaWEl0ZDJsa2RHZzZJREFnTUNBM2NIZ2dOM0I0TzF4dUlDQmliM0prWlhJdFltOTBkRzl0TFdOdmJHOXlPaUFqTXpNM1lXSTNPMXh1SUNCaWIzSmtaWEl0ZEc5d0xXTnZiRzl5T2lCeVoySmhLREFzSURBc0lEQXNJREF1TWlrN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ1ltOTBkRzl0T2lBMGNIZzdYRzRnSUhKcFoyaDBPaUEwY0hnN1hHNTlYRzR1WW05dmRITjBjbUZ3TFdSaGRHVjBhVzFsY0dsamEyVnlMWGRwWkdkbGRDQjBZV0pzWlNCMFpDNWhZM1JwZG1Vc1hHNHVZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUxYZHBaR2RsZENCMFlXSnNaU0IwWkM1aFkzUnBkbVU2YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak16TTNZV0kzTzF4dUlDQmpiMnh2Y2pvZ0kyWm1aanRjYmlBZ2RHVjRkQzF6YUdGa2IzYzZJREFnTFRGd2VDQXdJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01DNHlOU2s3WEc1OVhHNHVZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUxYZHBaR2RsZENCMFlXSnNaU0IwWkM1aFkzUnBkbVV1ZEc5a1lYazZZbVZtYjNKbElIdGNiaUFnWW05eVpHVnlMV0p2ZEhSdmJTMWpiMnh2Y2pvZ0kyWm1aanRjYm4xY2JpNWliMjkwYzNSeVlYQXRaR0YwWlhScGJXVndhV05yWlhJdGQybGtaMlYwSUhSaFlteGxJSFJrTG1ScGMyRmliR1ZrTEZ4dUxtSnZiM1J6ZEhKaGNDMWtZWFJsZEdsdFpYQnBZMnRsY2kxM2FXUm5aWFFnZEdGaWJHVWdkR1F1WkdsellXSnNaV1E2YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQnViMjVsTzF4dUlDQmpiMnh2Y2pvZ0l6YzNOemMzTnp0Y2JpQWdZM1Z5YzI5eU9pQnViM1F0WVd4c2IzZGxaRHRjYm4xY2JpNWliMjkwYzNSeVlYQXRaR0YwWlhScGJXVndhV05yWlhJdGQybGtaMlYwSUhSaFlteGxJSFJrSUhOd1lXNGdlMXh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUhkcFpIUm9PaUExTkhCNE8xeHVJQ0JvWldsbmFIUTZJRFUwY0hnN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBMU5IQjRPMXh1SUNCdFlYSm5hVzQ2SURKd2VDQXhMalZ3ZUR0Y2JpQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTBjSGc3WEc1OVhHNHVZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUxYZHBaR2RsZENCMFlXSnNaU0IwWkNCemNHRnVPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0kyVmxaV1ZsWlR0Y2JuMWNiaTVpYjI5MGMzUnlZWEF0WkdGMFpYUnBiV1Z3YVdOclpYSXRkMmxrWjJWMElIUmhZbXhsSUhSa0lITndZVzR1WVdOMGFYWmxJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6TXpOMkZpTnp0Y2JpQWdZMjlzYjNJNklDTm1abVk3WEc0Z0lIUmxlSFF0YzJoaFpHOTNPaUF3SUMweGNIZ2dNQ0J5WjJKaEtEQXNJREFzSURBc0lEQXVNalVwTzF4dWZWeHVMbUp2YjNSemRISmhjQzFrWVhSbGRHbHRaWEJwWTJ0bGNpMTNhV1JuWlhRZ2RHRmliR1VnZEdRZ2MzQmhiaTV2YkdRZ2UxeHVJQ0JqYjJ4dmNqb2dJemMzTnpjM056dGNibjFjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBJSFJoWW14bElIUmtJSE53WVc0dVpHbHpZV0pzWldRc1hHNHVZbTl2ZEhOMGNtRndMV1JoZEdWMGFXMWxjR2xqYTJWeUxYZHBaR2RsZENCMFlXSnNaU0IwWkNCemNHRnVMbVJwYzJGaWJHVmtPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2JtOXVaVHRjYmlBZ1kyOXNiM0k2SUNNM056YzNOemM3WEc0Z0lHTjFjbk52Y2pvZ2JtOTBMV0ZzYkc5M1pXUTdYRzU5WEc0dVltOXZkSE4wY21Gd0xXUmhkR1YwYVcxbGNHbGphMlZ5TFhkcFpHZGxkQzUxYzJWMGQyVnVkSGxtYjNWeUlIUmtMbWh2ZFhJZ2UxeHVJQ0JvWldsbmFIUTZJREkzY0hnN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeU4zQjRPMXh1ZlZ4dUxtSnZiM1J6ZEhKaGNDMWtZWFJsZEdsdFpYQnBZMnRsY2kxM2FXUm5aWFF1ZDJsa1pYSWdlMXh1SUNCM2FXUjBhRG9nTWpGbGJUdGNibjFjYmk1aWIyOTBjM1J5WVhBdFpHRjBaWFJwYldWd2FXTnJaWEl0ZDJsa1oyVjBJQzVrWVhSbGNHbGphMlZ5TFdSbFkyRmtaWE1nTG1SbFkyRmtaU0I3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TGpobGJTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dUxtbHVjSFYwTFdkeWIzVndMbVJoZEdVZ0xtbHVjSFYwTFdkeWIzVndMV0ZrWkc5dUlIdGNiaUFnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1ZlZ4dUxuTnlMVzl1YkhrZ2UxeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lIZHBaSFJvT2lBeGNIZzdYRzRnSUdobGFXZG9kRG9nTVhCNE8xeHVJQ0J0WVhKbmFXNDZJQzB4Y0hnN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJR05zYVhBNklISmxZM1FvTUN3Z01Dd2dNQ3dnTUNrN1hHNGdJR0p2Y21SbGNqb2dNRHRjYm4xY2JpSUtDVjBzQ2draWJtRnRaWE1pT2lCYlhTd0tDU0p0WVhCd2FXNW5jeUk2SUNKQlNUSkRSU3hwUlVGQmFVVTdRVUZITDBRN2IwWkJRMmRHTzBGQlJXaEdPenM3TzA5QlNVYzdRVUZGU0N4QlFVRkJMRWxCUVVrc1EwRkJRenRGUVdORUxGZEJRVmNzUlVGQlJTeEpRVUZKTzBWQlFVVXNUMEZCVHp0RlFVVTFRaXh2UWtGQmIwSXNSVUZCUlN4SlFVRkpPMFZCUVVVc1QwRkJUenRGUVVOdVF5eDNRa0ZCZDBJc1JVRkJSU3hKUVVGSk8wVkJRVVVzVDBGQlR5eEZRVU40UXpzN1FVRkpSRHR2UmtGRFowWTdRVUZGYUVZN08wOUJSVWM3UVVGRlNDeEJRVUZCTEVsQlFVa3NRMEZCUXp0RlFVTklMRTFCUVUwc1JVRkJSU3hEUVVGRExFZEJRMVk3TzBGQlJVUTdPMDlCUlVjN1FVRkZTQ3hCUVVGQkxFOUJRVTg3UVVGRFVDeExRVUZMTzBGQlEwd3NUVUZCVFR0QlFVTk9MRTFCUVUwN1FVRkRUaXhIUVVGSE8wRkJRMGdzVDBGQlR5eERRVUZETzBWQlEwNHNUMEZCVHl4RlFVRkZMRXRCUVVzc1IwRkRaanM3UVVGRlJEczdPMDlCUjBjN1FVRkZTQ3hCUVVGQkxFVkJRVVVzUTBGQlF6dEZSR2hHVEN4VFFVRlRMRVZCV0VNc1IwRkJOa0k3UlVOelIycERMRTFCUVUwc1JVRkJSU3hSUVVGUkxFZEJSVzVDT3p0QlFXOURSRHR2UmtGRFowWTdRVUYxUTJoR096dFBRVVZITzBGQlJVZ3NRVUZCUVN4VlFVRlZPMEZCUTFZc1RVRkJUU3hEUVVGRE8wVkJRMHdzVDBGQlR5eEZRVUZGTEV0QlFVc3NSMEZEWmpzN1FVRkZSRHM3VDBGRlJ6dEJRVVZJTEVGQlFVRXNUVUZCVFN4RFFVRkRPMFZCUzBnc1RVRkJUU3hGUVVGRkxFZEJRVWNzUTBaNlRFZ3NTVUZCU1N4SFJUSk1aanM3UVVGRlJEczdPMDlCUjBjN1FVRkZTQ3hCUVVGQkxFVkJRVVVzUTBGQlF6dEZRVU5FTEZWQlFWVXNSVUZCUlN4WFFVRlhPMFZCUVVVc1QwRkJUenRGUVVOb1F5eE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVRkZMRTlCUVU4N1JVRkRiRUlzVVVGQlVTeEZRVUZGTEU5QlFVODdSVUZCUlN4UFFVRlBMRVZCUXpOQ096dEJRVVZFT3p0UFFVVkhPMEZCUlVnc1FVRkJRU3hKUVVGSkxFTkJRVU03UlVGRFNDeFBRVUZQTEVWQlFVVXNTMEZCU3l4SFFVTm1PenRCUVdGRU96czdUMEZIUnp0QlFVVklMRUZCUVVFc1IwRkJSeXhEUVVGRE8wVkJRMFlzVjBGQlZ5eEZRVUZGTEc5Q1FVRnZRanRGUVVGRkxFOUJRVTg3UlVGRE1VTXNVMEZCVXl4RlFVRkZMRWRCUVVjN1JVRkJSU3hQUVVGUExFVkJRM2hDT3p0QlFVbEVPMjlHUVVOblJqdEJRVVZvUmpzN08wOUJSMGM3UVVGRlNDeEJRVUZCTEVOQlFVTXNRMEZCUXp0RlFVTkJMR2RDUVVGblFpeEZRVUZGTEZkQlFWYzdSVUZCUlN4UFFVRlBPMFZCUTNSRExEUkNRVUUwUWl4RlFVRkZMRTlCUVU4N1JVRkJSU3hQUVVGUExFVkJReTlET3p0QlFVbEVPMjlHUVVOblJqdEJRVVZvUmpzN08wOUJSMGM3UVVGRlNDeEJRVUZCTEVsQlFVa3NRMEZCUVN4QlFVRkJMRXRCUVVNc1FVRkJRU3hGUVVGUE8wVkJRMVlzWVVGQllTeEZRVUZGTEVsQlFVazdSVUZCUlN4UFFVRlBPMFZCUXpWQ0xHVkJRV1VzUlVGQlJTeFRRVUZUTzBWQlFVVXNUMEZCVHp0RlFVTnVReXhsUVVGbExFVkJRVVVzWjBKQlFXZENPMFZCUVVVc1QwRkJUeXhGUVVNelF6czdRVUZGUkRzN1QwRkZSenRCUVVWSUxFRkJRVUVzUTBGQlF6dEJRVU5FTEUxQlFVMHNRMEZCUXp0RlFVTk1MRmRCUVZjc1JVRkJSU3hQUVVGUExFZEJRM0pDT3p0QlFVVkVPenRQUVVWSE8wRkJVRWdzUVVGQlFTeERRVUZETzBGQlEwUXNUVUZCVFN4RFFWTkRPMFZCUTB3c1YwRkJWeXhGUVVGRkxFMUJRVTBzUjBGRGNFSTdPMEZCUlVRN096dFBRVWRITzBGQlJVZ3NRVUZCUVN4SlFVRkpPMEZCUTBvc1IwRkJSenRCUVVOSUxFbEJRVWtzUTBGQlF6dEZRVU5JTEZkQlFWY3NSVUZCUlN4dlFrRkJiMEk3UlVGQlJTeFBRVUZQTzBWQlF6RkRMRk5CUVZNc1JVRkJSU3hIUVVGSE8wVkJRVVVzVDBGQlR5eEZRVU40UWpzN1FVRkZSRHM3VDBGRlJ6dEJRVVZJTEVGQlFVRXNSMEZCUnl4RFFVRkRPMFZCUTBZc1ZVRkJWU3hGUVVGRkxFMUJRVTBzUjBGRGJrSTdPMEZCUlVRN08wOUJSVWM3UVVGRlNDeEJRVUZCTEVsQlFVa3NRMEZCUXp0RlFVTklMR2RDUVVGblFpeEZRVUZGTEVsQlFVazdSVUZEZEVJc1MwRkJTeXhGUVVGRkxFbEJRVWtzUjBGRFdqczdRVUZGUkRzN1QwRkZSenRCUVVWSUxFRkJRVUVzUzBGQlN5eERRVUZETzBWQlEwb3NVMEZCVXl4RlFVRkZMRWRCUVVjc1IwRkRaanM3UVVGRlJEczdPMDlCUjBjN1FVRkZTQ3hCUVVGQkxFZEJRVWM3UVVGRFNDeEhRVUZITEVOQlFVTTdSVUZEUml4VFFVRlRMRVZCUVVVc1IwRkJSenRGUVVOa0xGZEJRVmNzUlVGQlJTeERRVUZETzBWQlEyUXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzWTBGQll5eEZRVUZGTEZGQlFWRXNSMEZEZWtJN08wRkJSVVFzUVVGQlFTeEhRVUZITEVOQlFVTTdSVUZEUml4TlFVRk5MRVZCUVVVc1QwRkJUeXhIUVVOb1FqczdRVUZGUkN4QlFVRkJMRWRCUVVjc1EwRkJRenRGUVVOR0xFZEJRVWNzUlVGQlJTeE5RVUZOTEVkQlExbzdPMEZCU1VRN2IwWkJRMmRHTzBGQlJXaEdPenRQUVVWSE8wRkJSVWdzUVVGQlFTeExRVUZMTzBGQlEwd3NTMEZCU3l4RFFVRkRPMFZCUTBvc1QwRkJUeXhGUVVGRkxGbEJRVmtzUjBGRGRFSTdPMEZCUlVRN08wOUJSVWM3UVVGRlNDeEJRVUZCTEV0QlFVc3NRVUZCUVN4SlFVRkxMRVZCUVVFc1FVRkJRU3hSUVVGRExFRkJRVUVzUjBGQlZ6dEZRVU53UWl4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxFMUJRVTBzUlVGQlJTeERRVUZETEVkQlExWTdPMEZCUlVRN08wOUJSVWM3UVVGRlNDeEJRVUZCTEVkQlFVY3NRMEZCUXp0RlFVTkdMRmxCUVZrc1JVRkJSU3hKUVVGSkxFZEJRMjVDT3p0QlFVVkVPenRQUVVWSE8wRkJSVWdzUVVGQlFTeEhRVUZITEVGQlFVRXNTVUZCU3l4RFFVRkJMRXRCUVVzc1JVRkJSVHRGUVVOaUxGRkJRVkVzUlVGQlJTeE5RVUZOTEVkQlEycENPenRCUVVsRU8yOUdRVU5uUmp0QlFVVm9SanM3TzA5QlIwYzdRVUZGU0N4QlFVRkJMRTFCUVUwN1FVRkRUaXhMUVVGTE8wRkJRMHdzVVVGQlVUdEJRVU5TTEUxQlFVMDdRVUZEVGl4UlFVRlJMRU5CUVVNN1JVRkRVQ3hYUVVGWExFVkJRVEpETEZWQlFWVTdSVUZCUnl4UFFVRlBPMFZCUXpGRkxGTkJRVk1zUlVGQlJTeEpRVUZKTzBWQlFVVXNUMEZCVHp0RlFVdDBRaXhYUVVGWExFVkJRVVVzU1VGQlNUdEZRVUZGTEU5QlFVODdSVUZGTlVJc1RVRkJUU3hGUVVGRkxFTkJRVU03UlVGQlJTeFBRVUZQTEVWQlEyNUNPenRCUVVWRU96dFBRVVZITzBGQlJVZ3NRVUZCUVN4TlFVRk5MRU5CUVVNN1JVRkRUQ3hSUVVGUkxFVkJRVVVzVDBGQlR5eEhRVU5zUWpzN1FVRkZSRHM3TzA5QlIwYzdRVUZGU0N4QlFVRkJMRTFCUVUwN1FVRkRUaXhOUVVGTkxFTkJRVU03UlVGQlJTeFBRVUZQTzBWQlEyUXNZMEZCWXl4RlFVRkZMRWxCUVVrc1IwRkRja0k3TzBGQlJVUTdPenM3VDBGSlJ6dEJRVVZJTEVGQlFVRXNUVUZCVFR0QlFVTk9MRWxCUVVrc1JVRkJReXhCUVVGQkxFbEJRVU1zUTBGQlN5eFJRVUZSTEVGQlFXSTdRMEZEVGl4QlFVRkJMRWxCUVVNc1EwRkJTeXhQUVVGUExFRkJRVm83UTBGRFJDeEJRVUZCTEVsQlFVTXNRMEZCU3l4UlFVRlJMRUZCUVdJc1JVRkJaVHRGUVVOa0xHdENRVUZyUWl4RlFVRkZMRTFCUVUwN1JVRkJSU3hQUVVGUExFVkJRM0JET3p0QlFVVkVMRUZCUVVFc1RVRkJUVHREUVVOT0xFRkJRVUVzU1VGQlF5eERRVUZMTEZGQlFWRXNRVUZCWWp0RFFVTkVMRUZCUVVFc1NVRkJReXhEUVVGTExFOUJRVThzUVVGQldqdERRVU5FTEVGQlFVRXNTVUZCUXl4RFFVRkxMRkZCUVZFc1FVRkJZaXhGUVVGbE8wVkJSV1E3TzFOQlJVYzdSVUZQU0RzN1UwRkZSeXhGUVV0S08wVkJja0pFTEVGQlUwVXNUVUZVU1N4QlFWTklMR3RDUVVGclFqdEhRVkp5UWl4QlFVRkJMRWxCUVVNc1EwRkJTeXhSUVVGUkxFRkJRV0lzUTBGUlJTeHJRa0ZCYTBJN1IwRlFja0lzUVVGQlFTeEpRVUZETEVOQlFVc3NUMEZCVHl4QlFVRmFMRU5CVDBVc2EwSkJRV3RDTzBkQlRuSkNMRUZCUVVFc1NVRkJReXhEUVVGTExGRkJRVkVzUVVGQllpeERRVTFGTEd0Q1FVRnJRaXhEUVVGRE8wbEJRMnhDTEZsQlFWa3NSVUZCUlN4SlFVRkpPMGxCUTJ4Q0xFOUJRVThzUlVGQlJTeERRVUZETEVkQlExZzdSVUZhU0N4QlFXdENSU3hOUVd4Q1NTeEJRV3RDU0N4bFFVRmxPMGRCYWtKc1FpeEJRVUZCTEVsQlFVTXNRMEZCU3l4UlFVRlJMRUZCUVdJc1EwRnBRa1VzWlVGQlpUdEhRV2hDYkVJc1FVRkJRU3hKUVVGRExFTkJRVXNzVDBGQlR5eEJRVUZhTEVOQlowSkZMR1ZCUVdVN1IwRm1iRUlzUVVGQlFTeEpRVUZETEVOQlFVc3NVVUZCVVN4QlFVRmlMRU5CWlVVc1pVRkJaU3hEUVVGRE8wbEJRMllzVDBGQlR5eEZRVUZGTEhGQ1FVRnhRaXhIUVVNdlFqczdRVUZIU0RzN1QwRkZSenRCUVVWSUxFRkJRVUVzUzBGQlN5eERRVUZETzBWQlEwb3NVVUZCVVN4RlFVRkZMRTlCUVU4c1IwRkRiRUk3TzBGQlJVUTdPenRQUVVkSE8wTkJSVWdzUVVGQlFTeEJRVUZCTEVsQlFVTXNRMEZCU3l4VlFVRlZMRUZCUVdZN1EwRkRSQ3hCUVVGQkxFbEJRVU1zUTBGQlN5eFBRVUZQTEVGQlFWb3NSVUZCWXp0RlFVTmlMRlZCUVZVc1JVRkJSU3hWUVVGVk8wVkJRVVVzVDBGQlR6dEZRVU12UWl4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVGRkxFOUJRVThzUlVGRGNFSTdPMEZCUlVRN08wOUJSVWM3UTBGRlNDeEJRVUZCTEVGQlFVRXNTVUZCUXl4RFFVRkxMRkZCUVZFc1FVRkJZaXhEUVVGakxESkNRVUV5UWp0RFFVTXhReXhCUVVGQkxFbEJRVU1zUTBGQlN5eFJRVUZSTEVGQlFXSXNRMEZCWXl3eVFrRkJNa0lzUTBGQlF6dEZRVU42UXl4TlFVRk5MRVZCUVVVc1NVRkJTU3hIUVVOaU96dEJRVVZFT3pzN1QwRkhSenREUVVWSUxFRkJRVUVzUVVGQlFTeEpRVUZETEVOQlFVc3NVVUZCVVN4QlFVRmlMRVZCUVdVN1JVRkRaQ3hyUWtGQmEwSXNSVUZCUlN4VFFVRlRPMFZCUVVVc1QwRkJUenRGUVVOMFF5eGpRVUZqTEVWQlFVVXNTVUZCU1R0RlFVRkZMRTlCUVU4N1JVRkZOMEk3TzFOQlJVY3NSVUZOU2p0SFFWcEVMRUZCUVVFc1FVRlJSU3hKUVZKRUxFTkJRVXNzVVVGQlVTeEJRVUZpTEVOQlVVVXNPRUpCUVRoQ0xFZEJVbXBETEVGQlFVRXNTVUZCUXl4RFFVRkxMRkZCUVZFc1FVRkJZaXhEUVZORkxESkNRVUV5UWl4RFFVRkRPMGxCUXpOQ0xHdENRVUZyUWl4RlFVRkZMRWxCUVVrc1IwRkRla0k3TzBGQlIwZzdPenRQUVVkSE8wRkJSVWdzUVVGQlFTdzBRa0ZCTkVJc1EwRkJRenRGUVVNelFpeHJRa0ZCYTBJc1JVRkJSU3hOUVVGTk8wVkJRVVVzVDBGQlR6dEZRVU51UXl4SlFVRkpMRVZCUVVVc1QwRkJUenRGUVVGRkxFOUJRVThzUlVGRGRrSTdPMEZCUlVRN08wOUJSVWM3UVVGRlNDeEJRVUZCTEZGQlFWRXNRMEZCUXp0RlFVTlFMRTlCUVU4c1JVRkJSU3h4UWtGQmNVSXNSMEZETDBJN08wRkJSVVE3T3pzN08wOUJTMGM3UVVGRlNDeEJRVUZCTEUxQlFVMHNRMEZCUXp0RlFVTk1MRlZCUVZVc1JVRkJSU3hWUVVGVk8wVkJRVVVzVDBGQlR6dEZRVU12UWl4UFFVRlBMRVZCUVVVc1MwRkJTenRGUVVGRkxFOUJRVTg3UlVGRGRrSXNVMEZCVXl4RlFVRkZMRWxCUVVrN1JVRkJSU3hQUVVGUE8wVkJRM2hDTEU5QlFVOHNSVUZCUlN4RFFVRkRPMFZCUVVVc1QwRkJUenRGUVVOdVFpeExRVUZMTEVWQlFVVXNUMEZCVHp0RlFVRkZMRTlCUVU4N1JVRkRka0lzVjBGQlZ5eEZRVUZGTEUxQlFVMDdSVUZCUlN4UFFVRlBMRVZCUXpkQ096dEJRVVZFT3pzN1QwRkhSenRCUVVWSUxFRkJRVUVzVVVGQlVTeERRVUZETzBWQlExQXNUMEZCVHl4RlFVRkZMRmxCUVZrN1JVRkJSU3hQUVVGUE8wVkJRemxDTEdOQlFXTXNSVUZCUlN4UlFVRlJPMFZCUVVVc1QwRkJUeXhGUVVOc1F6czdRVUZGUkRzN1QwRkZSenRCUVVWSUxFRkJRVUVzVVVGQlVTeERRVUZETzBWQlExQXNVVUZCVVN4RlFVRkZMRWxCUVVrc1IwRkRaanM3UVVGSlJEdHZSa0ZEWjBZN1FVRkZhRVk3TzA5QlJVYzdRVUZGU0N4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOT0xFOUJRVThzUlVGQlJTeExRVUZMTEVkQlEyWTdPMEZCUlVRN08wOUJSVWM3UVVGRlNDeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTk9MRTlCUVU4c1JVRkJSU3hUUVVGVExFZEJRMjVDT3p0QlFVVkVPenRQUVVWSE8wRkJSVWdzUVVGQlFTeEpRVUZKTEVOQlFVTTdSVUZEU0N4UFFVRlBMRVZCUVVVc1MwRkJTeXhIUVhGQ1pqczdRVUZKUkR0dlJrRkRaMFk3UVVGRmFFWTdPMDlCUlVjN1FVRkZTQ3hCUVVGQkxFMUJRVTBzUTBGQlF6dEZRVU5NTEU5QlFVOHNSVUZCUlN4WlFVRlpMRWRCUTNSQ096dEJRVVZFT3p0UFFVVkhPMEZCUlVnc1FVRkJRU3hSUVVGUkxFTkJRVU03UlVGRFVDeFBRVUZQTEVWQlFVVXNTVUZCU1N4SFFVTmtPenRCUVVsRU8yOUdRVU5uUmp0QlFVVm9SanM3VDBGRlJ6dERRVVZJTEVGQlFVRXNRVUZCUVN4TlFVRkRMRUZCUVVFc1JVRkJVVHRGUVVOUUxFOUJRVThzUlVGQlJTeEpRVUZKTEVkQlEyUTdPMEZEZG5CQ1RDeFpRVUZaTzBGQlExb3NWVUZCVlR0RlFVTlNMRmRCUVZjc1JVRkJSU3hSUVVGUk8wVkJRM0pDTEZkQlFWY3NSVUZCUlN4SFFVRkhPMFZCUTJoQ0xGVkJRVlVzUlVGQlJTeE5RVUZOTzBWQlEyeENMRWRCUVVjc1JVRkJSU3h4UTBGQmNVTTdSVUZETVVNc1IwRkJSeXhGUVVGRkxEUkRRVUUwUXl4RFFVRkRMREpDUVVFeVFpeEZRVU40UlN4eFFrRkJjVUlzUlVGRGNrSXNiVUpCUVcxQ0xFVkJRMjVDTEhWRFFVRjFReXhEUVVGRExHVkJRV1VzUlVGRGRrUXNjME5CUVhORExFTkJRVU1zWTBGQll5eEZRVU55UkN4eFEwRkJjVU1zUTBGQlF5eHJRa0ZCYTBJc1JVRkRlRVFzTkVOQlFUUkRMRU5CUVVNc1lVRkJZVHM3UVVGSGFrVXNWVUZCVlR0RlFVTlNMRmRCUVZjc1JVRkJSU3hSUVVGUk8wVkJRM0pDTEZkQlFWY3NSVUZCUlN4SFFVRkhPMFZCUTJoQ0xGVkJRVlVzUlVGQlJTeE5RVUZOTzBWQlEyeENMRWRCUVVjc1JVRkJSU3g1UTBGQmVVTTdSVUZET1VNc1IwRkJSeXhGUVVGRkxHZEVRVUZuUkN4RFFVRkRMREpDUVVFeVFpeEZRVU0xUlN4bFFVRmxMRVZCUTJZc2RVSkJRWFZDTEVWQlEzWkNMREpEUVVFeVF5eERRVUZETEdWQlFXVXNSVUZETTBRc01FTkJRVEJETEVOQlFVTXNZMEZCWXl4RlFVTjZSQ3g1UTBGQmVVTXNRMEZCUXl4clFrRkJhMElzUlVGRE5VUXNaMFJCUVdkRUxFTkJRVU1zWVVGQllUczdRVUZIY2tVc1ZVRkJWVHRGUVVOU0xGZEJRVmNzUlVGQlJTeFJRVUZSTzBWQlEzSkNMRmRCUVZjc1JVRkJSU3hIUVVGSE8wVkJRMmhDTEZWQlFWVXNSVUZCUlN4TlFVRk5PMFZCUTJ4Q0xFZEJRVWNzUlVGQlJTeHhRMEZCY1VNN1JVRkRNVU1zUjBGQlJ5eEZRVUZGTERSRFFVRTBReXhEUVVGRExESkNRVUV5UWl4RlFVTjRSU3h6UWtGQmMwSXNSVUZEZEVJc2JVSkJRVzFDTEVWQlEyNUNMSFZEUVVGMVF5eERRVUZETEdWQlFXVXNSVUZEZGtRc2MwTkJRWE5ETEVOQlFVTXNZMEZCWXl4RlFVTnlSQ3h4UTBGQmNVTXNRMEZCUXl4clFrRkJhMElzUlVGRGVFUXNORU5CUVRSRExFTkJRVU1zWVVGQllUczdRVUZIYWtVc1ZVRkJWVHRGUVVOU0xGZEJRVmNzUlVGQlJTeFJRVUZSTzBWQlEzSkNMRmRCUVZjc1JVRkJSU3hIUVVGSE8wVkJRMmhDTEZWQlFWVXNSVUZCUlN4TlFVRk5PMFZCUTJ4Q0xFZEJRVWNzUlVGQlJTeHhRMEZCY1VNN1JVRkRNVU1zUjBGQlJ5eEZRVUZGTERSRFFVRTBReXhEUVVGRExESkNRVUV5UWl4RlFVTjRSU3h2UWtGQmIwSXNSVUZEY0VJc2JVSkJRVzFDTEVWQlEyNUNMSFZEUVVGMVF5eERRVUZETEdWQlFXVXNSVUZEZGtRc2MwTkJRWE5ETEVOQlFVTXNZMEZCWXl4RlFVTnlSQ3h4UTBGQmNVTXNRMEZCUXl4clFrRkJhMElzUlVGRGVFUXNORU5CUVRSRExFTkJRVU1zWVVGQllUczdRVUZIYWtVc1ZVRkJWVHRGUVVOU0xGZEJRVmNzUlVGQlJTeFJRVUZSTzBWQlEzSkNMRmRCUVZjc1JVRkJSU3hIUVVGSE8wVkJRMmhDTEZWQlFWVXNSVUZCUlN4TlFVRk5PMFZCUTJ4Q0xFZEJRVWNzUlVGQlJTeDNRMEZCZDBNN1JVRkROME1zUjBGQlJ5eEZRVUZGTEN0RFFVRXJReXhEUVVGRExESkNRVUV5UWl4RlFVTXpSU3hsUVVGbExFVkJRMllzYzBKQlFYTkNMRVZCUTNSQ0xEQkRRVUV3UXl4RFFVRkRMR1ZCUVdVc1JVRkRNVVFzZVVOQlFYbERMRU5CUVVNc1kwRkJZeXhGUVVONFJDeDNRMEZCZDBNc1EwRkJReXhyUWtGQmEwSXNSVUZETTBRc0swTkJRU3RETEVOQlFVTXNZVUZCWVRzN1FVRkhjRVVzYjBKQlFXOUNPMEZCUTNCQ0xGVkJRVlU3UlVGRFVpeFhRVUZYTEVWQlFVVXNaMEpCUVdkQ08wVkJRemRDTEZWQlFWVXNSVUZCUlN4TlFVRk5PMFZCUTJ4Q0xGZEJRVmNzUlVGQlJTeEhRVUZITzBWQlEyaENMRWRCUVVjc1JVRkJSU3g1UTBGQmVVTTdSVUZCUlN4bFFVRmxPMFZCUXk5RUxFZEJRVWNzUlVGQlJTeDFRa0ZCZFVJc1JVRkRka0lzT0VKQlFUaENMRVZCUXpsQ0xESkRRVUV5UXl4RFFVRkRMR1ZCUVdVc1JVRkRNMFFzTUVOQlFUQkRMRU5CUVVNc1kwRkJZeXhGUVVONlJDeDVRMEZCZVVNc1EwRkJReXhyUWtGQmEwSTdPMEZCUlc1RkxFRkJRVUVzWlVGQlpTeERRVUZETzBWQlEyUXNWMEZCVnl4RlFVRkZMR2RDUVVGblFqdEZRVU0zUWl4WFFVRlhMRVZCUVVVc1RVRkJUVHRGUVVOdVFpeFZRVUZWTEVWQlFVVXNUVUZCVFR0RlFVTnNRaXhUUVVGVExFVkJRVVVzU1VGQlNUdEZRVUZITEhsQ1FVRjVRanRGUVVNelF5eFBRVUZQTEVWQlFVVXNXVUZCV1R0RlFVTnlRaXhYUVVGWExFVkJRVVVzUTBGQlF6dEZRVU5rTEdOQlFXTXNSVUZCUlN4SlFVRkpPMFZCUTNCQ0xHTkJRV01zUlVGQlJTeE5RVUZOTzBWQlEzUkNMRk5CUVZNc1JVRkJSU3hOUVVGTk8wVkJRMnBDTEZkQlFWY3NSVUZCUlN4TlFVRk5PMFZCUTI1Q0xGTkJRVk1zUlVGQlJTeEhRVUZITzBWQlJXUXNjME5CUVhORE8wVkJRM1JETEhOQ1FVRnpRaXhGUVVGRkxGZEJRVmM3UlVGRGJrTXNiME5CUVc5RE8wVkJRM0JETEdOQlFXTXNSVUZCUlN4clFrRkJhMEk3UlVGRmJFTXNNRUpCUVRCQ08wVkJRekZDTEhWQ1FVRjFRaXhGUVVGRkxGTkJRVk03UlVGRmJFTXNjVUpCUVhGQ08wVkJRM0pDTEhGQ1FVRnhRaXhGUVVGRkxFMUJRVTBzUjBGRE9VSTdPMEZITlVWRUxFRkdUa0VzWlVWTlpTeERRWFZHV0N4cFFrRkJhVUlzUTBGRFlpeG5Ra0ZCWjBJc1EwRkZXaXhYUVVGWExFVkRlRWgyUWl4alFVRmpMRU5CWlZZc1UwRkJVeXhEUVdGTUxGbEJRVmtzUlVFMVFuQkNMR05CUVdNc1EwRTBSVllzU1VGQlNTeERRU3RDUVN4TFFVRkxMRU5CUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVlVGQlZTeEJRVUZtTEVsQlIwRXNTMEZCU3l4QlFVMUdMRkZCUVZFc1JVbHdTSHBDTEUxQlFVMHNRMEZGUml4TFFVRkxMRU5CUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVlVGQlZTeEJRVUZtTEVsQlIwRXNTMEZCU3l4QlFWRkdMRkZCUVZFc1JVRXJSM0pDTEZGQlFWRXNRMEZyUTBvc1lVRkJZU3hCUVU5U0xFOUJRVThzUlVGNlEyaENMRkZCUVZFc1EwRjVUMG9zWTBGQll5eERRVFpDVml4bFFVRmxMRUZCUjFZc1pVRkJaU3hCUVVkWUxFOUJRVThzUlVOd1dYaENMSFZDUVVGMVFpeEJRVU5zUWl4UlFVRlJMRVZCYlZwaUxEQkNRVUV3UWl4RFFVVjBRaXhMUVVGTExFZEJTME1zUzBGQlN5eEJRVkZHTEZGQlFWRXNRMUl2V1V3N1JVRkRXaXhYUVVGWExFVkJRVVVzWjBKQlFXZENPMFZCUXpkQ0xGZEJRVmNzUlVGQlJTeE5RVUZOTzBWQlEyNUNMRlZCUVZVc1JVRkJSU3hOUVVGTk8wVkJRMnhDTEZOQlFWTXNSVUZCUlN4SlFVRkpPMFZCUTJZc1YwRkJWeXhGUVVGRkxFTkJRVU03UlVGRFpDeGpRVUZqTEVWQlFVVXNUVUZCVFR0RlFVTjBRaXhqUVVGakxFVkJRVVVzU1VGQlNUdEZRVU53UWl4UFFVRlBMRVZCUVVVc1dVRkJXVHRGUVVOeVFpeFhRVUZYTEVWQlFVVXNUVUZCVFR0RlFVTnVRaXhUUVVGVExFVkJRVVVzVFVGQlRUdEZRVU5xUWl4VFFVRlRMRVZCUVVVc1IwRkJSenRGUVVOa0xEWkNRVUUyUWl4RlFVRkZMRTFCUVUwN1JVRkRja01zYzBKQlFYTkNMRVZCUVVVc1YwRkJWeXhIUVVOMFF6czdRVTl6UmtRc1FWQTNSVUVzVVU4MlJWRXNRVUZYU0N4VlFVRlZMRU5CUTFBc1lVRkJZU3hGUVZweVFpeFJRVUZSTEVGQmMwSklMR0ZCUVdFc1EwRkRWaXhuUWtGQlowSXNRMUJ3UjJoQ08wVkJRMG9zVTBGQlV5eEZRVUZETEhGQ1FVRnhRaXhIUVVOc1F6czdRVUZEUkN4VlFVRlZMRU5CUVZZc1RVRkJWVHRGUVVOT0xFbEJRVWs3U1VGRFFTeFBRVUZQTEVWQlFVTXNRMEZCUXp0RlFVVmlMRWRCUVVjN1NVRkRReXhQUVVGUExFVkJRVU1zUTBGQlF6czdRVU4yUkdwQ0xFRkJRVUVzVVVGQlVTeERRVUZETzBWQlEwd3NUMEZCVHl4RlFVRkRMRWxCUVVrN1JVRkRXaXhUUVVGVExFVkJRVU1zU1VGQlNUdEZRVU5rTEZkQlFWY3NSVVJOVGl4TFFVRkpPMFZEVEZRc1dVRkJXU3hGUkV0UUxFdEJRVWtzUjBOeFVGbzdSVUU1VUVRc1FVRkxTU3hSUVV4SkxFbEJTMFlzUVVGQlFTeExRVUZETEVWQlFVOHNUVUZCVFN4QlFVRmlMRVZCUVdVN1NVRkRaQ3haUVVGWkxFVkVSMWdzU1VGQlNUdEpRMFpNTEdGQlFXRXNSVVJGV2l4SlFVRkpPMGxEUkV3c1NVRkJTU3hGUVVGRExGRkJRVkU3U1VGRFlpeExRVUZMTEVWQlFVVXNTVUZCU1N4SFFVTmtPMFZCVmt3c1FVRlhTU3hSUVZoSkxFTkJWMG9zVTBGQlV5eERRVUZETzBsQlEwNHNTVUZCU1N4RlFVRkRMR2xDUVVGcFFqdEpRVU4wUWl4VFFVRlRMRVZCUVVVc1lVRkJZU3hIUVVNelFqdEZRV1JNTEVGQlpVa3NVVUZtU1N4RFFXVktMRk5CUVZNc1EwRkJRenRKUVVOT0xFbEJRVWtzUlVGQlF5eHBRa0ZCYVVJN1NVRkRkRUlzVTBGQlV5eEZRVUZGTEdGQlFXRXNSMEZETTBJN1JVRnNRa3dzUVVGdFFra3NVVUZ1UWtrc1EwRnRRa29zVTBGQlV5eERRVUZETzBsQlEwNHNTVUZCU1N4RlFVRkRMRTlCUVU4N1NVRkRXaXhUUVVGVExFVkJRVVVzUjBGQlJ5eEhRVU5xUWp0RlFYUkNUQ3hCUVhWQ1NTeFJRWFpDU1N4RFFYVkNTaXhUUVVGVExFTkJRVU03U1VGRFRpeEpRVUZKTEVWQlFVTXNhVUpCUVdsQ08wbEJRM1JDTEZOQlFWTXNSVUZCUlN4aFFVRmhMRWRCUXpOQ08wVkJNVUpNTEVGQk1rSkpMRkZCTTBKSkxFTkJNa0pLTEZOQlFWTXNRMEZCUXp0SlFVTk9MRWxCUVVrc1JVRkJReXhwUWtGQmFVSTdTVUZEZEVJc1UwRkJVeXhGUVVGRkxHRkJRV0VzUjBGRE0wSTdSVUU1UWt3c1FVRXJRa2tzVVVFdlFra3NRMEVyUWtvc1UwRkJVeXhEUVVGRE8wbEJRMDRzU1VGQlNTeEZRVUZETEU5QlFVODdTVUZEV2l4VFFVRlRMRVZCUVVVc1IwRkJSeXhIUVVOcVFqdEZRV3hEVEN4QlFXMURTU3hSUVc1RFNTeERRVzFEU2l4VFFVRlRMRU5CUVVNN1NVRkRUaXhKUVVGSkxFVkJRVU1zYVVKQlFXbENPMGxCUTNSQ0xGTkJRVk1zUlVGQlJTeGhRVUZoTEVkQlF6TkNPMFZCZEVOTUxFRkJkVU5KTEZGQmRrTkpMRU5CZFVOS0xGTkJRVk1zUTBGQlF6dEpRVU5PTEVsQlFVa3NSVUZCUXl4cFFrRkJhVUk3U1VGRGRFSXNVMEZCVXl4RlFVRkZMR0ZCUVdFc1IwRkRNMEk3UlVFeFEwd3NRVUV5UTBrc1VVRXpRMGtzUTBFeVEwb3NVMEZCVXl4RFFVRkRPMGxCUTA0c1NVRkJTU3hGUVVGRExFOUJRVTg3U1VGRFdpeFRRVUZUTEVWQlFVVXNSMEZCUnl4SFFVTnFRanRGUVRsRFRDeEJRU3REU1N4UlFTOURTU3hEUVN0RFNpeFZRVUZWTEVOQlFVTTdTVUZEVUN4SlFVRkpMRVZCUVVNc2FVSkJRV2xDTzBsQlEzUkNMRk5CUVZNc1JVRkJSU3hoUVVGaExFZEJRek5DTzBWQmJFUk1MRUZCYlVSSkxGRkJia1JKTEVOQmJVUktMRlZCUVZVc1EwRkJRenRKUVVOUUxFbEJRVWtzUlVGQlF5eHBRa0ZCYVVJN1NVRkRkRUlzVTBGQlV5eEZRVUZGTEdGQlFXRXNSMEZETTBJN1JVRjBSRXdzUVVGMVJFa3NVVUYyUkVrc1EwRjFSRW9zVlVGQlZTeERRVUZETzBsQlExQXNTVUZCU1N4RlFVRkRMRkZCUVZFc1IwRkRhRUk3UlVGRFJDeE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wbEJNVVIyUXl4QlFUSkVVU3hSUVRORVFTeERRVEpFUVN4UlFVRlJMRU5CUVVNN1RVRkRUQ3hKUVVGSkxFVkJRVU1zYVVKQlFXbENPMDFCUTNSQ0xGTkJRVk1zUlVGQlJTeGhRVUZoTEVkQlF6TkNPMGxCT1VSVUxFRkJLMFJSTEZGQkwwUkJMRU5CSzBSQkxGRkJRVkVzUTBGQlF6dE5RVU5NTEVsQlFVa3NSVUZCUXl4cFFrRkJhVUk3VFVGRGRFSXNVMEZCVXl4RlFVRkZMR0ZCUVdFc1IwRkRNMEk3U1VGc1JWUXNRVUZ0UlZFc1VVRnVSVUVzUTBGdFJVRXNVVUZCVVN4RFFVRkRPMDFCUTB3c1NVRkJTU3hGUVVGRExFOUJRVTg3VFVGRFdpeFRRVUZUTEVWQlFVVXNSMEZCUnl4SFFVTnFRanRKUVhSRlZDeEJRWFZGVVN4UlFYWkZRU3hEUVhWRlFTeFJRVUZSTEVOQlFVTTdUVUZEVEN4SlFVRkpMRVZCUVVNc2FVSkJRV2xDTzAxQlEzUkNMRk5CUVZNc1JVRkJSU3hoUVVGaExFZEJRek5DTzBsQk1VVlVMRUZCTWtWUkxGRkJNMFZCTEVOQk1rVkJMRkZCUVZFc1EwRkJRenROUVVOTUxFbEJRVWtzUlVGQlF5eHBRa0ZCYVVJN1RVRkRkRUlzVTBGQlV5eEZRVUZGTEdGQlFXRXNSMEZETTBJN1NVRTVSVlFzUVVFclJWRXNVVUV2UlVFc1EwRXJSVUVzVVVGQlVTeERRVUZETzAxQlEwd3NTVUZCU1N4RlFVRkRMRTlCUVU4N1RVRkRXaXhUUVVGVExFVkJRVVVzUjBGQlJ5eEhRVU5xUWp0SlFXeEdWQ3hCUVcxR1VTeFJRVzVHUVN4RFFXMUdRU3hSUVVGUkxFTkJRVU03VFVGRFRDeEpRVUZKTEVWQlFVTXNhVUpCUVdsQ08wMUJRM1JDTEZOQlFWTXNSVUZCUlN4aFFVRmhMRWRCUXpOQ08wbEJkRVpVTEVGQmRVWlJMRkZCZGtaQkxFTkJkVVpCTEZGQlFWRXNRMEZCUXp0TlFVTk1MRWxCUVVrc1JVRkJReXhwUWtGQmFVSTdUVUZEZEVJc1UwRkJVeXhGUVVGRkxHRkJRV0VzUjBGRE0wSTdTVUV4UmxRc1FVRXlSbEVzVVVFelJrRXNRMEV5UmtFc1VVRkJVU3hEUVVGRE8wMUJRMHdzU1VGQlNTeEZRVUZETEU5QlFVODdUVUZEV2l4VFFVRlRMRVZCUVVVc1IwRkJSeXhIUVVOcVFqdEpRVGxHVkN4QlFTdEdVU3hSUVM5R1FTeERRU3RHUVN4VFFVRlRMRU5CUVVNN1RVRkRUaXhKUVVGSkxFVkJRVU1zYVVKQlFXbENPMDFCUTNSQ0xGTkJRVk1zUlVGQlJTeGhRVUZoTEVkQlF6TkNPMGxCYkVkVUxFRkJiVWRSTEZGQmJrZEJMRU5CYlVkQkxGTkJRVk1zUTBGQlF6dE5RVU5PTEVsQlFVa3NSVUZCUXl4cFFrRkJhVUk3VFVGRGRFSXNVMEZCVXl4RlFVRkZMR0ZCUVdFc1IwRkRNMEk3U1VGMFIxUXNRVUYxUjFFc1VVRjJSMEVzUTBGMVIwRXNVMEZCVXl4RFFVRkRPMDFCUTA0c1NVRkJTU3hGUVVGRExGRkJRVkVzUjBGRGFFSTdSVUZGVEN4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBsQk0wZDJReXhCUVRSSFVTeFJRVFZIUVN4RFFUUkhRU3hQUVVGUExFTkJRVU03VFVGRFNpeEpRVUZKTEVWQlFVTXNhVUpCUVdsQ08wMUJRM1JDTEZOQlFWTXNSVUZCUlN4aFFVRmhMRWRCUXpOQ08wbEJMMGRVTEVGQlowaFJMRkZCYUVoQkxFTkJaMGhCTEU5QlFVOHNRMEZCUXp0TlFVTktMRWxCUVVrc1JVRkJReXhwUWtGQmFVSTdUVUZEZEVJc1UwRkJVeXhGUVVGRkxHRkJRV0VzUjBGRE0wSTdTVUZ1U0ZRc1FVRnZTRkVzVVVGd1NFRXNRMEZ2U0VFc1QwRkJUeXhEUVVGRE8wMUJRMG9zU1VGQlNTeEZRVUZETEU5QlFVODdUVUZEV2l4VFFVRlRMRVZCUVVVc1IwRkJSeXhIUVVOcVFqdEpRWFpJVkN4QlFYZElVU3hSUVhoSVFTeERRWGRJUVN4UFFVRlBMRU5CUVVNN1RVRkRTaXhKUVVGSkxFVkJRVU1zYVVKQlFXbENPMDFCUTNSQ0xGTkJRVk1zUlVGQlJTeGhRVUZoTEVkQlF6TkNPMGxCTTBoVUxFRkJORWhSTEZGQk5VaEJMRU5CTkVoQkxFOUJRVThzUTBGQlF6dE5RVU5LTEVsQlFVa3NSVUZCUXl4cFFrRkJhVUk3VFVGRGRFSXNVMEZCVXl4RlFVRkZMR0ZCUVdFc1IwRkRNMEk3U1VFdlNGUXNRVUZuU1ZFc1VVRm9TVUVzUTBGblNVRXNUMEZCVHl4RFFVRkRPMDFCUTBvc1NVRkJTU3hGUVVGRExFOUJRVTg3VFVGRFdpeFRRVUZUTEVWQlFVVXNSMEZCUnl4SFFVTnFRanRKUVc1SlZDeEJRVzlKVVN4UlFYQkpRU3hEUVc5SlFTeFBRVUZQTEVOQlFVTTdUVUZEU2l4SlFVRkpMRVZCUVVNc2FVSkJRV2xDTzAxQlEzUkNMRk5CUVZNc1JVRkJSU3hoUVVGaExFZEJRek5DTzBsQmRrbFVMRUZCZDBsUkxGRkJlRWxCTEVOQmQwbEJMRTlCUVU4c1EwRkJRenROUVVOS0xFbEJRVWtzUlVGQlF5eHBRa0ZCYVVJN1RVRkRkRUlzVTBGQlV5eEZRVUZGTEdGQlFXRXNSMEZETTBJN1NVRXpTVlFzUVVFMFNWRXNVVUUxU1VFc1EwRTBTVUVzVDBGQlR5eERRVUZETzAxQlEwb3NTVUZCU1N4RlFVRkRMRTlCUVU4N1RVRkRXaXhUUVVGVExFVkJRVVVzUjBGQlJ5eEhRVU5xUWp0SlFTOUpWQ3hCUVdkS1VTeFJRV2hLUVN4RFFXZEtRU3hSUVVGUkxFTkJRVU03VFVGRFRDeEpRVUZKTEVWQlFVTXNhVUpCUVdsQ08wMUJRM1JDTEZOQlFWTXNSVUZCUlN4aFFVRmhMRWRCUXpOQ08wbEJia3BVTEVGQmIwcFJMRkZCY0VwQkxFTkJiMHBCTEZGQlFWRXNRMEZCUXp0TlFVTk1MRWxCUVVrc1JVRkJReXhwUWtGQmFVSTdUVUZEZEVJc1UwRkJVeXhGUVVGRkxHRkJRV0VzUjBGRE0wSTdTVUYyU2xRc1FVRjNTbEVzVVVGNFNrRXNRMEYzU2tFc1VVRkJVU3hEUVVGRE8wMUJRMHdzU1VGQlNTeEZRVUZETEZGQlFWRXNSMEZEYUVJN1JVRkZUQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMGxCTlVwMlF5eEJRVFpLVVN4UlFUZEtRU3hEUVRaS1FTeFBRVUZQTEVOQlFVTTdUVUZEU2l4SlFVRkpMRVZCUVVNc2FVSkJRV2xDTzAxQlEzUkNMRk5CUVZNc1JVRkJSU3hoUVVGaExFZEJRek5DTzBsQmFFdFVMRUZCYVV0UkxGRkJha3RCTEVOQmFVdEJMRTlCUVU4c1EwRkJRenROUVVOS0xFbEJRVWtzUlVGQlF5eHBRa0ZCYVVJN1RVRkRkRUlzVTBGQlV5eEZRVUZGTEdGQlFXRXNSMEZETTBJN1NVRndTMVFzUVVGeFMxRXNVVUZ5UzBFc1EwRnhTMEVzVDBGQlR5eERRVUZETzAxQlEwb3NTVUZCU1N4RlFVRkRMRTlCUVU4N1RVRkRXaXhUUVVGVExFVkJRVVVzUjBGQlJ5eEhRVU5xUWp0SlFYaExWQ3hCUVhsTFVTeFJRWHBMUVN4RFFYbExRU3hQUVVGUExFTkJRVU03VFVGRFNpeEpRVUZKTEVWQlFVTXNhVUpCUVdsQ08wMUJRM1JDTEZOQlFWTXNSVUZCUlN4aFFVRmhMRWRCUXpOQ08wbEJOVXRVTEVGQk5rdFJMRkZCTjB0QkxFTkJOa3RCTEU5QlFVOHNRMEZCUXp0TlFVTktMRWxCUVVrc1JVRkJReXhwUWtGQmFVSTdUVUZEZEVJc1UwRkJVeXhGUVVGRkxHRkJRV0VzUjBGRE0wSTdTVUZvVEZRc1FVRnBURkVzVVVGcVRFRXNRMEZwVEVFc1QwRkJUeXhEUVVGRE8wMUJRMG9zU1VGQlNTeEZRVUZETEU5QlFVODdUVUZEV2l4VFFVRlRMRVZCUVVVc1IwRkJSeXhIUVVOcVFqdEpRWEJNVkN4QlFYRk1VU3hSUVhKTVFTeERRWEZNUVN4UFFVRlBMRU5CUVVNN1RVRkRTaXhKUVVGSkxFVkJRVU1zYVVKQlFXbENPMDFCUTNSQ0xGTkJRVk1zUlVGQlJTeGhRVUZoTEVkQlF6TkNPMGxCZUV4VUxFRkJlVXhSTEZGQmVreEJMRU5CZVV4QkxFOUJRVThzUTBGQlF6dE5RVU5LTEVsQlFVa3NSVUZCUXl4cFFrRkJhVUk3VFVGRGRFSXNVMEZCVXl4RlFVRkZMR0ZCUVdFc1IwRkRNMEk3U1VFMVRGUXNRVUUyVEZFc1VVRTNURUVzUTBFMlRFRXNUMEZCVHl4RFFVRkRPMDFCUTBvc1NVRkJTU3hGUVVGRExFOUJRVTg3VFVGRFdpeFRRVUZUTEVWQlFVVXNSMEZCUnl4SFFVTnFRanRKUVdoTlZDeEJRV2xOVVN4UlFXcE5RU3hEUVdsTlFTeFJRVUZSTEVOQlFVTTdUVUZEVEN4SlFVRkpMRVZCUVVNc2FVSkJRV2xDTzAxQlEzUkNMRk5CUVZNc1JVRkJSU3hoUVVGaExFZEJRek5DTzBsQmNFMVVMRUZCY1UxUkxGRkJjazFCTEVOQmNVMUJMRkZCUVZFc1EwRkJRenROUVVOTUxFbEJRVWtzUlVGQlF5eHBRa0ZCYVVJN1RVRkRkRUlzVTBGQlV5eEZRVUZGTEdGQlFXRXNSMEZETTBJN1NVRjRUVlFzUVVGNVRWRXNVVUY2VFVFc1EwRjVUVUVzVVVGQlVTeERRVUZETzAxQlEwd3NTVUZCU1N4RlFVRkRMRkZCUVZFc1IwRkRhRUk3UlVGRlRDeE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hOUVVGTk8wbEJOMDE0UXl4QlFUaE5VU3hSUVRsTlFTeERRVGhOUVN4UFFVRlBMRU5CUVVNN1RVRkRTaXhKUVVGSkxFVkJRVU1zYVVKQlFXbENPMDFCUTNSQ0xGTkJRVk1zUlVGQlJTeGhRVUZoTEVkQlF6TkNPMGxCYWs1VUxFRkJhMDVSTEZGQmJFNUJMRU5CYTA1QkxFOUJRVThzUTBGQlF6dE5RVU5LTEVsQlFVa3NSVUZCUXl4cFFrRkJhVUk3VFVGRGRFSXNVMEZCVXl4RlFVRkZMR0ZCUVdFc1IwRkRNMEk3U1VGeVRsUXNRVUZ6VGxFc1VVRjBUa0VzUTBGelRrRXNUMEZCVHl4RFFVRkRPMDFCUTBvc1NVRkJTU3hGUVVGRExFOUJRVTg3VFVGRFdpeFRRVUZUTEVWQlFVVXNSMEZCUnl4SFFVTnFRanRKUVhwT1ZDeEJRVEJPVVN4UlFURk9RU3hEUVRCT1FTeFBRVUZQTEVOQlFVTTdUVUZEU2l4SlFVRkpMRVZCUVVNc2FVSkJRV2xDTzAxQlEzUkNMRk5CUVZNc1JVRkJSU3hoUVVGaExFZEJRek5DTzBsQk4wNVVMRUZCT0U1UkxGRkJPVTVCTEVOQk9FNUJMRTlCUVU4c1EwRkJRenROUVVOS0xFbEJRVWtzUlVGQlF5eHBRa0ZCYVVJN1RVRkRkRUlzVTBGQlV5eEZRVUZGTEdGQlFXRXNSMEZETTBJN1NVRnFUMVFzUVVGclQxRXNVVUZzVDBFc1EwRnJUMEVzVDBGQlR5eERRVUZETzAxQlEwb3NTVUZCU1N4RlFVRkRMRTlCUVU4N1RVRkRXaXhUUVVGVExFVkJRVVVzUjBGQlJ5eEhRVU5xUWp0SlFYSlBWQ3hCUVhOUFVTeFJRWFJQUVN4RFFYTlBRU3hQUVVGUExFTkJRVU03VFVGRFNpeEpRVUZKTEVWQlFVTXNhVUpCUVdsQ08wMUJRM1JDTEZOQlFWTXNSVUZCUlN4aFFVRmhMRWRCUXpOQ08wbEJlazlVTEVGQk1FOVJMRkZCTVU5QkxFTkJNRTlCTEU5QlFVOHNRMEZCUXp0TlFVTktMRWxCUVVrc1JVRkJReXhwUWtGQmFVSTdUVUZEZEVJc1UwRkJVeXhGUVVGRkxHRkJRV0VzUjBGRE0wSTdTVUUzVDFRc1FVRTRUMUVzVVVFNVQwRXNRMEU0VDBFc1QwRkJUeXhEUVVGRE8wMUJRMG9zU1VGQlNTeEZRVUZETEU5QlFVODdUVUZEV2l4VFFVRlRMRVZCUVVVc1IwRkJSeXhIUVVOcVFqdEpRV3BRVkN4QlFXdFFVU3hSUVd4UVFTeERRV3RRUVN4UlFVRlJMRU5CUVVNN1RVRkRUQ3hKUVVGSkxFVkJRVU1zYVVKQlFXbENPMDFCUTNSQ0xGTkJRVk1zUlVGQlJTeGhRVUZoTEVkQlF6TkNPMGxCY2xCVUxFRkJjMUJSTEZGQmRGQkJMRU5CYzFCQkxGRkJRVkVzUTBGQlF6dE5RVU5NTEVsQlFVa3NSVUZCUXl4cFFrRkJhVUk3VFVGRGRFSXNVMEZCVXl4RlFVRkZMR0ZCUVdFc1IwRkRNMEk3U1VGNlVGUXNRVUV3VUZFc1VVRXhVRUVzUTBFd1VFRXNVVUZCVVN4RFFVRkRPMDFCUTB3c1NVRkJTU3hGUVVGRExGRkJRVkVzUjBGRGFFSTdPMEZETlZCVUxFRkJRVUVzU1VGQlNUdEJRVU5LTEVsQlFVa3NRMEZCUXp0RlFVTkVMRTFCUVUwc1JVRkJReXhKUVVGSkxFZEJRMlE3TzBGQlJVUXNRVUZCUVN4VFFVRlRMRU5CUVVNN1JVRkRUaXhSUVVGUkxFVkJRVU1zVVVGQlVTeEhRVU53UWpzN1FVRkZSQ3hCUVVGQkxHbENRVUZwUWl4RFFVRkRPMFZCUTJRc1RVRkJUU3hGUVVGRExFOUJRVTg3UlVGRFpDeFZRVUZWTEVWQlFVTXNTMEZCU3l4SFFVOXVRanRGUVZSRUxFRkJSMGtzYVVKQlNHRXNRMEZIWWl4aFFVRmhMRU5CUVVNN1NVRkRWaXhQUVVGUExFVkJRVU1zU1VGQlNTeEhRVU5tTzBWQlEwUXNRVUZCUVN4alFVRmpMRU5CVG14Q0xHbENRVUZwUWl4RFFVMUpPMGxCUTJJc1QwRkJUeXhGUVVGRkxFbEJRVWtzUjBGRGFFSTdPMEZCUjB3c1FVRkJRU3gzUWtGQmQwSXNRMEZCUXp0RlFVTnlRaXhQUVVGUExFVkJRVVVzU1VGQlNUdEZRVU5pTEV0QlFVc3NSVUZCUlN4TFFVRkxPMFZCUTFvc1RVRkJUU3hGUVVGRExFOUJRVTg3UlVGRFpDeFZRVUZWTEVWQlFVTXNTMEZCU3l4SFFVbHVRanRGUVVoSExFRkJRVUVzWTBGQll5eERRVXhzUWl4M1FrRkJkMElzUTBGTFNEdEpRVU5pTEU5QlFVOHNSVUZCUlN4TFFVRkxMRWRCUTJwQ096dEJRVWRNTEVGQlFVRXNaVUZCWlN4RFFVRkRPMFZCVVZvc1QwRkJUeXhGUVVGRExFbEJRVWs3UlVGRFdpeG5Ra0ZCWjBJc1JVWnlRMVlzVlVGQllUdEZSWE5EYmtJc1YwRkJWeXhGUmpGQ1NpeFJRVUZSTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hWUVVGVk8wVkZNa0kzUXl4VFFVRlRMRVZCUVVNc1NVRkJTVHRGUVVOa0xGZEJRVmNzUlVGQlF5eEhRVUZITzBWQlEyWXNTMEZCU3l4RlJqRkRSeXhQUVVGaE8wVkZNa055UWl4VlFVRlZMRVZCUVVNc1NVRkJTVHRGUVVObUxITkNRVUZ6UWl4RlFVRkZMRmRCUVZjN1JVRkRia01zZFVKQlFYVkNMRVZCUVVVc1UwRkJVeXhIUVN0SWNrTTdSVUV2U1VRc1FVRkRTU3hsUVVSWExFTkJRMWdzUTBGQlF5eERRVUZETzBsQlEwVXNWVUZCVlN4RlFVRkRMRlZCUVZVc1IwRkRlRUk3UlVGSVRDeEJRVWxKTEdWQlNsY3NRVUZKVml4aFFVRmhPMFZCU214Q0xHVkJRV1VzUVVGTFZpeGhRVUZoTEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTJJc1RVRkJUU3hGUVVGRExHVkJRV1VzUjBGRGVrSTdSVUZRVEN4QlFXbENTU3hsUVdwQ1Z5eERRV2xDV0N4RFFVRkRMRUZCUVVFc1NVRkJTeXhEUVVGQkxFOUJRVThzUlVGQlJUdEpRVU5ZTEV0QlFVc3NSVVl6UTBRc1QwRkJhVUlzUjBVMFEzaENPMFZCYmtKTUxFRkJiMEpKTEdWQmNFSlhMRU5CYjBKWUxFVkJRVVVzUTBGQlF6dEpRVU5ETEZOQlFWTXNSVUZCUXl4UFFVRlBPMGxCUTJwQ0xFMUJRVTBzUlVGQlF5eFRRVUZUTEVkQlEyNUNPMFZCZGtKTUxFRkJkMEpKTEdWQmVFSlhMRU5CZDBKWUxIRkNRVUZ4UWl4RFFVRkRPMGxCUTJ4Q0xFMUJRVTBzUlVGQlF5eE5RVUZOTzBsQlEySXNVMEZCVXl4RlFVRkRMRTFCUVUwN1NVRkRhRUlzUzBGQlN5eEZRVUZETEVkQlFVYzdTVUZEVkN4UFFVRlBMRVZCUVVNc1NVRkJTU3hIUVVObU8wVkJOMEpNTEVGQk9FSkpMR1ZCT1VKWExFTkJPRUpZTEdkQ1FVRm5RaXhEUVVGRE8wbEJRMklzUzBGQlN5eEZRVUZETEVkQlFVYzdTVUZEVkN4VlFVRlZMRVZCUVVNc1QwRkJZU3hIUVdkRE0wSTdTVUZvUlV3c1FVRnBRMUVzWlVGcVEwOHNRMEU0UWxnc1owSkJRV2RDTEVOQlIxb3NWVUZCVlN4RFFVRkRPMDFCUTFBc1YwRkJWeXhGUVVGRExFbEJRVk1zUjBFMlFuaENPMDFCTDBSVUxFRkJiVU5aTEdWQmJrTkhMRU5CT0VKWUxHZENRVUZuUWl4RFFVZGFMRlZCUVZVc1IwRkZTaXhGUVVGRkxFTkJRVU03VVVGRFJDeGxRVUZsTEVWQlFVTXNTVUZCU1R0UlFVTndRaXhQUVVGUExFVkJRVU1zUTBGQlF6dFJRVU5VTEUxQlFVMHNSVUZCUXl4RFFVRkRMRWRCZDBKWU8xRkJPVVJpTEVGQmRVTm5RaXhsUVhaRFJDeERRVGhDV0N4blFrRkJaMElzUTBGSFdpeFZRVUZWTEVkQlJVb3NSVUZCUlN4SFFVbEZMRVZCUVVVc1EwRkJRenRWUVVORUxHRkJRV0VzUlVGQlF5eEhRVUZITEVOQlFVTXNTMEZCU3l4RFFVRkRMRzFDUVVGdFFpeEhRWEZDT1VNN1ZVRTNSR3BDTEVGQmVVTnZRaXhsUVhwRFRDeERRVGhDV0N4blFrRkJaMElzUTBGSFdpeFZRVUZWTEVkQlJVb3NSVUZCUlN4SFFVbEZMRVZCUVVVc1FVRkZReXhaUVVGWkxFTkJRVU03V1VGRFZpeFZRVUZWTEVWQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXh0UWtGQmJVSXNSMEZETTBNN1ZVRXpRM0pDTEVGQk5FTnZRaXhsUVRWRFRDeERRVGhDV0N4blFrRkJaMElzUTBGSFdpeFZRVUZWTEVkQlJVb3NSVUZCUlN4SFFVbEZMRVZCUVVVc1IwRkxSU3hEUVVGRExFTkJRVU03V1VGRFFTeFBRVUZQTEVWQlFVTXNVMEZCVXp0WlFVTnFRaXhQUVVGUExFVkJRVU1zUzBGQlN6dFpRVU5pTEZOQlFWTXNSVUZCUXl4UFFVRlBPMWxCUTJwQ0xGZEJRVmNzUlVGQlF5eEhRVUZITzFsQlEyWXNaVUZCWlN4RlFVRkRMRWxCUVVrc1IwRkpka0k3V1VGeVJISkNMRUZCYTBSM1FpeGxRV3hFVkN4RFFUaENXQ3huUWtGQlowSXNRMEZIV2l4VlFVRlZMRWRCUlVvc1JVRkJSU3hIUVVsRkxFVkJRVVVzUjBGTFJTeERRVUZETEVGQlRVVXNUVUZCVFN4RFFVRkRPMk5CUTBvc1ZVRkJWU3hGUVVGRExHMUNRVUZ0UWl4SFFVTnFRenRWUVhCRWVrSXNRVUYxUkhkQ0xHVkJka1JVTEVOQk9FSllMR2RDUVVGblFpeERRVWRhTEZWQlFWVXNSMEZGU2l4RlFVRkZMRWRCU1VVc1JVRkJSU3hCUVdWRExGRkJRVkVzUjBGRFNDeERRVUZETEVOQlFVTTdXVUZEUVN4VlFVRlZMRVZHY0VZMVFpeFZRVUZoTzFsRmNVWkxMRXRCUVVzc1JVWnFSbWhDTEU5QlFXZENPMWxGYTBaTUxFMUJRVTBzUlVGQlF5eFBRVUZQTEVkQlEycENPMFZCTTBSNlFpeEJRV2xGU1N4bFFXcEZWeXhEUVdsRldDeG5Ra0ZCWjBJc1EwRkJRenRKUVVOaUxFbEJRVWtzUlVGQlF5eERRVUZETzBsQlEwNHNUMEZCVHl4RlFVRkRMRWxCUVZjN1NVRkRia0lzVVVGQlVTeEZRVUZETEZGQlFWRXNSMEZEY0VJN1JVRnlSVXdzUVVGM1JWa3NaVUY0UlVjc1FVRnpSVllzVVVGQlVTeERRVU5NTEdsQ1FVRnBRaXhEUVVOaUxHRkJRV0VzUTBGQlF6dEpRVU5XTEU5QlFVOHNSVUZCUlN4WlFVRlpMRWRCUTNoQ08wVkJNVVZpTEVGQk1rVlpMR1ZCTTBWSExFRkJjMFZXTEZGQlFWRXNRMEZEVEN4cFFrRkJhVUlzUTBGSllpeGhRVUZoTzBWQk0wVjZRaXhsUVVGbExFRkJjMFZXTEZGQlFWRXNRMEZEVEN4cFFrRkJhVUlzUTBGTFlpeHRRa0ZCYlVJc1EwRkJRenRKUVVOb1FpeFBRVUZQTEVWQlFVVXNaVUZCWlN4SFFVTXpRanRGUVRsRllpeEJRV2RHVVN4bFFXaEdUeXhCUVhORlZpeFJRVUZSTEVOQlZVd3NXVUZCV1N4RFFVRkRPMGxCUTFRc1QwRkJUeXhGUVVGRkxFbEJRVWtzUjBGRGFFSTdSVUZzUmxRc1FVRnRSbEVzWlVGdVJrOHNRVUZ6UlZZc1VVRkJVU3hEUVdGTUxIRkNRVUZ4UWl4RFFVRkRPMGxCUTJ4Q0xFOUJRVThzUlVGQlJTeGxRVUZsTEVkQlF6TkNPMFZCY2taVUxFRkJkMFpSTEdWQmVFWlBMRU5CZFVaWUxHbENRVUZwUWl4RFFVTmlMR2RDUVVGblFpeERRVUZETzBsQlEySXNVVUZCVVN4RlFVRkRMRkZCUVZFc1IwRTBRbkJDTzBsQmNraFVMRUZCTUVaWkxHVkJNVVpITEVOQmRVWllMR2xDUVVGcFFpeERRVU5pTEdkQ1FVRm5RaXhEUVVWYUxGZEJRVmNzUTBGQlF6dE5RVVZTTEZGQlFWRXNSVUZCUXl4UlFVRlJPMDFCUTJwQ0xFdEJRVXNzUlVGQlF5eEhRVUZITzAxQlExUXNSMEZCUnl4RlFVRkRMRWRCUVVjN1RVRkRVQ3hMUVVGTExFVkJRVU1zU1VGQlNUdE5RVU5XTEUxQlFVMHNSVUZCUXl4SlFVRkpPMDFCUTFnc1YwRkJWeXhGUVVGRExFbEJRVWs3VFVGRGFFSXNVMEZCVXl4RlFVRkRMRWxCUVVrN1RVRkRaQ3hOUVVGTkxFVkJRVU1zVDBGQlR6dE5RVU5rTEZWQlFWVXNSVUZCUXl4TlFVRk5PMDFCUTJwQ0xGVkJRVlVzUlVGQlF5eG5Ra0ZCWjBJc1IwRlBPVUk3VFVFMVIySXNRVUZ6UjJkQ0xHVkJkRWRFTEVOQmRVWllMR2xDUVVGcFFpeERRVU5pTEdkQ1FVRm5RaXhEUVVWYUxGZEJRVmNzUVVGWlRpeFJRVUZSTEVOQlFVTTdVVUZEVGl4UFFVRlBMRVZCUVVNc1QwRkJUeXhIUVVOc1FqdE5RWGhIYWtJc1FVRjVSMmRDTEdWQmVrZEVMRU5CZFVaWUxHbENRVUZwUWl4RFFVTmlMR2RDUVVGblFpeERRVVZhTEZkQlFWY3NRVUZsVGl4TlFVRk5MRU5CUVVNN1VVRkRTaXhWUVVGVkxFVkJRVU1zYlVKQlFXMUNMRWRCUTJwRE8wbEJNMGRxUWl4QlFUWkhXU3hsUVRkSFJ5eERRWFZHV0N4cFFrRkJhVUlzUTBGRFlpeG5Ra0ZCWjBJc1EwRnhRbG9zUzBGQlN5eERRVUZCTEVGQlFVRXNTVUZCUXl4RFFVRkVMRWxCUVVNc1FVRkJRU3hGUVVGWE8wMUJRMklzWVVGQllTeEZRVUZETEVkQlFVY3NSMEZEY0VJN1NVRXZSMklzUVVGcFNHZENMR1ZCYWtoRUxFTkJkVVpZTEdsQ1FVRnBRaXhEUVVOaUxHZENRVUZuUWl4QlFYZENXQ3haUVVGWkxFRkJRVUVzWlVGQlowSXNRMEZCUVN4RFFVRkRMRVZCUXpGQ0xGZEJRVmNzUTBGQlF6dE5RVU5TTEU5QlFVOHNSVUZCUlN4SlFVRkpMRWRCUTJoQ08wVkJia2hxUWl4QlFUQklaMElzWlVFeFNFUXNRMEYxU0Znc1YwRkJWeXhEUVVGQkxFRkJRVUVzTmtKQlFVTXNRMEZCT0VJc1RVRkJUU3hCUVVGd1F5eEZRVU5TTEdsQ1FVRnBRaXhEUVVOaUxHZENRVUZuUWl4RFFVTmFMRmRCUVZjc1EwRkJRenRKUVVOU0xFOUJRVThzUlVGQlJTeExRVUZMTEVkQlJXcENPMFZCTjBocVFpeEJRV3RKVVN4bFFXeEpUeXhEUVdsSldDeFhRVUZYTEVOQlExQXNZVUZCWVN4RFFVRkRPMGxCUTFZc1QwRkJUeXhGUVVGRkxFbEJRVWs3U1VGRFlpeFRRVUZUTEVWQlFVVXNTVUZCU1R0SlFVTm1MRTlCUVU4c1JVRkJSU3hKUVVGSk8wbEJRMklzVlVGQlZTeEZRVUZGTEU5QlFVODdTVUZEYmtJc1RVRkJUU3hGUVVGRkxFOUJRVThzUjBGRGJFSTdSVUY0U1ZRc1FVRXdTVmtzWlVFeFNVY3NRMEZwU1Znc1YwRkJWeXhCUVZGT0xHRkJRV0VzUTBGRFZpeGhRVUZoTEVOQlFVTTdTVUZEVml4UFFVRlBMRVZCUVVVc1MwRkJTeXhIUVVOcVFqczdRVUZMWWl4QlFVRkJMR1ZCUVdVc1EwRkJRenRGUVVOYUxFMUJRVTBzUlVGQlF5eFBRVUZQTEVkQmMwSnFRanRGUVhaQ1JDeEJRVVZKTEdWQlJsY3NRMEZGV0N4alFVRmpMRU5CUVVNN1NVRkRXQ3hUUVVGVExFVkJRVU1zU1VGQlNUdEpRVU5rTEZkQlFWY3NSVUZCUXl4SFFVRkhPMGxCUTJZc1RVRkJUU3hGUVVGRExFTkJRVU03U1VGRFVpeExRVUZMTEVWQlFVTXNTVUZCU1N4SFFVTmlPMFZCVUV3c1FVRlJTU3hsUVZKWExFTkJVVmdzYVVKQlFXbENMRU5CUVVNN1NVRkRaQ3hMUVVGTExFVkJRVU1zUzBGQlN5eEhRVWxrTzBsQllrd3NRVUZWVVN4bFFWWlBMRU5CVVZnc2FVSkJRV2xDTEVOQlJXSXNXVUZCV1N4RFFVRkRPMDFCUTFRc1QwRkJUeXhGUVVGRkxGbEJRVmtzUjBGRGVFSTdSVUZhVkN4QlFXTkpMR1ZCWkZjc1FVRmpWaXhQUVVGUExFTkJRVU03U1VGRFRDeFBRVUZQTEVWQlFVTXNSVUZCUlR0SlFVTldMRTlCUVU4c1JVRkJReXhMUVVGTE8wbEJRMklzUzBGQlN5eEZRVUZETEVsQlFVa3NSMEZEWWp0RlFXeENUQ3hCUVcxQ1NTeGxRVzVDVnl4RFFXMUNXQ3hEUVVGRExFTkJRVU03U1VGRFJTeExRVUZMTEVWQlFVTXNTVUZCU1R0SlFVTldMRk5CUVZNc1JVRkJReXhKUVVGSkxFZEJRMnBDT3p0QlEzSk5UQ3hCUVVGQkxHTkJRV01zUTBGQlF6dEZRVVZZTEZGQlFWRXNSVUZCUXl4TFFVRkxPMFZCUTJRc1QwRkJUeXhGUVVGRExFbEJRVWs3UlVGRFdpeFZRVUZWTEVWQlFVTXNhMEpCUVd0Q08wVkJRemRDTEVkQlFVY3NSVUZCUXl4RFFVRkRPMFZCUTB3c1NVRkJTU3hGUVVGRExFTkJRVU03UlVGRFRpeExRVUZMTEVWQlFVTXNTVUZCU1R0RlFVTldMRTFCUVUwc1JVRkJReXhKUVVGSk8wVkJRMWdzVVVGQlVTeEZRVUZETEUxQlFVMDdSVUZEWml4UFFVRlBMRVZCUVVNc1NVRkJTVHRGUVVOYUxGTkJRVk1zUlVGQlF5eGxRVUZsTEVkQk1rbzFRanRGUVhSTFJDeEJRVmxKTEdOQldsVXNRMEZaVml4RFFVRkRMRU5CUVVNN1NVRkRSU3hWUVVGVkxFVkJRVU1zVlVGQlZTeEhRVU40UWp0RlFXUk1MRUZCWlVrc1kwRm1WU3hEUVdWV0xGTkJRVk1zUTBGQlF6dEpRVU5PTEZGQlFWRXNSVUZCUXl4UlFVRlJPMGxCUTJwQ0xFZEJRVWNzUlVGQlF5eEhRVUZITzBsQlExQXNTVUZCU1N4RlFVRkRMRWRCUVVjN1NVRkRVaXhUUVVGVExFVkJRVU1zY1VKQlFYRkNPMGxCUXk5Q0xGVkJRVlVzUlVGQlF5eEpRVUZKTzBsQlEyWXNZVUZCWVN4RlFYQkNSU3hIUVVGSE8wbEJjVUpzUWl4TFFVRkxMRVZCUVVNc1MwRkJTenRKUVVOWUxGTkJRVk1zUlVGQlF5eEhRVUZITzBsQlEySXNWVUZCVlN4RlFVRkRMRWRCUVVjN1NVRkRaQ3hQUVVGUExFVkJRVU1zU1VGQlNUdEpRVU5hTEdOQlFXTXNSVUZCUXl4TlFVRk5PMGxCUTNKQ0xGTkJRVk1zUlVGQlF5eDNRa0ZCZDBJc1IwRm5SSEpETzBsQk0wVk1MRUZCTkVKUkxHTkJOVUpOTEVOQlpWWXNVMEZCVXl4RFFXRk1MRmxCUVZrc1EwRkJRenROUVVOVUxGRkJRVkVzUlVGQlF5eFJRVUZSTzAxQlEycENMRXRCUVVzc1JVRkJReXhKUVVGSk8wMUJRMVlzUjBGQlJ5eEZRVUZETEVsQlFVazdUVUZEVWl4UFFVRlBMRVZCUVVNc1MwRkJTenROUVVOaUxFdEJRVXNzUlVGQlF5eEpRVUZKTzAxQlExWXNUVUZCVFN4RlFVRkRMRWxCUVVrN1RVRkRXQ3hQUVVGUExFVkJRVU1zUTBGQlF6dE5RVU5VTEZOQlFWTXNSVUZCUXl4SlFVRkpPMDFCUTJRc1ZVRkJWU3hGUVVGRExFMUJRVTA3VFVGRGFrSXNWVUZCVlN4RlFVRkRMRmRCUVZjN1RVRkRkRUlzWlVGQlpTeEZRVUZETEVsQlFVa3NSMEZMZGtJN1RVRTFRMVFzUVVGNVExa3NZMEY2UTBVc1EwRmxWaXhUUVVGVExFTkJZVXdzV1VGQldTeEJRV0ZRTEZGQlFWRXNRMEZCUXp0UlFVTk9MRTlCUVU4c1JVRkJReXhQUVVGUExFZEJRMnhDTzBsQk0wTmlMRUZCTmtOUkxHTkJOME5OTEVOQlpWWXNVMEZCVXl4RFFUaENUQ3hqUVVGakxFTkJRVU03VFVGRFdDeFBRVUZQTEVWQlFVTXNVMEZCVXp0TlFVTnFRaXhWUVVGVkxFVkJRVU1zU1VGQlNUdE5RVU5tTEZOQlFWTXNSVUZCUlN4SlFVRkpMRWRCUTJ4Q08wbEJha1JVTEVGQmEwUlJMR05CYkVSTkxFTkJaVllzVTBGQlV5eERRVzFEVEN4alFVRmpMRU5CUVVNN1RVRkRXQ3hQUVVGUExFVkJRVU1zYlVKQlFXMUNPMDFCUXpOQ0xGVkJRVlVzUlVGQlF5eFBRVUZoTzAxQlEzaENMRXRCUVVzc1JVRkJReXhKUVVGSk8wMUJRMVlzWVVGQllTeEZRWEpFUml4SFFVRkhMRU5CUVVnc1IwRkJSeXhEUVhGRWMwTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1RVRkRka1FzVTBGQlV5eEZRVUZETEVsQlFVazdUVUZEWkN4VlFVRlZMRVZCUVVNc1NVRkJTU3hIUVVOc1FqdEpRWHBFVkN4QlFUQkVVU3hqUVRGRVRTeERRV1ZXTEZOQlFWTXNRMEV5UTB3c2FVSkJRV2xDTEVOQlFVTTdUVUZEWkN4UFFVRlBMRVZCUVVVc1NVRkJTVHROUVVOaUxGVkJRVlVzUlVGQlJTeExRVUZMTzAxQlEycENMRlZCUVZVc1JVRkJSU3hIUVVGSExFTkJRVU1zUzBGQlN5eERRVUZOTEd0Q1FVRkpMRWRCU1d4RE8wMUJha1ZVTEVGQk9FUlpMR05CT1VSRkxFTkJaVllzVTBGQlV5eERRVEpEVEN4cFFrRkJhVUlzUTBGSllpeFBRVUZQTEVOQlFVTTdVVUZEU2l4WFFVRlhMRVZCUVVVc1NVRkJTU3hIUVVOd1FqdEpRV2hGWWl4QlFXdEZVU3hqUVd4RlRTeERRV1ZXTEZOQlFWTXNRMEZ0UkV3c1QwRkJUeXhEUVVGRE8wMUJRMG9zWlVGQlpTeEZRVUZETEVsQlFVazdUVUZEY0VJc1RVRkJUU3hGUVVGRExHTkJRV003VFVGRGNrSXNUMEZCVHl4RlFVRkRMRU5CUVVNN1RVRkRWQ3hUUVVGVExFVkJRVU1zU1VGQlNTeEhRVWxxUWp0TlFURkZWQ3hCUVhWRldTeGpRWFpGUlN4RFFXVldMRk5CUVZNc1EwRnRSRXdzVDBGQlR5eERRVXRJTEVWQlFVVXNRMEZCUXp0UlFVTkRMRXRCUVVzc1JVRkJReXhIUVVGSExFZEJRMW83UlVGNlJXSXNRVUUyUlZFc1kwRTNSVTBzUTBFMFJWWXNTVUZCU1N4RFFVTkJMRXRCUVVzc1EwRkJRenRKUVVOR0xFOUJRVThzUlVGQlF5eExRVUZMTzBsQlEySXNWMEZCVnl4RlFVRkRMRTFCUVUwN1NVRkRiRUlzVTBGQlV5eEZRVUZETEVsQlFVazdTVUZEWkN4TlFVRk5MRVZCUVVNc1QwRkJUeXhIUVVOcVFqdEZRV3hHVkN4QlFXMUdVU3hqUVc1R1RTeERRVFJGVml4SlFVRkpMRU5CVDBFc1MwRkJTeXhEUVVGQkxFRkJRVUVzU1VGQlF5eERRVUZMTEUxQlFVMHNRVUZCV0R0RlFXNUdaQ3hqUVVGakxFTkJORVZXTEVsQlFVa3NRMEZSUVN4TFFVRkxMRU5CUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVVVGQlVTeEJRVUZpTzBWQmNFWmtMR05CUVdNc1EwRTBSVllzU1VGQlNTeERRVk5CTEV0QlFVc3NRMEZCUVN4QlFVRkJMRWxCUVVNc1EwRkJTeXhMUVVGTExFRkJRVlk3UlVGeVJtUXNZMEZCWXl4RFFUUkZWaXhKUVVGSkxFTkJWVUVzUzBGQlN5eERRVUZCTEVGQlFVRXNTVUZCUXl4RFFVRkxMRTlCUVU4c1FVRkJXanRGUVhSR1pDeGpRVUZqTEVOQk5FVldMRWxCUVVrc1EwRlhRU3hSUVVGUkxFTkJRVU03U1VGRFRDeFBRVUZQTEVWQlFVTXNTMEZCU3p0SlFVTmlMRTFCUVUwc1JVRkJReXhQUVVGUE8wbEJRMlFzWVVGQllTeEZRVUZETEVkQlFVYzdTVUZEYWtJc1MwRkJTeXhGUVVGRExFbEJRVWs3U1VGRFZpeFBRVUZQTEVWQlFVTXNVVUZCVVR0SlFVTm9RaXhUUVVGVExFVkJRVU1zU1VGQlNUdEpRVU5rTEUxQlFVMHNSVUZCUXl4SlFVRkpPMGxCUTFnc1RVRkJUU3hGUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCWVR0SlFVTTVRaXhWUVVGVkxFVkJRVVVzU1VGQlNTeEhRVWx1UWp0SlFYQkhWQ3hCUVdsSFdTeGpRV3BIUlN4RFFUUkZWaXhKUVVGSkxFTkJUMEVzUzBGQlN5eERRVUZCTEVGQlFVRXNTVUZCUXl4RFFVRkxMRTFCUVUwc1FVRkJXQ3hEUVdORUxHRkJRV0U3U1VGcVJ6RkNMR05CUVdNc1EwRTBSVllzU1VGQlNTeERRVkZCTEV0QlFVc3NRMEZCUVN4QlFVRkJMRWxCUVVNc1EwRkJTeXhSUVVGUkxFRkJRV0lzUTBGaFJDeGhRVUZoTzBsQmFrY3hRaXhqUVVGakxFTkJORVZXTEVsQlFVa3NRMEZUUVN4TFFVRkxMRU5CUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzUzBGQlN5eEJRVUZXTEVOQldVUXNZVUZCWVR0SlFXcEhNVUlzWTBGQll5eERRVFJGVml4SlFVRkpMRU5CVlVFc1MwRkJTeXhEUVVGQkxFRkJRVUVzU1VGQlF5eERRVUZMTEU5QlFVOHNRVUZCV2l4RFFWZEVMR0ZCUVdFN1NVRnFSekZDTEdOQlFXTXNRMEUwUlZZc1NVRkJTU3hEUVZkQkxGRkJRVkVzUVVGVlNDeGhRVUZoTEVOQlFVTTdUVUZEV0N4TFFVRkxMRVZCUVVNc1QwRkJZU3hIUVVOMFFqdEZRVzVIWWl4QlFYRkhVU3hqUVhKSFRTeERRVFJGVml4SlFVRkpMRU5CZVVKQkxGRkJRVkVzUTBGQlF6dEpRVU5NTEUxQlFVMHNSVUZCUXl4SlFVRkpPMGxCUTFnc1ZVRkJWU3hGUVVGRExFdEJRVXM3U1VGRGFFSXNWMEZCVnl4RlFVRkRMRTlCUVU4N1NVRkRia0lzVFVGQlRTeEZRVUZETEZGQlFWRXNSMEZEYkVJN1JVRXhSMVFzUVVFeVIxRXNZMEV6UjAwc1EwRTBSVllzU1VGQlNTeERRU3RDUVN4TFFVRkxMRU5CUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVlVGQlZTeEJRVUZtTEVWQlFXbENPMGxCUTI1Q0xGRkJRVkVzUlVGQlF5eFJRVUZSTzBsQlEycENMRWxCUVVrc1JVRkJReXhQUVVGUExFZEJaME5tTzBsQk4wbFVMRUZCT0VkWkxHTkJPVWRGTEVOQk5FVldMRWxCUVVrc1EwRXJRa0VzUzBGQlN5eERRVUZCTEVGQlFVRXNTVUZCUXl4RFFVRkxMRlZCUVZVc1FVRkJaaXhKUVVkQkxFdEJRVXNzUTBGQlF6dE5RVU5LTEU5QlFVOHNSVUZCUXl4TFFVRkxPMDFCUTJJc1VVRkJVU3hGUVVGRExGRkJRVkU3VFVGRGFrSXNUMEZCVHl4RlFVRkRMREpFUVVFeVJEdE5RVU51UlN4TlFVRk5MRVZCUVVNc1UwRkJVenROUVVOb1FpeE5RVUZOTEVWQlFVTXNUMEZCVHl4SFFWVnFRanROUVRkSVlpeEJRVzlJWjBJc1kwRndTRVlzUTBFMFJWWXNTVUZCU1N4RFFTdENRU3hMUVVGTExFTkJRVUVzUVVGQlFTeEpRVUZETEVOQlFVc3NWVUZCVlN4QlFVRm1MRWxCUjBFc1MwRkJTeXhCUVUxR0xGRkJRVkVzUTBGQlF6dFJRVVZPTEZOQlFWTXNSVUZCUXl4SlFVRkpPMUZCUTJRc1QwRkJUeXhGUVVGRExIbENRVUY1UWp0UlFVTnFReXhSUVVGUkxFVkJRVU1zVVVGQlVUdFJRVU5xUWl4SlFVRkpMRVZCUVVNc1EwRkJRenRSUVVOT0xFZEJRVWNzUlVGQlF5eExRVUZMTzFGQlExUXNTMEZCU3l4RlFVRkRMRTlCUVdFc1IwRkRkRUk3U1VFMVNHcENMRUZCWjBsdlFpeGpRV2hKVGl4RFFUUkZWaXhKUVVGSkxFTkJLMEpCTEV0QlFVc3NRMEZCUVN4QlFVRkJMRWxCUVVNc1EwRkJTeXhWUVVGVkxFRkJRV1lzUTBGdFFrUXNVVUZCVVN4SFFVTklMRXRCUVVzc1FVRkRSaXhSUVVGUkxFTkJRVU03VFVGRFRpeFBRVUZQTEVWQlFVTXNWMEZCVnp0TlFVTnVRaXhMUVVGTExFVklOMGhxUWl4UFFVRnBRaXhIUnpoSVVqdEpRVzVKY2tJc1FVRjNTVzlDTEdOQmVFbE9MRU5CTkVWV0xFbEJRVWtzUTBFclFrRXNTMEZCU3l4RFFVRkJMRUZCUVVFc1NVRkJReXhEUVVGTExGVkJRVlVzUVVGQlppeERRVEpDUkN4alFVRmpMRWRCUTFRc1MwRkJTeXhCUVVOR0xGRkJRVkVzUTBGQlF6dE5RVU5PTEU5QlFVOHNSVUZCUXl4NVFrRkJlVUlzUjBGRGNFTTdSVUV4U1hKQ0xFRkJLMGxKTEdOQkwwbFZMRU5CSzBsV0xHRkJRV0VzUTBGQlF6dEpRVU5XTEZWQlFWVXNSVUZCUXl4TFFVRkxMRWRCUTI1Q08wVkJha3BNTEVGQmEwcEpMR05CYkVwVkxFTkJhMHBXTEdkQ1FVRm5RaXhEUVVGRE8wbEJRMklzUzBGQlN5eEZRVUZETEVsQlFVazdTVUZEVml4VFFVRlRMRVZCUVVNc1NVRkJTVHRKUVVOa0xGRkJRVkVzUlVGQlF5eFJRVUZSTzBsQlEycENMRWRCUVVjc1JVRkJReXhIUVVGSE8wbEJRMUFzU1VGQlNTeEZRVUZETEVkQlFVYzdTVUZEVWl4VFFVRlRMRVZCUVVNc2NVSkJRWEZDTzBsQlF5OUNMRTlCUVU4c1JVRkJReXhKUVVGSkxFZEJTV1k3UlVFM1Nrd3NRVUVyU2xFc1kwRXZTazBzUVVFNFNsUXNZMEZCWXl4RFFVTllMR2RDUVVGblFpeERRVUZETzBsQlEySXNUMEZCVHl4RlFVRkRMRXRCUVVzc1IwRkRhRUk3UlVGcVMxUXNRVUZyUzFFc1kwRnNTMDBzUVVFNFNsUXNZMEZCWXl4RFFVbFlMRk5CUVZNc1EwRkJRenRKUVVOT0xFOUJRVThzUlVGQlF5eEpRVUZKTEVkQlEyWTdPMEZCUjFRc1ZVRkJWU3hEUVVGV0xGVkJRVlU3UlVGRFRpeEpRVUZKTzBsQlEwRXNUMEZCVHl4RlFVRkRMRU5CUVVNN1JVRkZZaXhGUVVGRk8wbEJRMFVzVDBGQlR5eEZRVUZETEVOQlFVTTdPMEZCUjJwQ0xGVkJRVlVzUTBGQlZpeFZRVUZWTzBWQlEwNHNTVUZCU1R0SlFVTkJMRlZCUVZVc1JVRkJReXhKUVVGSk8wbEJRMllzVDBGQlR5eEZRVUZETEVOQlFVTTdSVUZGWWl4SFFVRkhPMGxCUTBNc1ZVRkJWU3hGUVVGRExFTkJRVU03U1VGRFdpeFBRVUZQTEVWQlFVTXNRMEZCUXpzN1FVTjBUR3BDTEVGQlFVRXNWMEZCVnl4RFFVRkRPMFZCUTFJc1QwRkJUeXhGUVVGRExFbEJRVWs3UlVGRFdpeFJRVUZSTEVWQlFVTXNTMEZCU3p0RlFVTmtMRXRCUVVzc1JVRkJReXhMUVVGTE8wVkJRMWdzVDBGQlR5eEZRVUZETEVsQlFVa3NSMEZ2Um1ZN1JVRjRSa1FzUVVGTFNTeFhRVXhQTEVOQlMxQXNhVUpCUVdsQ0xFTkJRVU03U1VGRFpDeFZRVUZWTEVWQlFVTXNjVUpCUVcxQ08wbEJRemxDTEV0QlFVc3NSVUZCUXl4SlFVRkpPMGxCUTFZc1ZVRkJWU3hGUVVGRExFMUJRVTA3U1VGRGFrSXNVMEZCVXl4RlFVRkRMRWxCUVVrN1NVRkRaQ3hQUVVGUExFVkJRVU1zVTBGQlV6dEpRVU5xUWl4WFFVRlhMRVZCUVVNc1IwRkJSenRKUVVObUxGRkJRVkVzUlVGQlF5eFJRVUZSTzBsQlEycENMR0ZCUVdFc1JVRkJReXhIUVVGSExFZEJVWEJDTzBsQmNrSk1MRUZCWTFFc1YwRmtSeXhEUVV0UUxHbENRVUZwUWl4QlFWTmFMRkZCUVZFc1EwRkJRenROUVVOT0xFOUJRVThzUlVGQlF5eEZRVUZGTzAxQlExWXNTMEZCU3l4RlFVRkRMRU5CUVVNN1RVRkRVQ3hOUVVGTkxFVkJRVU1zUTBGQlF6dE5RVU5TTEZGQlFWRXNSVUZCUXl4UlFVRlJPMDFCUTJwQ0xFOUJRVThzUlVGQlF5eExRVUZMTEVkQlEyaENPMFZCY0VKVUxFRkJkMEpSTEZkQmVFSkhMRUZCYzBKT0xHVkJRV1VzUTBGRldpeHBRa0ZCYVVJc1JVRjRRbnBDTEZkQlFWY3NRVUYxUWs0c2EwSkJRV3RDTEVOQlEyWXNhVUpCUVdsQ0xFTkJRVU03U1VGRFpDeEpRVUZKTEVWQlFVTXNRMEZCUXp0SlFVTk9MRk5CUVZNc1JVRkJReXhuUWtGQlowSXNSMEZQTjBJN1NVRnFRMVFzUVVFeVFsa3NWMEV6UWtRc1FVRnpRazRzWlVGQlpTeERRVVZhTEdsQ1FVRnBRaXhCUVVkYUxGRkJRVkVzUlVFelFuSkNMRmRCUVZjc1FVRjFRazRzYTBKQlFXdENMRU5CUTJZc2FVSkJRV2xDTEVGQlIxb3NVVUZCVVN4RFFVRkRPMDFCUTA0c1NVRkJTU3hGUVVGRExFZEJRVWM3VFVGRFVpeFRRVUZUTEVWQlFVTXNaMEpCUVdkQ08wMUJRekZDTEZkQlFWY3NSVUZCUXl4eFFrRkJjVUk3VFVGRGFrTXNXVUZCV1N4RlFVRkRMSEZDUVVGeFFpeEhRVU55UXp0RlFXaERZaXhCUVc5RFVTeFhRWEJEUnl4QlFXMURUaXhsUVVGbExFTkJRMW9zYVVKQlFXbENMRU5CUVVNN1NVRkRaQ3hOUVVGTkxFVkJRVU1zU1VGQlNTeEhRVXRrTzBsQk1VTlVMRUZCYzBOWkxGZEJkRU5FTEVGQmJVTk9MR1ZCUVdVc1EwRkRXaXhwUWtGQmFVSXNRVUZGV2l4UlFVRlJMRU5CUVVNN1RVRkRUaXhIUVVGSExFVkJRVU1zU1VGQlNUdE5RVU5TTEZWQlFWVXNSVUZCUXl4SFFVRkhMRU5CUVVNc1MwRkJTeXhEUVVGRExIRkNRVUZ0UWl4SFFVTXpRenRGUVhwRFlpeEJRVFpEVVN4WFFUZERSeXhCUVRSRFRpeHJRa0ZCYTBJc1EwRkRaaXhwUWtGQmFVSXNRMEZCUXp0SlFVTmtMRWRCUVVjc1JVRkJReXhKUVVGSkxFZEJTMWc3U1VGdVJGUXNRVUVyUTFrc1YwRXZRMFFzUVVFMFEwNHNhMEpCUVd0Q0xFTkJRMllzYVVKQlFXbENMRUZCUlZvc1VVRkJVU3hEUVVGRE8wMUJRMDRzVFVGQlRTeEZRVUZETEVsQlFVazdUVUZEV0N4aFFVRmhMRVZCUVVNc1IwRkJSeXhEUVVGRExFdEJRVXNzUTBGQlF5eHhRa0ZCYlVJc1IwRkRPVU03UlVGc1JHSXNRVUYxUkZFc1YwRjJSRWNzUVVGeFJFNHNaMEpCUVdkQ0xFTkJSV0lzYVVKQlFXbENMRVZCZGtSNlFpeFhRVUZYTEVGQmMwUk9MR2xDUVVGcFFpeERRVU5rTEdsQ1FVRnBRaXhEUVVGRE8wbEJRMlFzUjBGQlJ5eEZRVUZETEVOQlFVTTdTVUZEVEN4VFFVRlRMRVZCUVVNc1owSkJRV2RDTEVkQlR6ZENPMGxCYUVWVUxFRkJNRVJaTEZkQk1VUkVMRUZCY1VST0xHZENRVUZuUWl4RFFVVmlMR2xDUVVGcFFpeEJRVWRhTEZGQlFWRXNSVUV4UkhKQ0xGZEJRVmNzUVVGelJFNHNhVUpCUVdsQ0xFTkJRMlFzYVVKQlFXbENMRUZCUjFvc1VVRkJVU3hEUVVGRE8wMUJRMDRzUjBGQlJ5eEZRVUZETEVkQlFVYzdUVUZEVUN4VFFVRlRMRVZCUVVNc1owSkJRV2RDTzAxQlF6RkNMRlZCUVZVc1JVRkJReXh4UWtGQmNVSTdUVUZEYUVNc1lVRkJZU3hGUVVGRExIRkNRVUZ4UWl4SFFVTjBRenRGUVM5RVlpeEJRVzFGVVN4WFFXNUZSeXhCUVd0RlRpeG5Ra0ZCWjBJc1EwRkRZaXhwUWtGQmFVSXNRMEZCUXp0SlFVTmtMRXRCUVVzc1JVRkJReXhKUVVGSkxFZEJTMkk3U1VGNlJWUXNRVUZ4UlZrc1YwRnlSVVFzUVVGclJVNHNaMEpCUVdkQ0xFTkJRMklzYVVKQlFXbENMRUZCUlZvc1VVRkJVU3hEUVVGRE8wMUJRMDRzU1VGQlNTeEZRVUZETEVsQlFVazdUVUZEVkN4WFFVRlhMRVZCUVVNc1IwRkJSeXhEUVVGRExFdEJRVXNzUTBGQlF5eHhRa0ZCYlVJc1IwRkROVU03UlVGNFJXSXNRVUUwUlZFc1YwRTFSVWNzUVVFeVJVNHNhVUpCUVdsQ0xFTkJRMlFzYVVKQlFXbENMRU5CUVVNN1NVRkRaQ3hKUVVGSkxFVkJRVU1zU1VGQlNTeEhRVXRhTzBsQmJFWlVMRUZCT0VWWkxGZEJPVVZFTEVGQk1rVk9MR2xDUVVGcFFpeERRVU5rTEdsQ1FVRnBRaXhCUVVWYUxGRkJRVkVzUTBGQlF6dE5RVU5PTEV0QlFVc3NSVUZCUXl4SlFVRkpPMDFCUTFZc1dVRkJXU3hGUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNjVUpCUVcxQ0xFZEJRemRETzBWQmFrWmlMRUZCYjBaSkxGZEJjRVpQTEVGQmIwWk9MR3RDUVVGclFpeERRVUZETzBsQlEyaENMRTlCUVU4c1JVRkJReXhMUVVGTE8wbEJRMklzVTBGQlV5eEZRVUZETEhGQ1FVRnhRaXhIUVVOc1F6czdRVUZGVEN4VlFVRlZMRU5CUVZZc1RVRkJWVHRGUVVOT0xFbEJRVWs3U1VGRFFTeFBRVUZQTEVWQlFVTXNRMEZCUXp0RlFVVmlMRWRCUVVjN1NVRkRReXhQUVVGUExFVkJRVU1zUTBGQlF6czdRVU01Um1wQ0xFRkJRVUVzV1VGQldTeERRVUZETzBWQlExUXNVVUZCVVN4RlFVRkZMRkZCUVZFc1IwRnZSM0pDTzBWQmNrZEVMRUZCUlVrc1dVRkdVU3hEUVVWUUxFRkJRVUVzWVVGQlF5eERRVUZqTEU5QlFVOHNRVUZCY2tJc1JVRkJkVUk3U1VGRGNrSXNWVUZCVlN4RlFVRkZMRXRCUVVzc1IwRkxjRUk3U1VGU1RDeEJRVWxSTEZsQlNra3NRMEZGVUN4QlFVRkJMR0ZCUVVNc1EwRkJZeXhQUVVGUExFRkJRWEpDTEVWQlJVVXNhVUpCUVdsQ0xFTkJRVU03VFVGRFpDeExRVUZMTEVWQlFVVXNRMEZCUXp0TlFVTlNMRWxCUVVrc1JVRkJSU3hKUVVGSkxFZEJRMkk3UlVGUVZDeEJRVk5KTEZsQlZGRXNRMEZUVWl4cFFrRkJhVUlzUTBGQlF6dEpRVU5rTEZWQlFWVXNSVUZCUlN4TlFVRk5PMGxCUTJ4Q0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBsQlEyeENMRTFCUVUwc1JVRkJSU3hKUVVGSk8wbEJRMW9zU1VGQlNTeEZRVUZGTEVOQlFVTTdTVUZEVUN4aFFVRmhMRVZCUVVVc1EwRkJRenRKUVVOb1FpeFZRVUZWTEVWQlFVVXNUMEZCWVR0SlFVTjZRaXhMUVVGTExFVkJRVVVzU1VGQlNUdEpRVU5ZTEU5QlFVOHNSVUZCUlN4SFFVRkhPMGxCUTFvc1RVRkJUU3hGUVVGRkxFTkJRVU03U1VGRFZDeFBRVUZQTEVWQlFVVXNUVUZCVFR0SlFVTm1MR1ZCUVdVc1JVRkJSU3hKUVVGSkxFZEJiVU40UWp0SlFYWkVUQ3hCUVhGQ1VTeFpRWEpDU1N4RFFWTlNMR2xDUVVGcFFpeEhRVmxZTEVWQlFVVXNRMEZCUXp0TlFVTkVMRTlCUVU4c1JVRkJSU3hEUVVGRE8wMUJRMVlzVFVGQlRTeEZRVUZGTEVOQlFVTXNSMEVyUWxvN1RVRjBSRlFzUVVGM1Fsa3NXVUY0UWtFc1EwRlRVaXhwUWtGQmFVSXNSMEZaV0N4RlFVRkZMRWRCUjBVc1EwRkJRenROUVhoQ1ppeFpRVUZaTEVOQlUxSXNhVUpCUVdsQ0xFZEJXVmdzUlVGQlJTeEhRVWxGTEVsQlFVazdUVUY2UW14Q0xGbEJRVmtzUTBGVFVpeHBRa0ZCYVVJc1IwRlpXQ3hGUVVGRkxFZEJTMFVzVFVGQlRTeERRVUZETzFGQlEwd3NUMEZCVHl4RlFVRkZMRXRCUVVzN1VVRkRaQ3hUUVVGVExFVkJRVVVzU1VGQlNUdFJRVU5tTEU5QlFVOHNSVUZCUlN4UlFVRlJPMUZCUTJwQ0xGZEJRVmNzUlVGQlJTeE5RVUZOTzFGQlEyNUNMR1ZCUVdVc1JVRkJSU3hKUVVGSk8xRkJRM0pDTEZWQlFWVXNSVUZCUlN4NVFrRkJlVUk3VVVGRGNrTXNUVUZCVFN4RlFVRkZMRU5CUVVNN1VVRkRWQ3hWUVVGVkxFVkJRVVVzVjBGQlZ6dFJRVU4yUWl4TFFVRkxMRVZCUVVVc1NVRkJTVHRSUVVOWUxGVkJRVlVzUlVGQlJTeFBRVUZQTEVkQlMzUkNPMUZCZWtOaUxFRkJjVU5uUWl4WlFYSkRTaXhEUVZOU0xHbENRVUZwUWl4SFFWbFlMRVZCUVVVc1IwRkhSU3hEUVVGRExFTkJZVVVzUVVGQlFTeFJRVUZETEVGQlFVRTdVVUZ5UTJ4Q0xGbEJRVmtzUTBGVFVpeHBRa0ZCYVVJc1IwRlpXQ3hGUVVGRkxFZEJTVVVzU1VGQlNTeERRVmxFTEVGQlFVRXNVVUZCUXl4QlFVRkJPMUZCY2tOc1FpeFpRVUZaTEVOQlUxSXNhVUpCUVdsQ0xFZEJXVmdzUlVGQlJTeEhRVXRGTEUxQlFVMHNRMEZYU0N4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVVGVk8xVkJRMUlzVDBGQlR5eEZRVUZGTEVWQlFVVTdWVUZEV0N4TlFVRk5MRVZCUVVVc1QwRkJUeXhIUVVOc1FqdE5RWGhEYWtJc1FVRXdRMWtzV1VFeFEwRXNRMEZUVWl4cFFrRkJhVUlzUjBGWldDeEZRVUZGTEVkQmNVSkZMRU5CUVVNN1RVRXhRMllzV1VGQldTeERRVk5TTEdsQ1FVRnBRaXhIUVZsWUxFVkJRVVVzUjBGelFrVXNUVUZCVFN4RFFVRkRPMUZCUTB3c1MwRkJTeXhGUVVGRkxFOUJRVThzUjBGVGFrSTdVVUZ5UkdJc1FVRTJRMmRDTEZsQk4wTktMRU5CVTFJc2FVSkJRV2xDTEVkQldWZ3NSVUZCUlN4SFFYRkNSU3hEUVVGRExFRkJSMFVzVFVGQlRTeEJRVUZCTEVsQlFVc3NSVUZCUVN4QlFVRkJMRkZCUVVNc1FVRkJRVHRSUVRkRE4wSXNXVUZCV1N4RFFWTlNMR2xDUVVGcFFpeEhRVmxZTEVWQlFVVXNSMEZ6UWtVc1RVRkJUU3hCUVVWSUxFMUJRVTBzUVVGQlFTeEpRVUZMTEVWQlFVRXNRVUZCUVN4UlFVRkRMRUZCUVVFc1IwRkJWenRWUVVOd1FpeFZRVUZWTEVWQlFVVXNlVUpCUVc5Q0xFZEJRMjVETzFGQkwwTnFRaXhCUVdkRVowSXNXVUZvUkVvc1EwRlRVaXhwUWtGQmFVSXNSMEZaV0N4RlFVRkZMRWRCY1VKRkxFTkJRVU1zUTBGTlF5eExRVUZMTzFGQmFFUnlRaXhaUVVGWkxFTkJVMUlzYVVKQlFXbENMRWRCV1Znc1JVRkJSU3hIUVhOQ1JTeE5RVUZOTEVOQlMwb3NTMEZCU3l4RFFVRkRPMVZCUTBZc1QwRkJUeXhGUVVGRkxFdEJRVXM3VlVGRFpDeFRRVUZUTEVWQlFVVXNZVUZCWVR0VlFVTjRRaXhMUVVGTExFVkJRVVVzVDBGQllTeEhRVU4yUWp0RlFYQkVha0lzUVVGNVJGRXNXVUY2UkVrc1FVRjNSRkFzYlVKQlFXMUNMRU5CUTJoQ0xHbENRVUZwUWl4RFFVRkRPMGxCUTJRc1ZVRkJWU3hGUVVGRkxFOUJRVTg3U1VGRGJrSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1NVRkRZaXhIUVVGSExFVkJRVVVzU1VGQlNUdEpRVU5VTEUxQlFVMHNSVUZCUlN4SlFVRkpPMGxCUTFvc1UwRkJVeXhGUVVGRkxESkNRVUV5UWl4SFFVTjZRenRGUVM5RVZDeEJRV2xGV1N4WlFXcEZRU3hCUVhkRVVDeHRRa0ZCYlVJc1FVRlJaaXhuUWtGQlowSXNRMEZEWWl4cFFrRkJhVUlzUTBGQlF6dEpRVU5rTEVkQlFVY3NSVUZCUlN4SlFVRkpPMGxCUTFRc1RVRkJUU3hGUVVGRkxFbEJRVWtzUjBGRFpqdEZRWEJGWWl4QlFYTkZVU3haUVhSRlNTeEJRWGRFVUN4dFFrRkJiVUlzUTBGamFFSXNiVUpCUVcxQ08wVkJkRVV6UWl4WlFVRlpMRUZCZDBSUUxHMUNRVUZ0UWl4RFFXVm9RaXh0UWtGQmJVSXNRVUZCUVN4TlFVRk5MRU5CUVVNN1NVRkRkRUlzVlVGQlZTeEZRVUZGTEU5QlFXRTdTVUZEZWtJc1MwRkJTeXhGUVVGRkxFbEJRVWtzUjBGRFpEdEZRVEZGVkN4QlFUUkZTU3haUVRWRlVTeERRVFJGVWl4VFFVRlRMRU5CUVVNN1NVRkRUaXhWUVVGVkxFVkJRVVVzU1VGQlNUdEpRVU5vUWl4UFFVRlBMRVZCUVVVc1MwRkJTenRKUVVOa0xGTkJRVk1zUlVGQlJTeEpRVUZKTEVkQlNXeENPMGxCYmtaTUxFRkJaMFpSTEZsQmFFWkpMRU5CTkVWU0xGTkJRVk1zUTBGSlRDeExRVUZMTEVOQlFVTTdUVUZEUml4WFFVRlhMRVZCUVVVc1RVRkJUU3hIUVVOMFFqdEZRV3hHVkN4QlFXOUdTU3haUVhCR1VTeERRVzlHVWl4elFrRkJjMElzUTBGQlF6dEpRVU51UWl4UFFVRlBMRVZCUVVVc1dVRkJXVHRKUVVOeVFpeFJRVUZSTEVWQlFVVXNVVUZCVVR0SlFVTnNRaXhMUVVGTExFVkJRVVVzUjBGQlJ6dEpRVU5XTEVkQlFVY3NSVUZCUlN4RFFVRkRPMGxCUTA0c1UwRkJVeXhGUVVGRkxFbEJRVWs3U1VGRFppeFBRVUZQTEVWQlFVVXNTVUZCU1R0SlFVTmlMRk5CUVZNc1JVRkJSU3hIUVVGSE8wbEJRMlFzVjBGQlZ5eEZRVUZGTEVkQlFVYzdTVUZEYUVJc1ZVRkJWU3hGUVVGRkxFMUJRVTA3U1VGRGJFSXNWMEZCVnl4RlFVRkZMRU5CUVVNN1NVRkRaQ3hUUVVGVExFVkJRVVVzZFVKQlFYVkNPMGxCUTJ4RExGVkJRVlVzUlVGQlJTeFBRVUZQTzBsQlEyNUNMRXRCUVVzc1JVRkJSU3hKUVVGSk8wbEJRMWdzWVVGQllTeEZRVUZGTEV0QlFVczdTVUZEY0VJc1QwRkJUeXhGUVVGRkxFTkJRVU1zUjBGRFlqczdRVUZIVEN4VlFVRlZMRU5CUVZZc1dVRkJWVHRGUVVOT0xFbEJRVWs3U1VGRFFTeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVVmtMRWRCUVVjN1NVRkRReXhQUVVGUExFVkJRVVVzUTBGQlF6czdRVWczUkZJc1FVRkJUQ3hQUVVGWkxFTkpMME5VTzBWQlEwb3NWVUZCVlN4RlFVRkRMRWRCUVVjN1JVRkRaQ3hOUVVGTkxFVkJRVU1zU1VGQlNUdEZRVU5ZTEdGQlFXRXNSVUZCUXl4SFFVRkhPMFZCUTJwQ0xFdEJRVXNzUlU1SVJ5eFBRVUZoTzBWTlNYSkNMRkZCUVZFc1JVRkJReXhSUVVGUk8wVkJRMnBDTEUxQlFVMHNSVTVMUlN4SlFVRkpPMFZOU2xvc1RVRkJUU3hGUVVGRExFTkJRVU03UlVGRFVpeFRRVUZUTEVWQlFVTXNTVUZCU1R0RlFVTmtMRTlCUVU4c1JVRkJReXhOUVVGTk8wVkJRMlFzVDBGQlR5eEZRVUZETEZsQlFWazdSVUZEY0VJc1YwRkJWeXhGVGtkS0xGRkJRVkVzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRlZCUVZVN1JVMUdOME1zVTBGQlV5eEZRVUZETEVsQlFVazdSVUZEWkN4UlFVRlJMRVZCUVVNc1RVRkJUVHRGUVVObUxGZEJRVmNzUlVGQlF5eFZRVUZWTzBWQlEzUkNMRlZCUVZVc1JVRkJReXhWUVVGVkxFTkJRVU1zU1VGQlJ5eERRVUZETERCQ1FVRnpRaXhGUVVGRkxHZENRVUZuUWl4RFFVRkRMRWxCUVVjc1EwRkJReXcwUWtGQmRVSXNSVUZCUlN4TFFVRkxMRU5CUVVNc1NVRkJSeXhEUVVGRExEUkNRVUYxUWp0RlFVTnFTU3hQUVVGUExFVkJRVU1zU1VGQlNUdEZRVU5hTEUxQlFVMHNSVUZCUXl4UFFVRlBPMFZCUTJRc1pVRkJaU3hGUVVGRExFbEJRVWs3UlVGRGNFSXNWVUZCVlN4RlFVRkRMRTFCUVUwN1JVRkRha0lzVjBGQlZ5eEZUbFJJTEVsQlFVazdSVTFWV2l4alFVRmpMRVZCUVVNc1RVRkJUU3hIUVd0RmVFSTdSVUYyUmtRc1FVRnpRa2tzVDBGMFFrY3NRVUZ6UWtZc1RVRkJUU3hEUVVGRE8wbEJRMG9zVlVGQlZTeEZRVUZETEhkQ1FVRnRRanRKUVVNNVFpeGxRVUZsTEVWQlFVTXNTVUZCU1N4SFFVTjJRanRGUVhwQ1RDeEJRVEJDU1N4UFFURkNSeXhCUVRCQ1JpeE5RVUZOTEVGQlFVRXNTVUZCU3l4RFFVRkJMRTlCUVU4c1JVRkJSVHRKUVVOcVFpeFZRVUZWTEVWQlFVTXNkMEpCUVcxQ0xFZEJRMnBETzBWQk5VSk1MRUZCTmtKSkxFOUJOMEpITEVGQk5rSkdMRTlCUVU4c1EwRkJRenRKUVVOTUxGVkJRVlVzUlVGQlF5eDNRa0ZCYlVJc1IwRkRha003UlVFdlFrd3NRVUZwUTBrc1QwRnFRMGNzUVVGcFEwWXNXVUZCV1N4RFFVRkRPMGxCUTFZc1MwRkJTeXhGVGpkQ1JDeFBRVUZwUWl4SFRUaENlRUk3UlVGdVEwd3NRVUZ4UTBrc1QwRnlRMGNzUVVGeFEwWXNXVUZCV1N4RFFVRkRPMGxCUTFZc1lVRkJZU3hGUVVGRExFZEJRVWM3U1VGRGFrSXNTMEZCU3l4RlRqVkNSQ3hKUVVGSk8wbE5Oa0pTTEZOQlFWTXNSVTQzUWt3c1NVRkJTVHRKVFRoQ1VpeFBRVUZQTEVWQlFVTXNRMEZCUXp0SlFVTlVMRk5CUVZNc1JVRkJReXhKUVVGSkxFZEJTMnBDTzBsQkwwTk1MRUZCTWtOUkxFOUJNME5FTEVGQmNVTkdMRmxCUVZrc1EwRk5WQ3hEUVVGRExFTkJRVU03VFVGRFJTeFRRVUZUTEVWQlFVTXNUMEZCVHp0TlFVTnFRaXhQUVVGUExFVkJRVU1zUzBGQlN5eEhRVU5vUWp0RlFUbERWQ3hCUVdsRVNTeFBRV3BFUnl4QlFXbEVSaXhsUVVGbExFTkJRVU03U1VGRFlpeFZRVUZWTEVWT04wTk9MRTlCUVdsQ08wbE5PRU55UWl4TFFVRkxMRVZCUVVNc1NVRkJTU3hIUVZWaU8wbEJOMFJNTEVGQmIwUlJMRTlCY0VSRUxFRkJhVVJHTEdWQlFXVXNRVUZIV0N4TlFVRk5MRU5CUVVNN1RVRkRTaXhWUVVGVkxFVkJRVU1zVDBGQmMwSXNSMEZEY0VNN1NVRjBSRlFzUVVGMVJGRXNUMEYyUkVRc1FVRnBSRVlzWlVGQlpTeEJRVTFZTEUxQlFVMHNRVUZCUVN4SlFVRkxMRU5CTjBKS0xFOUJRVThzUlVFMlFrMDdUVUZEYWtJc1ZVRkJWU3hGUVVGRExFOUJRWE5DTEVkQlEzQkRPMGxCZWtSVUxFRkJNRVJSTEU5Qk1VUkVMRUZCYVVSR0xHVkJRV1VzUVVGVFdDeFBRVUZQTEVOQlFVTTdUVUZEVEN4VlFVRlZMRVZCUVVNc1QwRkJjMElzUjBGRGNFTTdSVUUxUkZRc1FVRXJSRWtzVDBFdlJFY3NRVUVyUkVZc1lVRkJZU3hEUVVGRE8wbEJRMWdzVlVGQlZTeEZRVUZETEVsQlFVa3NSMEZWYkVJN1NVRXhSVXdzUVVGcFJWRXNUMEZxUlVRc1FVRXJSRVlzWVVGQllTeEJRVVZVTEUxQlFVMHNRMEZCUXp0TlFVTktMRlZCUVZVc1JVRkJReXgzUWtGQmJVSXNSMEZEYWtNN1NVRnVSVlFzUVVGdlJWRXNUMEZ3UlVRc1FVRXJSRVlzWVVGQllTeEJRVXRVTEUxQlFVMHNRVUZCUVN4SlFVRkxMRU5CTVVOS0xFOUJRVThzUlVFd1EwMDdUVUZEYWtJc1ZVRkJWU3hGUVVGRExIZENRVUZ0UWl4SFFVTnFRenRKUVhSRlZDeEJRWFZGVVN4UFFYWkZSQ3hCUVN0RVJpeGhRVUZoTEVGQlVWUXNUMEZCVHl4RFFVRkRPMDFCUTB3c1ZVRkJWU3hGUVVGRExIZENRVUZ0UWl4SFFVTnFRenRGUVhwRlZDeEJRVFJGU1N4UFFUVkZSeXhEUVRSRlNDeERRVUZETEVOQlFVTTdTVUZEUlN4alFVRmpMRVZCUVVNc1RVRkJUVHRKUVVOeVFpeFRRVUZUTEVWQlFVTXNTVUZCU1N4SFFVTnFRanRGUVM5RlRDeEJRV2xHU1N4UFFXcEdSeXhCUVdsR1JpeFRRVUZUTEVOQlFVTTdTVUZEVUN4UFFVRlBMRVZCUVVNc1IwRkJSeXhIUVVOa08wVkJRMFFzUVVGQlFTeHRRa0ZCYlVJc1IwRndSblpDTEU5QlFVOHNRMEZ2Um5GQ08wbEJRM0JDTEdGQlFXRXNSVUZCUlN4WFFVRlhMRWRCUXpkQ096dEJRVWRNTEVGQlFVRXNWVUZCVlN4RlEyMURWaXhSUVVGUkxFTkJORVpLTEdGQlFXRXNRMEYxUTFRc1NVRkJTU3hEUVcxQ1FTeE5RVUZOTEVGQlFVRXNTVUZCU3l4RlFVRkJMRUZCUVVFc1VVRkJReXhCUVVGQkxFZEVla3hpTzBWQlExQXNUVUZCVFN4RlFVRkRMRWxCUVVrN1JVRkRXQ3hMUVVGTExFVk9NVVpITEU5QlFXRTdSVTB5Um5KQ0xGZEJRVmNzUlU0NVJVb3NVVUZCVVN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzVlVGQlZUdEZUU3RGTjBNc1lVRkJZU3hGUVVGRExFZEJRVWM3UlVGRGFrSXNUVUZCVFN4RlRtNUdSU3hKUVVGSk8wVk5iMFphTEU5QlFVOHNSVUZCUXl4cFFrRkJhVUk3UlVGRGVrSXNVMEZCVXl4RlRuUkdSeXhKUVVGSk8wVk5kVVpvUWl4VlFVRlZMRVZCUVVNc1NVRkJTVHRGUVVObUxFMUJRVTBzUlVGQlF5eFBRVUZQTzBWQlEyUXNaMEpCUVdkQ0xFVkJRVU1zVlVGQllUdEZRVU01UWl4VlFVRlZMRVZCUVVNc1owSkJRV2RDTEVOQlFVTXNTVUZCUnl4RFFVRkRMRFJDUVVGMVFpeEZRVUZGTEV0QlFVc3NRMEZCUXl4SlFVRkhMRU5CUVVNc05FSkJRWFZDTzBWQlF6RkdMR2RDUVVGblFpeEZRVU5hTEdsRVFVRnBSQ3hGUVVOcVJDeHJSRUZCYTBRN1JVRkRkRVFzYlVKQlFXMUNMRVZCUTJZc2FVSkJRV2xDTEVOQlFVTXNSMEZCUnl4RlFVTnlRaXhwUWtGQmFVSXNRMEZCUXl4SFFVRkhPMFZCUTNwQ0xHVkJRV1VzUlVGRFdDeG5Ra0ZEVHp0RlFVTllMR2xDUVVGcFFpeEZRVUZGTEZOQlFWTTdSVUZETlVJc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeGpRVUZqTEVWQlFVVXNUVUZCVFN4SFFWRjZRanRGUVM5Q1JDeEJRWGRDU1N4VlFYaENUU3hCUVhkQ1RDeE5RVUZOTEVWRFYxZ3NVVUZCVVN4RFFUUkdTaXhoUVVGaExFTkJkVU5VTEVsQlFVa3NRMEZ0UWtFc1RVRkJUU3hCUkdwTFlpeE5RVUZOTEVGRGFVdFBMRWxCUVVzc1JVRkJRU3hCUVVGQkxGRkJRVU1zUVVGQlFTeEhSR3BMV2p0SlFVTktMR2RDUVVGblFpeEZRVUZETEU5QlFXRXNSMEZEYWtNN1JVRXhRa3dzUVVFeVFra3NWVUV6UWswc1FVRXlRa3dzVFVGQlRTeEJRVUZCTEVsQlFVc3NRMEV4UmtFc1QwRkJUeXhIUTJ0SGRrSXNVVUZCVVN4RFFUUkdTaXhoUVVGaExFTkJkVU5VTEVsQlFVa3NRMEZ0UWtFc1RVRkJUU3hCUkRsS1lpeE5RVUZOTEVGQlFVRXNTVUZCU3l4RFFURkdRU3hQUVVGUExFTkRkMUJNTEVsQlFVc3NSVUZCUVN4QlFVRkJMRkZCUVVNc1FVRkJRU3hIUkRsS1F6dEpRVU5xUWl4UFFVRlBMRVZCUVVNc1NVRkJTVHRKUVVOYUxHZENRVUZuUWl4RlFVRkRMRTlCUVdFc1IwRkRha003TzBGQlIwd3NRVUZCUVN4WlFVRlpMRU5CUVVNN1JVRkRWQ3hQUVVGUExFVkJRVU1zUzBGQlN6dEZRVU5pTEV0QlFVc3NSVUZCUXl4SlFVRkpPMFZCUTFZc1RVRkJUU3hGUVVGRExFbEJRVWs3UlVGRFdDeHBRa0ZCYVVJc1JVRkJReXhUUVVGVE8wVkJRek5DTEcxQ1FVRnRRaXhGUVVGRExFOUJRVTg3UlVGRE0wSXNaVUZCWlN4RlFVRkRMRTlCUVU4c1IwRlZNVUk3UlVGVVJ5eEJRVUZCTEV0QlFVc3NRMEZCUXl4alFVRmpMRU5CVUhoQ0xGbEJRVmtzUTBGUFpUdEpRVU51UWl4TFFVRkxMRVZCUVVNc1IwRkJSenRKUVVOVUxFMUJRVTBzUlVGQlF5eERRVUZETzBsQlExSXNZMEZCWXl4RlFVRkRMRWxCUVVrN1NVRkRia0lzVFVGQlRTeEZRVUZETEZWQlFWVTdTVUZEYWtJc1RVRkJUU3hGUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCWVR0SlFVTTVRaXhsUVVGbExFVkJRVU1zUjBGQlJ6dEpRVU51UWl4aFFVRmhMRVZCUVVNc1IwRkJSeXhIUVVOd1FqczdRVUZIVEN4QlFVRkJMR2RDUVVGblFpeEZTRFZKYUVJc1kwRkJZeXhEUVd0S1ZpeG5Ra0ZCWjBJc1IwRlJWaXhKUVVGSkxFTkhaRWM3UlVGRFppeFBRVUZQTEVWQlFVTXNXVUZCV1R0RlFVTndRaXhSUVVGUkxFVkJRVU1zVVVGQlVUdEZRVU5xUWl4VFFVRlRMRVZCUVVNc1IwRkJSenRGUVVOaUxFdEJRVXNzUlVGQlF5eFBRVUZQTzBWQlEySXNUVUZCVFN4RlFVRkRMRTlCUVU4N1JVRkRaQ3hOUVVGTkxFVkJRVU1zWjBKQlFXZENPMFZCUTNaQ0xGTkJRVk1zUlVGQlF5eGpRVUZqTzBWQlEzaENMRk5CUVZNc1JVRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4dlEwRkJiME1zUjBGM1FuaEZPMFZCYUVORUxFRkJVMFVzWjBKQlZHTXNRVUZUWWl4UlFVRlJMRVZJY2twWUxHTkJRV01zUTBGclNsWXNaMEpCUVdkQ0xFZEJVVllzU1VGQlNTeEJSMHhZTEZGQlFWRXNSVUZVV0N4blFrRkJaMElzUVVGVllpeFBRVUZQTEVWSWRFcFdMR05CUVdNc1EwRnJTbFlzWjBKQlFXZENMRWRCVVZZc1NVRkJTU3hCUjBwWUxFOUJRVThzUTBGQlF6dEpRVU5RTEU5QlFVOHNSVUZCUXl4RlFVRkZPMGxCUTFZc1QwRkJUeXhGUVVGRExFdEJRVXM3U1VGRFlpeFZRVUZWTEVWQlFVTXNXVUZCV1R0SlFVTjJRaXhoUVVGaExFVkJRVU1zUjBGQlJ6dEpRVU5xUWl4UlFVRlJMRVZCUVVNc1VVRkJVVHRKUVVOcVFpeEpRVUZKTEVWQlFVTXNSMEZCUnl4SFFVTlVPMFZCYWtKSUxFRkJhMEpGTEdkQ1FXeENZeXhCUVZOaUxGRkJRVkVzUlVoeVNsZ3NZMEZCWXl4RFFXdEtWaXhuUWtGQlowSXNSMEZSVml4SlFVRkpMRUZIVEZnc1VVRkJVU3hEUVZORE8wbEJRMUlzUzBGQlN5eEZRVUZETEVkQlFVYzdTVUZEVkN4TlFVRk5MRVZCUVVNc1IwRkJSenRKUVVOV0xGZEJRVmNzUlVGQlF5eE5RVUZOTzBsQlEyeENMRTFCUVUwc1JVRkJReXhQUVVGUE8wbEJRMlFzVTBGQlV5eEZRVUZETEd0SFFVRnJSeXhIUVVNM1J6dEZRWGhDU0N4QlFYbENSU3huUWtGNlFtTXNRVUZWWWl4UFFVRlBMRVZJZEVwV0xHTkJRV01zUTBGclNsWXNaMEpCUVdkQ0xFZEJVVllzU1VGQlNTeEJSMHBZTEU5QlFVOHNRMEZsUXp0SlFVTlFMRXRCUVVzc1JVRkJReXhQUVVGUE8wbEJRMklzVFVGQlRTeEZRVUZETEU5QlFVODdTVUZEWkN4WFFVRlhMRVZCUVVNc1UwRkJVenRKUVVOeVFpeE5RVUZOTEVWQlFVTXNRMEZCUXp0SlFVTlNMRk5CUVZNc1JVRkJReXgzUjBGQmQwY3NSMEZEYmtnN08wRkJSVWdzVlVGQlZTeERRVUZXTEcxQ1FVRlZPMFZCUTFJc1JVRkJSVHRKUVVOQkxFMUJRVTBzUlVGQlF5eFBRVUZQTzBsQlEyUXNZVUZCWVN4RlFVRkRMREpDUVVFeVFqdEpRVU42UXl4VFFVRlRMRVZCUVVNc1UwRkJVenRGUVVWeVFpeEhRVUZITzBsQlEwUXNUVUZCVFN4RlFVRkRMRWRCUVVjN1NVRkRWaXhoUVVGaExFVkJRVU1zUjBGQlJ6dEpRVU5xUWl4VFFVRlRMRVZCUVVNc1UwRkJVenRGUVVWeVFpeEpRVUZKTzBsQlEwWXNUVUZCVFN4RlFVRkRMRWRCUVVjN1NVRkRWaXhoUVVGaExFVkJRVU1zUjBGQlJ6dEpRVU5xUWl4VFFVRlRMRVZCUVVNc1UwRkJVenM3UVVGSGRrSXNWVUZCVlN4RFFVRldMSE5DUVVGVk8wVkJRMUlzUlVGQlJUdEpRVU5CTEUxQlFVMHNSVUZCUXl4SFFVRkhPMGxCUTFZc1lVRkJZU3hGUVVGRExESkNRVUV5UWp0SlFVTjZReXhUUVVGVExFVkJRVU1zVjBGQlZ6dEZRVVYyUWl4SFFVRkhPMGxCUTBRc1RVRkJUU3hGUVVGRExFOUJRVTg3U1VGRFpDeGhRVUZoTEVWQlFVTXNSMEZCUnp0SlFVTnFRaXhUUVVGVExFVkJRVU1zVTBGQlV6dEZRVVZ5UWl4SlFVRkpPMGxCUTBZc1RVRkJUU3hGUVVGRExFOUJRVTg3U1VGRFpDeGhRVUZoTEVWQlFVTXNSMEZCUnp0SlFVTnFRaXhUUVVGVExFVkJRVU1zVTBGQlV6czdRVUZIZGtJc1ZVRkJWU3hEUVVGV0xHbENRVUZWTzBWQlExSXNSVUZCUlR0SlFVTkJMRTFCUVUwc1JVRkJReXhQUVVGUE8wVkJSV2hDTEVkQlFVYzdTVUZEUkN4TlFVRk5MRVZCUVVNc1RVRkJUVHRKUVVOaUxIbENRVUY1UWl4RlFVRkRMRzlEUVVGdlF6dEZRVVZvUlN4SFFVRkhPMGxCUTBRc1RVRkJUU3hGUVVGRExFMUJRVTA3UlVGRlppeEpRVUZKTzBsQlEwWXNUVUZCVFN4RlFVRkRMRTFCUVUwN08wRkJSMnBDTEZWQlFWVXNRMEZCVml4dlFrRkJWVHRGUVVOU0xFVkJRVVU3U1VGRFFTeE5RVUZOTEVWQlFVTXNVVUZCVVR0RlFVVnFRaXhIUVVGSE8wbEJRMFFzVFVGQlRTeEZRVUZETEZOQlFWTTdTVUZEYUVJc2VVSkJRWGxDTEVWQlFVTXNiME5CUVc5RE8wVkJSV2hGTEVkQlFVYzdTVUZEUkN4TlFVRk5MRVZCUVVNc1IwRkJSenRGUVVWYUxFbEJRVWs3U1VGRFJpeE5RVUZOTEVWQlFVTXNSMEZCUnpzN1FVRkhaQ3hWUVVGVkxFTkJRVllzVlVGQlZUdEZRVU5TTEVWQlFVVTdTVUZEUVN4VFFVRlRMRVZCUVVNc1pVRkJaVHRGUVVVelFpeEhRVUZITzBsQlEwUXNVMEZCVXl4RlFVRkRMR05CUVdNN1JVRkZNVUlzUjBGQlJ6dEpRVU5FTEZOQlFWTXNSVUZCUXl4alFVRmpPMFZCUlRGQ0xFZEJRVWM3U1VGRFJDeFRRVUZUTEVWQlFVTXNZMEZCWXp0RlFVVXhRaXhKUVVGSk8wbEJRMFlzVTBGQlV5eEZRVUZETEdOQlFXTTdPMEZETTFBMVFpeEJRVUZCTEUxQlFVMHNRMEZCUXp0RlFVTklMRlZCUVZVc1JVRkJSU3hOUVVGTkxFZEJOa0p5UWp0RlFUbENSQ3hCUVVWSkxFMUJSa1VzUTBGRlJpeExRVUZMTEVOQlFVRXNRVUZCUVN4SlFVRkRMRU5CUVVzc1ZVRkJWU3hCUVVGbUxFVkJRV2xDTzBsQlEyNUNMRkZCUVZFc1JVRkJSU3hSUVVGUk8wbEJRMnhDTEVsQlFVa3NSVUZCUlN4UFFVRlBMRWRCZVVKb1FqdEpRVGRDVEN4QlFVdFJMRTFCVEVZc1EwRkZSaXhMUVVGTExFTkJRVUVzUVVGQlFTeEpRVUZETEVOQlFVc3NWVUZCVlN4QlFVRm1MRWxCUjBFc1MwRkJTeXhEUVVGRE8wMUJRMG9zVDBGQlR5eEZRVUZGTEV0QlFVczdUVUZEWkN4UlFVRlJMRVZCUVVVc1VVRkJVVHROUVVOc1FpeFBRVUZQTEVWQlFVVXNXVUZCV1R0TlFVTnlRaXhOUVVGTkxFVkJRVVVzVlVGQlZUdE5RVU5zUWl4TlFVRk5MRVZCUVVVc1QwRkJUenROUVVObUxGTkJRVk1zUlVGQlJTeEhRVUZITzAxQlEyUXNWMEZCVnl4RlFVRkZMRWRCUVVjc1IwRlRia0k3VFVGeVFsUXNRVUZoV1N4TlFXSk9MRU5CUlVZc1MwRkJTeXhEUVVGQkxFRkJRVUVzU1VGQlF5eERRVUZMTEZWQlFWVXNRVUZCWml4SlFVZEJMRXRCUVVzc1FVRlJSaXhSUVVGUkxFTkJRVU03VVVGRlRpeFBRVUZQTEVWQlFVVXNlVUpCUVhsQ08xRkJRMnhETEZOQlFWTXNSVUZCUlN4SlFVRkpPMUZCUTJZc1VVRkJVU3hGUVVGRkxGRkJRVkU3VVVGRGJFSXNTVUZCU1N4RlFVRkZMRU5CUVVNN1VVRkRVQ3hIUVVGSExFVkJRVVVzUTBGQlF5eEhRVU5VTzBsQmNFSmlMRUZCZDBKblFpeE5RWGhDVml4RFFVVkdMRXRCUVVzc1EwRkJRU3hCUVVGQkxFbEJRVU1zUTBGQlN5eFZRVUZWTEVGQlFXWXNRMEZ2UWtRc1VVRkJVU3hIUVVOSUxFdEJRVXNzUVVGRFJpeFJRVUZSTEVOQlFVTTdUVUZEVGl4UFFVRlBMRVZCUVVVc1YwRkJWeXhIUVVOMlFqczdRVUZOYWtJc1FVRkJRU3hqUVVGakxFTkJRVU03UlVGRFdDeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzUzBGQlN5eEZRVUZGTEU5QlFXRTdSVUZEY0VJc1QwRkJUeXhGUVVGRkxFOUJRVThzUjBGVGJrSTdSVUZpUkN4QlFVdEpMR05CVEZVc1EwRkxWaXh6UWtGQmMwSXNRMEZCUXp0SlFVTnVRaXhKUVVGSkxFVkJRVVVzUTBGQlF6dEpRVU5RTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGxCUTJJc1dVRkJXU3hGVUM5Q1dDeEpRVUZKTEVkUFowTlNPMFZCVkV3c1FVRlZTU3hqUVZaVkxFTkJWVllzWTBGQll5eERRVUZETzBsQlExZ3NZMEZCWXl4RlFVRkZMRk5CUVZNc1IwRkROVUk3TzBGQlIwd3NRVUZCUVN4aFFVRmhMRU5CUVVNN1JVRkRWaXhQUVVGUExFVkJRVVVzU1VGQlNUdEZRVU5pTEZkQlFWY3NSVUZCUlN4TlFVRk5PMFZCUTI1Q0xFOUJRVThzUlVGQlJTeEhRVUZITEVOUWVrTlFMRWxCUVVrc1EwOTVRMWtzUjBGQlJ5eERRVUZETEVOQlFVTXNSMEYzUlRkQ08wVkJNMFZFTEVGQlNVa3NZVUZLVXl4QlFVbFNMR05CUVdNc1EwRkJRenRKUVVOYUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBsQlExZ3NUMEZCVHl4RlFVRkZMRWxCUVVrN1NVRkRZaXhUUVVGVExFVkJRVVVzU1VGQlNUdEpRVU5tTEdGQlFXRXNSVUZCUlN4RFFVRkRMRWRCUTI1Q08wVkJWRXdzUVVGVlNTeGhRVlpUTEVGQlZWSXNXVUZCV1N4RFFVRkRPMGxCUTFZc1MwRkJTeXhGUVVGRkxFZEJRVWNzUjBGRFlqdEZRVnBNTEVGQllVa3NZVUZpVXl4QlFXRlNMR0ZCUVdFc1EwRkJRenRKUVVOWUxFdEJRVXNzUlVGQlJTeEhRVUZITzBsQlExWXNZMEZCWXl4RlFVRkZMRTFCUVUwN1NVRkRkRUlzVjBGQlZ5eEZRVUZGTEZWQlFWVTdTVUZEZGtJc1pVRkJaU3hGUVVGRkxFMUJRVTBzUjBGRE1VSTdSVUZzUWt3c1FVRnRRa2tzWVVGdVFsTXNRVUZ0UWxJc1owSkJRV2RDTEVOQlFVTTdTVUZEWkN4SlFVRkpMRVZCUVVVc1EwRkJRenRKUVVOUUxHTkJRV01zUlVGQlJTeE5RVUZOTzBsQlEzUkNMRmRCUVZjc1JVRkJSU3hWUVVGVk8wbEJRM1pDTEdWQlFXVXNSVUZCUlN4TlFVRk5PMGxCUTNaQ0xGTkJRVk1zUlVGQlJTeERRVUZETEVkQmJVTm1PMGxCTTBSTUxFRkJlVUpSTEdGQmVrSkxMRUZCYlVKU0xHZENRVUZuUWl4RFFVMWlMRVZCUVVVc1EwRkJRenROUVVORExGZEJRVmNzUlVGQlJTeEhRVUZITzAxQlEyaENMRlZCUVZVc1JVRkJSU3hMUVVGTE8wMUJRMnBDTEZGQlFWRXNSVUZCUlN4TlFVRk5PMDFCUTJoQ0xFOUJRVThzUlVGQlJTeExRVUZMTzAxQlEyUXNUMEZCVHl4RlFVRkZMRmRCUVZjN1RVRkRjRUlzYTBKQlFXdENMRVZCUVVVc1EwRkJRenROUVVOeVFpeHJRa0ZCYTBJc1JVRkJSU3hSUVVGUk8wMUJRelZDTEdGQlFXRXNSVUZCUlN4UlFVRlJPMDFCUTNaQ0xFdEJRVXNzUlVGQlJTeEpRVUZKTEVkQmQwSmtPMDFCTVVSVUxFRkJiVU5aTEdGQmJrTkRMRUZCYlVKU0xHZENRVUZuUWl4RFFVMWlMRVZCUVVVc1FVRlZSeXhWUVVGVkxFTkJRVU03VVVGRFVpeFBRVUZQTEVWQlFVVXNTMEZCU3l4SFFXTnFRanRSUVd4RVlpeEJRWEZEWjBJc1lVRnlRMGdzUVVGdFFsSXNaMEpCUVdkQ0xFTkJUV0lzUlVGQlJTeEJRVlZITEZWQlFWVXNSMEZGVEN4RlFVRkZMRU5CUVVNN1ZVRkRSQ3hQUVVGUExFVkJRVVVzV1VGQldUdFZRVU55UWl4WlFVRlpMRVZCUVVVc1IwRkJSeXhIUVZWd1FqdFZRV3BFYWtJc1FVRjNRMjlDTEdGQmVFTlFMRUZCYlVKU0xHZENRVUZuUWl4RFFVMWlMRVZCUVVVc1FVRlZSeXhWUVVGVkxFZEJSVXdzUlVGQlJTeEJRVWRETEU5QlFVOHNRMEZCUXp0WlFVTk1MRTlCUVU4c1JVRkJSU3hIUVVGSE8xbEJRMW9zVDBGQlR5eEZRVUZGTEZsQlFWa3NSMEZEZUVJN1ZVRXpRM0pDTEVGQk5rTjNRaXhoUVRkRFdDeEJRVzFDVWl4blFrRkJaMElzUTBGTllpeEZRVUZGTEVGQlZVY3NWVUZCVlN4SFFVVk1MRVZCUVVVc1FVRlBReXhYUVVGWExFRkJRMUFzVDBGQlR5eERRVUZETzFsQlEwd3NUMEZCVHl4RlFVRkZMRVZCUVVVc1IwRkRaRHROUVM5RGVrSXNRVUZ2UkdkQ0xHRkJjRVJJTEVGQmJVSlNMR2RDUVVGblFpeERRVTFpTEVWQlFVVXNRVUV3UWtjc1dVRkJXU3hIUVVOUUxFVkJRVVVzUTBGQlF6dFJRVU5FTEdGQlFXRXNSVUZCUlN4UlFVRlJPMUZCUTNaQ0xGZEJRVmNzUlVGQlJTeE5RVUZOTzFGQlEyNUNMRkZCUVZFc1JVRkJSU3hOUVVGTkxFZEJRMjVDTzBWQmVFUnFRaXhCUVRSRVNTeGhRVFZFVXl4RFFUUkVWQ3hEUVVGRExFTkJRVU03U1VGRFJTeE5RVUZOTEVWQlFVVXNRMEZCUXl4SFFVTmFPMFZCT1VSTUxFRkJLMFJKTEdGQkwwUlRMRU5CSzBSVUxFVkJRVVVzUTBGQlF6dEpRVU5ETEUxQlFVMHNSVUZCUlN4RFFVRkRPMGxCUTFRc1QwRkJUeXhGUVVGRkxFTkJRVU03U1VGRFZpeGxRVUZsTEVWQlFVVXNTVUZCU1N4SFFWRjRRanRKUVRGRlRDeEJRVzFGVVN4aFFXNUZTeXhEUVN0RVZDeEZRVUZGTEVkQlNVa3NSVUZCUlN4RFFVRkRPMDFCUTBRc1RVRkJUU3hGUVVGRkxFTkJRVU1zUjBGRFdqdEpRWEpGVkN4QlFYTkZVU3hoUVhSRlN5eERRU3RFVkN4RlFVRkZMRU5CVDBVc1QwRkJUeXhEUVVGRE8wMUJRMG9zVjBGQlZ5eEZRVUZGTEVkQlFVYzdUVUZEYUVJc1MwRkJTeXhGUVVGRkxFOUJRV0VzUjBGRGRrSTdPMEZCU1ZRc1FVRkJRU3hSUVVGUkxFTkJRVU03UlVGRFRDeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMRTFCUVUwc1JVRkJSU3hSUVVGUk8wVkJRMmhDTEZOQlFWTXNSVUZCUlN4SlFVRkpMRWRCY1Zac1FqdEZRWGhXUkN4QlFVbEpMRkZCU2trc1FVRkpTQ3hsUVVGbExFTkJRVU03U1VGRFlpeFBRVUZQTEVWQlFVVXNTVUZCU1N4SFFVTm9RanRGUVU1TUxFRkJUMGtzVVVGUVNTeERRVTlLTEdOQlFXTXNRMEZCUXp0SlFVTllMRmRCUVZjc1JVRkJSU3hWUVVGVk8wbEJRM1pDTEZkQlFWY3NSVkExU0ZZc1NVRkJTU3hIVHpaSVVqdEZRVlpNTEVGQldWRXNVVUZhUVN4QlFWZElMRlZCUVZVc1EwRkRVQ3hoUVVGaExFTkJRVU03U1VGRFZpeFBRVUZQTEVWQlFVVXNTMEZCU3l4SFFVVnFRanRGUVdaVUxFRkJhVUpaTEZGQmFrSktMRUZCVjBnc1ZVRkJWU3hEUVV0UUxHRkJRV0VzUVVGRFVpeFBRVUZQTEVOQlFVTTdTVUZEVEN4UFFVRlBMRVZCUVVVc2JVSkJRVzFDTEVkQlF5OUNPMFZCYmtKaUxFRkJkVUpSTEZGQmRrSkJMRUZCYzBKSUxHRkJRV0VzUTBGRFZpeG5Ra0ZCWjBJc1EwRkJRenRKUVVOaUxFOUJRVThzUlVGQlJTeExRVUZMTEVkQlJXcENPMFZCTVVKVUxFRkJORUpaTEZGQk5VSktMRUZCYzBKSUxHRkJRV0VzUVVGTFZDeFZRVUZWTEVOQlExQXNaMEpCUVdkQ0xFTkJRVU03U1VGRFlpeFZRVUZWTEVWQlFVVXNUMEZCWVN4SFFVTTFRanRGUVRsQ1lpeEJRV3REU1N4UlFXeERTU3hEUVd0RFNpeGhRVUZoTEVOQlFVTTdTVUZEVml4UFFVRlBMRVZCUVVVc1NVRkJTVHRKUVVOaUxFMUJRVTBzUlVGQlJTeFBRVUZQTzBsQlEyWXNUMEZCVHl4RlVIaEtUaXhKUVVGSkxFTlBkMHBaTEVsQlFVazdTVUZEY2tJc1ZVRkJWU3hGUVVGRkxFOUJRV0U3U1VGRGVrSXNWMEZCVnl4RlFVRkZMRmxCUVZrN1NVRkRla0lzUzBGQlN5eEZRVUZGTEU5QlFXRXNSMEZQZGtJN1NVRXZRMHdzUVVGNVExRXNVVUY2UTBFc1EwRnJRMG9zWVVGQllTeEJRVTlTTEU5QlFVOHNRMEZCUXp0TlFVTk1MRk5CUVZNc1JVRkJSU3hKUVVGSk8wMUJRMllzVFVGQlRTeEZRVUZGTEdOQlFXTTdUVUZGZEVJc1QwRkJUeXhGUVVGRkxIRkNRVUZ4UWl4SFFVTnFRenRGUVRsRFZDeEJRV2RFU1N4UlFXaEVTU3hEUVdkRVNpeGhRVUZoTEVOQlFVTTdTVUZEVml4UFFVRlBMRVZCUVVVc1NVRkJTVHRKUVVOaUxGbEJRVmtzUlZCeVMxZ3NTVUZCU1R0SlQzTkxUQ3hMUVVGTExFVkJRVVVzVDBGQllTeEhRWGREZGtJN1NVRXpSa3dzUVVGdlJGRXNVVUZ3UkVFc1EwRm5SRW9zWVVGQllTeERRVWxVTEZsQlFWa3NRMEZCUXp0TlFVTlVMRk5CUVZNc1JVRkJSU3hKUVVGSk8wMUJRMllzVjBGQlZ5eEZRVUZGTEVkQlFVYzdUVUZEYUVJc1MwRkJTeXhGUVVGRkxFOUJRV0VzUjBGRGRrSTdTVUY0UkZRc1FVRjVSRkVzVVVGNlJFRXNRMEZuUkVvc1lVRkJZU3hEUVZOVUxGbEJRVmtzUTBGQlF6dE5RVU5VTEU5QlFVOHNSVUZCUlN4SlFVRkpPMDFCUTJJc1YwRkJWeXhGUVVGRkxFOUJRVThzUjBGaGRrSTdUVUY0UlZRc1FVRTBSRmtzVVVFMVJFb3NRMEZuUkVvc1lVRkJZU3hEUVZOVUxGbEJRVmtzUTBGSFVpeHRRa0ZCYlVJc1EwRkJRenRSUVVOb1FpeFBRVUZQTEVWQlFVVXNTVUZCU1R0UlFVTmlMRmRCUVZjc1JVRkJSU3hOUVVGTk8xRkJRMjVDTEUxQlFVMHNSVUZCUlN4SlFVRkpPMUZCUTFvc1UwRkJVeXhGUVVGRkxFbEJRVWs3VVVGRFppeFRRVUZUTEVWQlFVVXNTVUZCU1R0UlFVTm1MRTlCUVU4c1JVRkJSU3hQUVVGUE8xRkJRMmhDTEdGQlFXRXNSVUZCUlN4RFFVRkRMRWRCU1c1Q08xRkJka1ZpTEVGQmIwVm5RaXhSUVhCRlVpeERRV2RFU2l4aFFVRmhMRU5CVTFRc1dVRkJXU3hEUVVkU0xHMUNRVUZ0UWl4RFFWRm1MRU5CUVVNc1EwRkJRenRWUVVORkxGTkJRVk1zUlVGQlJTeFBRVUZQTEVkQlEzSkNPMGxCZEVWcVFpeEJRWGxGVVN4UlFYcEZRU3hEUVdkRVNpeGhRVUZoTEVOQmVVSlVMRlZCUVZVc1EwRkJRenROUVVOUUxGZEJRVmNzUlVGQlJTeEhRVUZITzAxQlEyaENMRXRCUVVzc1JVRkJSU3hQUVVGaE8wMUJRM0JDTEU5QlFVOHNSVUZCUlN4SlFVRkpPMDFCUTJJc1YwRkJWeXhGUVVGRkxFMUJRVTBzUjBGaGRFSTdUVUV4UmxRc1FVRTRSVmtzVVVFNVJVb3NRMEZuUkVvc1lVRkJZU3hEUVhsQ1ZDeFZRVUZWTEVOQlMwNHNRMEZCUXl4RFFVRkRPMUZCUTBVc1YwRkJWeXhGUVVGRkxFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCWVR0UlFVTndReXhQUVVGUExFVkJRVVVzYTBKQlFXdENPMUZCUXpOQ0xFOUJRVThzUlVGQlJTeEpRVUZKTzFGQlEySXNWMEZCVnl4RlFVRkZMRWRCUVVjN1VVRkRhRUlzWlVGQlpTeEZRVUZGTEVsQlFVazdVVUZEY2tJc1YwRkJWeXhGUVVGRkxFMUJRVTBzUjBGTGRFSTdVVUY2Um1Jc1FVRnhSbWRDTEZGQmNrWlNMRU5CWjBSS0xHRkJRV0VzUTBGNVFsUXNWVUZCVlN4RFFVdE9MRU5CUVVNc1EwRlBSeXhEUVVGRExFTkJRVU03VlVGRFJTeExRVUZMTEVWQlFVVXNUMEZCWVR0VlFVTndRaXhaUVVGWkxFVkJRVVVzUzBGQlN5eEhRVU4wUWp0RlFYaEdha0lzUVVFMFJra3NVVUUxUmtrc1EwRTBSa29zWVVGQllTeERRVUZETzBsQlExWXNUMEZCVHl4RlFVRkZMRWxCUVVrN1NVRkRZaXhQUVVGUExFVlFhazVPTEVsQlFVazdTVTlyVGt3c1ZVRkJWU3hGUVVGRkxFOUJRV0VzUjBFeVNEVkNPMGxCTVU1TUxFRkJaMGRSTEZGQmFFZEJMRU5CTkVaS0xHRkJRV0VzUTBGSlZDeEZRVUZGTEVOQlFVTTdUVUZEUXl4VFFVRlRMRVZCUVVVc1NVRkJTVHROUVVObUxGZEJRVmNzUlVGQlJTeEhRVUZITzAxQlEyaENMRTFCUVUwc1JVRkJSU3hyUWtGQmEwSXNSMEZETjBJN1NVRndSMVFzUVVGeFIxRXNVVUZ5UjBFc1EwRTBSa29zWVVGQllTeERRVk5VTEVOQlFVTXNRVUZCUVN4TFFVRkxMRU5CUVVNN1RVRkRTQ3hOUVVGTkxFVkJRVVVzVTBGQlV6dE5RVU5xUWl4VlFVRlZMRVZCUVVVc1RVRkJUU3hIUVVOeVFqdEpRWGhIVkN4QlFYbEhVU3hSUVhwSFFTeERRVFJHU2l4aFFVRmhMRU5CWVZRc2FVSkJRV2xDTEVOQlFVTTdUVUZEWkN4UFFVRlBMRVZCUVVVc1NVRkJTVHROUVVOaUxGTkJRVk1zUlVGQlJTeEpRVUZKTzAxQlEyWXNWMEZCVnl4RlFVRkZMRlZCUVZVc1IwRnhRakZDTzAxQmFrbFVMRUZCTmtkWkxGRkJOMGRLTEVOQk5FWktMR0ZCUVdFc1EwRmhWQ3hwUWtGQmFVSXNRMEZKWWl4elFrRkJjMElzUTBGQlF6dFJRVU51UWl4WlFVRlpMRVZCUVVVc1NVRkJTVHRSUVVOc1FpeE5RVUZOTEVWQlFVVXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGaE8xRkJReTlDTEU5QlFVOHNSVUZCUlN4SFFVRkhPMUZCUTFvc1MwRkJTeXhGUVVGRkxFbEJRVWs3VVVGRFdDeFBRVUZQTEVWQlFVVXNSMEZCUnl4SFFVOW1PMUZCZWtoaUxFRkJiVWhuUWl4UlFXNUlVaXhEUVRSR1NpeGhRVUZoTEVOQllWUXNhVUpCUVdsQ0xFTkJTV0lzYzBKQlFYTkNMRU5CVFd4Q0xGbEJRVmtzUTBGQlF6dFZRVU5VTEU5QlFVOHNSVUZCUlN4TFFVRkxPMVZCUTJRc1MwRkJTeXhGUVVGRkxFbEJRVWs3VlVGRFdDeE5RVUZOTEVWQlFVVXNRMEZCUXp0VlFVTlVMR05CUVdNc1JVRkJSU3hKUVVGSkxFZEJRM1pDTzAxQmVFaHFRaXhCUVRCSVdTeFJRVEZJU2l4RFFUUkdTaXhoUVVGaExFTkJZVlFzYVVKQlFXbENMRU5CYVVKaUxITkNRVUZ6UWl4RFFVRkRPMUZCUTI1Q0xGTkJRVk1zUlVGQlJTeEpRVUZKTzFGQlEyWXNTVUZCU1N4RlFVRkZMRU5CUVVNc1IwRkpWanRSUVdoSllpeEJRVFpJWjBJc1VVRTNTRklzUTBFMFJrb3NZVUZCWVN4RFFXRlVMR2xDUVVGcFFpeERRV2xDWWl4elFrRkJjMElzUTBGSGJFSXNRMEZCUXl4RFFVRkRPMVZCUTBVc1ZVRkJWU3hGUVVGRkxGVkJRVlVzUjBGRGVrSTdTVUV2U0dwQ0xFRkJiVWxSTEZGQmJrbEJMRU5CTkVaS0xHRkJRV0VzUTBGMVExUXNTVUZCU1N4RFFVRkRPMDFCUTBRc1ZVRkJWU3hGUVVGRkxGVkJRV0U3VFVGRGVrSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1RVRkRZaXhOUVVGTkxFVkJRVVVzVFVGQlRUdE5RVU5rTEZOQlFWTXNSVUZCUlN4SlFVRkpMRWRCYVVac1FqdE5RWGhPVkN4QlFYZEpXU3hSUVhoSlNpeERRVFJHU2l4aFFVRmhMRU5CZFVOVUxFbEJRVWtzUTBGTFFTeExRVUZMTEVOQlFVTTdVVUZEUml4UFFVRlBMRVZCUVVVc1MwRkJTenRSUVVOa0xFMUJRVTBzUlVGQlJTeFRRVUZUTzFGQlEycENMRmRCUVZjc1JVRkJSU3hIUVVGSE8xRkJRMmhDTEZOQlFWTXNSVUZCUlN4SlFVRkpMRWRCUTJ4Q08wMUJOMGxpTEVGQk9FbFpMRkZCT1VsS0xFTkJORVpLTEdGQlFXRXNRMEYxUTFRc1NVRkJTU3hEUVZkQkxFdEJRVXNzUTBGQlFTeEJRVUZCTEVsQlFVTXNRMEZCU3l4TlFVRk5MRUZCUVZnc1JVRkJZVHRSUVVObUxFOUJRVThzUlVGQlJTeExRVUZMTzFGQlEyUXNUVUZCVFN4RlFVRkZMRU5CUVVNN1VVRkRWQ3hQUVVGUExFVkJRVVVzU1VGQlNUdFJRVU5pTEUxQlFVMHNSVUZCUlN4UFFVRlBPMUZCUTJZc1MwRkJTeXhGUVVGRkxFbEJRVWs3VVVGRFdDeFhRVUZYTEVWQlFVVXNSMEZCUnl4SFFVTnVRanROUVhKS1lpeEJRWE5LV1N4UlFYUktTaXhEUVRSR1NpeGhRVUZoTEVOQmRVTlVMRWxCUVVrc1EwRnRRa0VzVFVGQlRTeEJRVUZCTEVsQlFVc3NSVUZCUVN4QlFVRkJMRkZCUVVNc1FVRkJRU3hIUVVGWE8xRkJSVzVDTEdkQ1FVRm5RaXhGUVVGRkxFbEJRVWs3VVVGRGRFSXNUVUZCVFN4RlFVRkZMRTlCUVU4c1IwRkRiRUk3VFVFeFNtSXNRVUV5U2xrc1VVRXpTa29zUTBFMFJrb3NZVUZCWVN4RFFYVkRWQ3hKUVVGSkxFTkJkMEpCTEUxQlFVMHNRMEZCUVN4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVVGVk8xRkJRMklzUzBGQlN5eEZRVUZGTEVsQlFVazdVVUZEV0N4TlFVRk5MRVZCUVVVc1EwRkJRenRSUVVOVUxFMUJRVTBzUlVGQlJTeFBRVUZQTEVkQlNXeENPMUZCYkV0aUxFRkJLMHBuUWl4UlFTOUtVaXhEUVRSR1NpeGhRVUZoTEVOQmRVTlVMRWxCUVVrc1EwRjNRa0VzVFVGQlRTeERRVUZCTEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCU1Vnc1RVRkJUU3hEUVVGRE8xVkJRMGdzVDBGQlR5eEZRVUZGTEV0QlFVc3NSMEZEYWtJN1RVRnFTMnBDTEVGQmJVdFpMRkZCYmt0S0xFTkJORVpLTEdGQlFXRXNRMEYxUTFRc1NVRkJTU3hEUVdkRFFTeGhRVUZoTEVOQlFVTTdVVUZEVml4VlFVRlZMRVZCUVVVc1MwRkJTeXhIUVVOd1FqdE5RWEpMWWl4QlFYTkxXU3hSUVhSTFNpeERRVFJHU2l4aFFVRmhMRU5CZFVOVUxFbEJRVWtzUTBGdFEwRXNUMEZCVHl4RFFVRkRPMUZCUTBvc1RVRkJUU3hGUVVGRkxFbEJRVWs3VVVGRFdpeFhRVUZYTEVWQlFVVXNTVUZCU1N4SFFVTndRanROUVhwTFlpeEJRVFJMWjBJc1VVRTFTMUlzUTBFMFJrb3NZVUZCWVN4RFFYVkRWQ3hKUVVGSkxFTkJkME5CTEdkQ1FVRm5RaXhEUVVOYUxGTkJRVk1zUTBGQlF6dFJRVU5PTEZWQlFWVXNSVUZCUlN4SlFVRkpPMUZCUTJoQ0xHRkJRV0VzUlVGQlJTeERRVUZETzFGQlEyaENMRmxCUVZrc1JVRkJSU3hIUVVGSExFTkJRVU1zUzBGQlN5eERRVUZETEZWQlFXRXNSMEZKZUVNN1VVRnVUR3BDTEVGQloweHZRaXhSUVdoTVdpeERRVFJHU2l4aFFVRmhMRU5CZFVOVUxFbEJRVWtzUTBGM1EwRXNaMEpCUVdkQ0xFTkJRMW9zVTBGQlV5eEJRVWxLTEUxQlFVMHNRMEZCUXp0VlFVTktMRlZCUVZVc1JVRkJSU3hQUVVGaExFZEJRelZDTzAxQmJFeHlRaXhCUVc5TVowSXNVVUZ3VEZJc1EwRTBSa29zWVVGQllTeERRWFZEVkN4SlFVRkpMRU5CZDBOQkxHZENRVUZuUWl4RFFWTmFMRmRCUVZjc1EwRkJRenRSUVVOU0xGVkJRVlVzUlVGQlJTeEpRVUZKTzFGQlEyaENMRXRCUVVzc1JVRkJSU3hQUVVGUE8xRkJRMlFzVFVGQlRTeEZVSFpUV2l4SlFVRkpPMUZQZDFORkxGTkJRVk1zUlVGQlJTeEhRVUZITzFGQlEyUXNZVUZCWVN4RlFVRkZMRU5CUVVNc1IwRnBRbTVDTzFGQk1VMXFRaXhCUVRCTWIwSXNVVUV4VEZvc1EwRTBSa29zWVVGQllTeERRWFZEVkN4SlFVRkpMRU5CZDBOQkxHZENRVUZuUWl4RFFWTmFMRmRCUVZjc1EwRk5VQ3hKUVVGSkxFTkJRVU03VlVGRFJDeFhRVUZYTEVWUU0xTnlRaXhKUVVGSkxFZFBORk5ITzFGQk5VeHlRaXhCUVRaTWIwSXNVVUUzVEZvc1EwRTBSa29zWVVGQllTeERRWFZEVkN4SlFVRkpMRU5CZDBOQkxHZENRVUZuUWl4RFFWTmFMRmRCUVZjc1FVRlRUaXhQUVVGUExFTkJRVU03VlVGRFRDeFZRVUZWTEVWUWNsUjBRaXhQUVVGcFFqdFZUM05VVEN4TFFVRkxMRVZCUVVVc1NVRkJTVHRWUVVOWUxGZEJRVmNzUlZCb1ZISkNMRWxCUVVrN1ZVOXBWRTBzVlVGQlZTeEZRVUZGTEhGRFFVRnhRenRWUVVOcVJDeGhRVUZoTEVWQlFVVXNRMEZCUXp0VlFVTm9RaXhUUVVGVExFVkJRVVVzU1VGQlNTeEhRVU5zUWp0UlFYQk5ja0lzUVVGelRYZENMRkZCZEUxb1FpeERRVFJHU2l4aFFVRmhMRU5CZFVOVUxFbEJRVWtzUTBGM1EwRXNaMEpCUVdkQ0xFTkJVMW9zVjBGQlZ5eEJRV2xDVGl4TlFVRk5MRUZCUTBZc1QwRkJUeXhEUVVGRE8xVkJRMHdzVlVGQlZTeEZRVUZGTEU5QlFYTkNMRWRCUTNKRE8wMUJlRTE2UWl4QlFUWk5XU3hSUVRkTlNpeERRVFJHU2l4aFFVRmhMRU5CZFVOVUxFbEJRVWtzUTBFd1JVRXNUMEZCVHl4RFFVRkRPMUZCUTBvc1pVRkJaU3hGUVVGRkxFbEJRVWs3VVVGRGNrSXNUVUZCVFN4RlFVRkZMRmRCUVZjN1VVRkRia0lzVDBGQlR5eEZRVUZGTEVOQlFVTXNSMEZKWWp0UlFYQk9ZaXhCUVdsT1owSXNVVUZxVGxJc1EwRTBSa29zWVVGQllTeERRWFZEVkN4SlFVRkpMRU5CTUVWQkxFOUJRVThzUTBGSlNDeEZRVUZGTEVOQlFVTTdWVUZEUXl4TFFVRkxMRVZCUVVVc1NVRkJTU3hIUVVOa08wMUJiazVxUWl4QlFYRk9XU3hSUVhKT1NpeERRVFJHU2l4aFFVRmhMRU5CZFVOVUxFbEJRVWtzUTBGclJrRXNTMEZCU3l4SFFVRkhMRTlCUVU4c1EwRkJRenRSUVVOYUxFMUJRVTBzUlVGQlJTeGpRVUZqTEVkQlEzcENPMFZCZGs1aUxFRkJNazVKTEZGQk0wNUpMRU5CTWs1S0xHZENRVUZuUWl4RFFVRkRPMGxCUTJJc1QwRkJUeXhGUVVGRkxFbEJRVWs3U1VGRFlpeFZRVUZWTEVWQlFVVXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXh2UWtGQmJVSTdTVUZEZWtNc1QwRkJUeXhGVUdwV1RpeEpRVUZKTzBsUGExWk1MRlZCUVZVc1JVRkJSU3hKUVVGSk8wbEJRMmhDTEZWQlFWVXNSVUZCUlN4TFFVRkxMRWRCUTNCQ08wVkJhazlNTEVGQmEwOUpMRkZCYkU5SkxFTkJhMDlLTEdkQ1FVRm5RaXhEUVVGRE8wbEJRMklzVDBGQlR5eEZRVUZGTEVsQlFVazdTVUZEWWl4TFFVRkxMRVZCUVVVc1QwRkJZVHRKUVVOd1FpeFRRVUZUTEVWQlFVVXNTVUZCU1R0SlFVTm1MRTlCUVU4c1JVRkJSU3hMUVVGTE8wbEJRMlFzVlVGQlZTeEZRVUZGTEUxQlFVMHNSMEZEY2tJN1JVRjRUMHdzUVVGNVQwa3NVVUY2VDBrc1EwRjVUMG9zWTBGQll5eERRVUZETzBsQlExZ3NaVUZCWlN4RlFVRkZMRWxCUVVrN1NVRkRja0lzVFVGQlRTeEZRVUZGTEVOQlFVTTdTVUZEVkN4UFFVRlBMRVZCUVVVc1EwRkJReXhIUVRCRFlqdEpRWFJTVEN4QlFUWlBVU3hSUVRkUFFTeERRWGxQU2l4alFVRmpMRWRCU1ZJc1JVRkJSU3hEUVVGRE8wMUJRMFFzVDBGQlR5eEZRVUZGTEcxQ1FVRnRRanROUVVNMVFpeE5RVUZOTEVWQlFVVXNVVUZCVVR0TlFVTm9RaXhSUVVGUkxFVkJRVVVzVVVGQlVUdE5RVU5zUWl4blFrRkJaMElzUlVGQlJTeDNRa0ZCYlVJc1IwRnZRbmhETzAxQmNsRlVMRUZCYTFCWkxGRkJiRkJLTEVOQmVVOUtMR05CUVdNc1IwRkpVaXhGUVVGRkxFTkJTMEVzWlVGQlpTeERRVUZETzFGQlExb3NVVUZCVVN4RlFVRkZMRkZCUVZFN1VVRkRiRUlzUzBGQlN5eEZRVUZGTEVkQlFVYzdVVUZEVml4SFFVRkhMRVZCUVVVc1IwRkJSenRSUVVOU0xFdEJRVXNzUlVGQlJTeEpRVUZKTzFGQlExZ3NWVUZCVlN4RlFVRkZMRTFCUVUwN1VVRkRiRUlzVFVGQlRTeEZRVUZGTEVsQlFVazdVVUZEV2l4WFFVRlhMRVZCUVVVc1NVRkJTVHRSUVVOcVFpeFBRVUZQTEVWQlFVVXNTMEZCU3p0UlFVTmtMRXRCUVVzc1JVRkJSU3hQUVVGcFFqdFJRVU40UWl4VlFVRlZMRVZCUVVVc1pVRkJaU3hIUVZFNVFqdFJRWEJSWWl4QlFUWlFaMElzVVVFM1VGSXNRMEY1VDBvc1kwRkJZeXhIUVVsU0xFVkJRVVVzUTBGTFFTeGxRVUZsTEVOQlYxZ3NRMEZCUXl4RFFVRkRPMVZCUTBVc1UwRkJVeXhGUVVGRkxHTkJRV003VlVGRGVrSXNWMEZCVnl4RlFVRkZMRTlCUVU4c1IwRkRka0k3VVVGb1VXcENMRUZCYVZGblFpeFJRV3BSVWl4RFFYbFBTaXhqUVVGakxFZEJTVklzUlVGQlJTeERRVXRCTEdWQlFXVXNRVUZsVml4TlFVRk5MRU5CUVVNN1ZVRkRTaXhWUVVGVkxFVkJRVVVzYlVKQlFXdENMRWRCUTJwRE8wbEJibEZxUWl4QlFYTlJVU3hSUVhSUlFTeERRWGxQU2l4alFVRmpMRU5CTmtKV0xHVkJRV1VzUTBGQlF6dE5RVU5hTEU5QlFVOHNSVUZCUlN4WlFVRlpPMDFCUTNKQ0xGZEJRVmNzUlVGQlJTeEhRVUZITEVkQllXNUNPMDFCY2xKVUxFRkJlVkZaTEZGQmVsRktMRU5CZVU5S0xHTkJRV01zUTBFMlFsWXNaVUZCWlN4QlFVZFdMR1ZCUVdVc1EwRkJRenRSUVVOaUxFMUJRVTBzUlVGQlJTeFBRVUZQTzFGQlEyWXNZVUZCWVN4RlFVRkZMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zYTBKQlFXbENMRWRCVXpsRE8xRkJjRkppTEVGQk5GRm5RaXhSUVRWUlVpeERRWGxQU2l4alFVRmpMRU5CTmtKV0xHVkJRV1VzUVVGSFZpeGxRVUZsTEVGQlIxZ3NUMEZCVHl4RFFVRkRPMVZCUlV3c1QwRkJUeXhGUVVGRkxFMUJRVTA3VlVGRFppeFRRVUZUTEVWQlFVVXNZMEZCWXp0VlFVTjZRaXhMUVVGTExFVlFkbGxpTEU5QlFXbENPMVZQZDFsVUxFMUJRVTBzUlVGQlJTeFpRVUZaTzFWQlEzQkNMR05CUVdNc1JVRkJSU3hOUVVGTkxFZEJRM3BDTzBWQmJsSnFRaXhCUVhWU1NTeFJRWFpTU1N4RFFYVlNTaXhsUVVGbExFTkJRVU03U1VGRFdpeFRRVUZUTEVWQlFVVXNTVUZCU1R0SlFVTm1MR05CUVdNc1JVRkJSU3hUUVVGVE8wbEJRM3BDTEU5QlFVOHNSVUZCUlN4WFFVRlhPMGxCUTNCQ0xFOUJRVThzUlVGQlJTeFpRVUZaTzBsQlEzSkNMRTFCUVUwc1JVRkJSU3hEUVVGRExFTlFMMWxTTEVsQlFVazdTVTluV2t3c1ZVRkJWU3hGVUc1YVJDeFBRVUZuUWp0SlQyOWFla0lzUzBGQlN5eEZRVUZGTEVsQlFVa3NSMEZEWkR0RlFVVkVMRUZCUTBrc1VVRkVTU3hEUVdwVFdpeFJRVUZSTEVOQmExTkJMR2RDUVVGblFpeERRVUZETzBsQlEySXNUVUZCVFN4RlFVRkZMRWxCUVVrN1NVRkRXaXhOUVVGTkxFVkJRVVVzU1VGQlNUdEpRVU5hTEUxQlFVMHNSVUZCUlN4WlFVRlpPMGxCUTNCQ0xGVkJRVlVzUlVGQlJTeERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhyUWtGQmFVSXNSMEZMTVVNN1NVRldUQ3hCUVUxUkxGRkJUa0VzUTBGcVUxb3NVVUZCVVN4RFFXdFRRU3huUWtGQlowSXNRVUZMV0N4UFFVRlBMRU5CUVVNN1RVRkRUQ3hOUVVGTkxFVkJRVVVzVVVGQlVUdE5RVU5vUWl4TlFVRk5MRVZCUVVVc1owSkJRV2RDTEVkQlF6TkNPMFZCVkZRc1FVRlhTU3hSUVZoSkxFTkJhbE5hTEZGQlFWRXNRMEUwVTBFc1lVRkJZU3hEUVVGRE8wbEJRMVlzVVVGQlVTeEZRVUZGTEZGQlFWRXNSMEZsY2tJN1NVRXpRa3dzUVVGaFVTeFJRV0pCTEVOQmFsTmFMRkZCUVZFc1EwRTBVMEVzWVVGQllTeEJRVVZTTEZGQlFWRXNRMEZCUXp0TlFVTk9MRTlCUVU4c1JVRkJSU3hGUVVGRk8wMUJRMWdzVVVGQlVTeEZRVUZGTEZGQlFWRTdUVUZEYkVJc1ZVRkJWU3hGUVVGRkxGZEJRVmNzUTBGQlF5d3dTVUZCTUVrc1EwRkJReXhOUVVGTk8wMUJRM3BMTEV0QlFVc3NSVUZCUlN4SFFVRkhPMDFCUTFZc1NVRkJTU3hGUVVGRkxFZEJRVWM3VFVGRFZDeEhRVUZITEVWQlFVVXNSMEZCUnp0TlFVTlNMRTFCUVUwc1JVRkJSU3hIUVVGSE8wMUJRMWdzVDBGQlR5eEZRVUZGTEVkQlFVY3NSMEZEWmp0SlFYUkNWQ3hCUVhWQ1VTeFJRWFpDUVN4RFFXcFRXaXhSUVVGUkxFTkJORk5CTEdGQlFXRXNRMEZaVkN4WlFVRlpMRU5CUVVNN1RVRkRWQ3hQUVVGUExFVkJRVVVzUlVGQlJUdE5RVU5ZTEdOQlFXTXNSVUZCUlN4SlFVRkpMRWRCUTNaQ08wVkJNVUpVTEVGQk5FSkpMRkZCTlVKSkxFTkJhbE5hTEZGQlFWRXNRMEUyVkVFc1owSkJRV2RDTzBWQk5VSndRaXhSUVVGUkxFTkJhbE5hTEZGQlFWRXNRMEU0VkVFc1pVRkJaVHRGUVRkQ2JrSXNVVUZCVVN4RFFXcFRXaXhSUVVGUkxFTkJLMVJCTEdkQ1FVRm5RanRGUVRsQ2NFSXNVVUZCVVN4RFFXcFRXaXhSUVVGUkxFTkJaMVZCTEVOQlFVTXNRVUZCUVN4bFFVRmxPMFZCTDBKd1FpeFJRVUZSTEVOQmFsTmFMRkZCUVZFc1EwRnBWVUVzVjBGQlZ5eERRVUZETzBsQlExSXNUMEZCVHl4RlFVRkZMR1ZCUVdVc1IwRkRNMEk3UlVGc1Ewd3NRVUZ0UTBrc1VVRnVRMGtzUTBGcVUxb3NVVUZCVVN4RFFXOVZRU3hsUVVGbExFTkJRVU03U1VGRFdpeE5RVUZOTEVWQlFVVXNXVUZCV1N4SFFVbDJRanRKUVhoRFRDeEJRWEZEVVN4UlFYSkRRU3hEUVdwVFdpeFJRVUZSTEVOQmIxVkJMR1ZCUVdVc1FVRkZWaXhQUVVGUExFTkJRVU03VFVGRFRDeFBRVUZQTEVWQlFVVXNaVUZCWlN4SFFVTXpRanRGUVhaRFZDeEJRWGxEU1N4UlFYcERTU3hEUVdwVFdpeFJRVUZSTEVGQk1GVkRMR1ZCUVdVc1EwRkJRenRKUVVOaUxFOUJRVThzUlVGQlJTeEpRVUZKTEVkQlEyaENPMFZCTlZWVUxFRkJPRlZKTEZGQk9WVkpMRUZCT0ZWSUxIZENRVUYzUWl4RFFVRkRPMGxCUTNSQ0xGVkJRVlVzUlVGQlJTeHJRa0ZCYTBJN1NVRkRPVUlzVlVGQlZTeEZRVUZGTEZkQlFWYzdTVUZEZGtJc1ZVRkJWU3hGUVVGRkxFbEJRVWs3U1VGRGFFSXNUMEZCVHl4RlFVRkZMRWRCUVVjc1EwRkJReXhOUVVGTkxFTlFNV05VTEU5QlFXZENPMGxQTW1NeFFpeGpRVUZqTEVWQlFVVXNSMEZCUnl4SFFVbDBRanRKUVhaV1RDeEJRVzlXVVN4UlFYQldRU3hCUVRoVlNDeDNRa0ZCZDBJc1EwRk5ja0lzUTBGQlF5eERRVUZETzAxQlEwVXNWVUZCVlN4RlFVRkZMRTFCUVUwc1IwRkRja0k3TzBGQlNWUXNRVUZCUVN4blFrRkJaMElzUTBGQlF6dEZRVU5pTEVsQlFVa3NSVUZCUlN4RFFVRkRPMFZCUTFBc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UlVGRGFFSXNWVUZCVlN4RlFVRkZMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEd0Q1FVRnBRaXhIUVVNeFF6czdRVXh5WkVRc1FVRkJRU3hUUVVGVExFTkxkV1JETzBWQlEwNHNWVUZCVlN4RlFVRkZMRWxCUVVrN1JVRkRhRUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1NVRkJTU3hGUVVGRkxFTkJRVU03UlVGRFVDeExRVUZMTEVWQlFVVXNRMEZCUXp0RlFVTlNMRWRCUVVjc1JVRkJSU3hMUVVGTE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVsQlFXRTdSVUZEY2tJc1QwRkJUeXhGUVVGRkxFZEJRVWNzUTBGQlF5eEpRVUZoTEVOQlFVTXNTVUZCVnl4RFFVRkRMRWxCUVdFc1IwRnhRblpFTzBWQk5VSkVMRUZCVVVrc1UwRlNTeXhEUVZGTUxHZENRVUZuUWl4RFFVRkRPMGxCUTJJc1ZVRkJWU3hGUVVGRkxFMUJRVTA3U1VGRGJFSXNUVUZCVFN4RlFVRkZMRTlCUVU4N1NVRkRaaXhSUVVGUkxFVkJRVVVzVVVGQlVTeEhRV2RDY2tJN1NVRm1SeXhCUVVGQkxGRkJRVkVzUTBGYWFFSXNVMEZCVXl4RFFWRk1MR2RDUVVGblFpeERRVWxFTzAxQlExQXNUMEZCVHl4RlFVRkZMRWxCUVVrc1IwRkRhRUk3U1VGa1ZDeEJRV1ZSTEZOQlprTXNRMEZSVEN4blFrRkJaMElzUTBGUFdpeERRVUZETEVOQlFVTTdUVUZEUlN4alFVRmpMRVZCUVVVc1RVRkJUVHROUVVOMFFpeFRRVUZUTEVWQlFVVXNUVUZCVFN4SFFVTndRanRKUVd4Q1ZDeEJRVzFDVVN4VFFXNUNReXhEUVZGTUxHZENRVUZuUWl4RFFWZGFMR05CUVdNc1EwRkJRenROUVVOWUxGRkJRVkVzUlVGQlJTeFJRVUZSTzAxQlEyeENMRWxCUVVrc1JVRkJSU3hIUVVGSE8wMUJRMVFzUjBGQlJ5eEZRVUZGTEVkQlFVYzdUVUZEVWl4VFFVRlRMRVZCUVVVc2RVSkJRWFZDTzAxQlEyeERMRk5CUVZNc1JVRkJSU3hKUVVGSk8wMUJRMllzVjBGQlZ5eEZRVUZGTEVkQlFVY3NSMEZEYmtJN08wRkJTVlFzUVVGQlFTeFpRVUZaTzBGQlExb3NjVUpCUVhGQ0xFTkJRVU03UlVGRGJFSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhWUVVGVkxFVkJRVVVzVFVGQlRUdEZRVU5zUWl4VlFVRlZMRVZCUVVVc1RVRkJUVHRGUVVOc1FpeE5RVUZOTEVWQlFVVXNTMEZCU3l4SFFVOW9RanRGUVZwRUxFRkJUVWtzV1VGT1VTeEJRVTFRTEZGQlFWRXNSVUZPWWl4WlFVRlpMRUZCVDFBc1QwRkJUenRGUVU1YUxIRkNRVUZ4UWl4QlFVdG9RaXhSUVVGUk8wVkJUR0lzY1VKQlFYRkNMRUZCVFdoQ0xFOUJRVThzUTBGQlF6dEpRVU5NTEU5QlFVOHNSVUZCUlN4SFFVRkhPMGxCUTFvc1QwRkJUeXhGUVVGRkxGbEJRVms3U1VGRGNrSXNUVUZCVFN4RlFVRkZMRTFCUVUwc1IwRkRha0k3TzBGQlJVd3NRVUZEU1N4clFrRkVZeXhEUVVOa0xHZENRVUZuUWl4RFFVRkRPMFZCUTJJc1QwRkJUeXhGUVVGRkxFbEJRVWtzUjBGRGFFSTdPMEZCU0V3c1FVRkpTU3hyUWtGS1l5eERRVWxrTEhGQ1FVRnhRaXhEUVVGRE8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4TFFVRkxMRWRCUTJwQ096dEJRVWRNTEVGQlFVRXNiVUpCUVcxQ0xFTkJRVU03UlVGRGFFSXNWVUZCVlN4RlFVRkZMRWxCUVVrc1IwRkRia0k3TzBGRGJHaENSQ3hCUVVGQkxGRkJRVkVzUTBGQlF6dEZRVU5NTEU5QlFVOHNSVUZCUXl4SlFVRkpMRWRCUTJZN08wRkJSVVFzUVVGRFNTeDFRa0ZFYlVJc1FVRkRiRUlzVVVGQlVTeERRVUZETzBWQlJVNHNUMEZCVHl4RlFVRkRMRmxCUVZrN1JVRkRjRUlzVjBGQlZ5eEZRVUZETEU5QlFVODdSVUZEYmtJc1UwRkJVeXhGUVVGRExFbEJRVWtzUjBGRGFrSTdPMEZCUjB3c1FVRkJRU3hsUVVGbExFTkJRVU03UlVGRFdpeE5RVUZOTEVWQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGaE8wVkJRemxDTEU5QlFVOHNSVUZCUXl4SFFVRkhPMFZCUTFnc1QwRkJUeXhGUVVGRExFbEJRVWtzUjBGUFpqdEZRVlpFTEVGQlNVa3NaVUZLVnl4RFFVbFlMRmxCUVZrc1EwRkJRenRKUVVOVUxFOUJRVThzUlVGQlF5eExRVUZMTzBsQlEySXNTMEZCU3l4RlFVRkRMRWxCUVVrN1NVRkRWaXhOUVVGTkxFVkJRVU1zUTBGQlF6dEpRVU5TTEdOQlFXTXNSVUZCUXl4SlFVRkpMRWRCUTNSQ096dEJRVVZNTEVGQlJWRXNaVUZHVHl4RFFVTllMSE5DUVVGelFpeERRVU5zUWl4RFFVRkRMRU5CUVVNN1JVRkRSU3hOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVU5VTEZWQlFWVXNSVUZCUlN4VlFVRlZMRWRCUTNwQ096dEJRVWRVTEVGQlFVRXNhMEpCUVd0Q0xFTkJRVU03UlVGRFppeFZRVUZWTEVWQlFVTXNTVUZCU1R0RlFVTm1MRXRCUVVzc1JVRkJReXhQUVVGaE8wVkJRMjVDTEZOQlFWTXNSVUZCUXl4SlFVRkpMRWRCYzBKcVFqdEZRWHBDUkN4QlFVbEpMR3RDUVVwakxFTkJTV1FzWlVGQlpTeERRVUZETzBsQlExb3NTMEZCU3l4RlFVRkRMRTlCUVdFN1NVRkRia0lzVTBGQlV5eEZRVUZETEVsQlFVazdTVUZEWkN4WFFVRlhMRVZCUVVNc1IwRkJSeXhIUVV0c1FqdEpRVnBNTEVGQlVWRXNhMEpCVWxVc1EwRkpaQ3hsUVVGbExFTkJTVmdzUTBGQlF5eERRVUZETzAxQlEwVXNTMEZCU3l4RlFVRkRMRTlCUVU4N1RVRkRZaXhsUVVGbExFVkJRVU1zU1VGQlNTeEhRVU4yUWp0RlFWaFVMRUZCWVVrc2EwSkJZbU1zUTBGaFpDeHJRa0ZCYTBJc1EwRkJRenRKUVVObUxHTkJRV01zUlVGQlF5eFRRVUZUTzBsQlEzaENMRTlCUVU4c1JVRkJReXhaUVVGWk8wbEJRM0JDTEZWQlFWVXNSVUZCUXl4TlFVRk5PMGxCUTJwQ0xFMUJRVTBzUlVGQlF5eExRVUZMTzBsQlExb3NUMEZCVHl4RlFVRkRMRmRCUVZjN1NVRkRia0lzVTBGQlV5eEZRVUZETEVkQlFVYzdTVUZEWWl4TFFVRkxMRVZCUVVNc1NVRkJTVHRKUVVOV0xGVkJRVlVzUlVGQlF5eFBRVUZuUWp0SlFVTXpRaXhYUVVGWExFVkJRVU1zUzBGQlN6dEpRVU5xUWl4WFFVRlhMRVZCUVVNc1IwRkJSeXhIUVVOc1FqczdRVUZGVEN4QlFVRkJMR3RDUVVGclFpeERRVUZETzBWQlEyWXNWMEZCVnl4RlFVRkRMRTlCUVU4c1IwRTJRblJDTzBWQk9VSkVMRUZCUlVrc2EwSkJSbU1zUTBGRlpDeGxRVUZsTEVOQlFVTTdTVUZEV2l4UFFVRlBMRVZCUVVNc1NVRkJTVHRKUVVOYUxFbEJRVWtzUlVGQlF5eERRVUZETzBsQlEwNHNWMEZCVnl4RlFVRkRMRTFCUVUwc1IwRlRja0k3U1VGa1RDeEJRVTFSTEd0Q1FVNVZMRU5CUldRc1pVRkJaU3hEUVVsWUxGVkJRVlVzUTBGQlF6dE5RVU5RTEU5QlFVOHNSVUZCUXl4SlFVRkpPMDFCUTFvc1YwRkJWeXhGUVVGRExFMUJRVTBzUjBGTGNrSTdUVUZpVkN4QlFWTlpMR3RDUVZSTkxFTkJSV1FzWlVGQlpTeERRVWxZTEZWQlFWVXNRMEZIVGl4RFFVRkRMRU5CUVVNN1VVRkRSU3hUUVVGVExFVkJRVU1zU1VGQlNUdFJRVU5rTEZsQlFWa3NSVUZCUXl4TlFVRk5MRWRCUTNSQ08wVkJXbUlzUVVGbFNTeHJRa0ZtWXl4RFFXVmtMRmxCUVZrc1EwRkJRenRKUVVOVUxFOUJRVThzUlVGQlF5eEpRVUZKTzBsQlExb3NWMEZCVnl4RlFVRkRMRTlCUVU4c1IwRlpkRUk3U1VFM1Frd3NRVUZyUWxFc2EwSkJiRUpWTEVOQlpXUXNXVUZCV1N4RFFVZFNMRTlCUVU4c1EwRkJRenROUVVOS0xFOUJRVThzUlVGQlF5eEpRVUZKTzAxQlExb3NWMEZCVnl4RlFVRkRMRTFCUVUwN1RVRkRiRUlzVFVGQlRTeEZRVUZETEVsQlFVazdUVUZEV0N4VFFVRlRMRVZCUVVNc1NVRkJTVHROUVVOa0xGTkJRVk1zUlVGQlF5eEpRVUZKTzAxQlEyUXNZVUZCWVN4RlFVRkRMRU5CUVVNc1IwRkpiRUk3VFVFMVFsUXNRVUY1UWxrc2EwSkJla0pOTEVOQlpXUXNXVUZCV1N4RFFVZFNMRTlCUVU4c1EwRlBTQ3hEUVVGRExFTkJRVU03VVVGRFJTeFRRVUZUTEVWQlFVTXNUMEZCVHl4SFFVTndRanM3UVVGTFlpeGxRVUZsTzBGQlEyWXNRVUZGVVN4eFFrRkdZU3hEUVVOcVFpeDFRa0ZCZFVJc1FVRkRiRUlzVVVGQlVTeERRVUZETzBWQlEwNHNUMEZCVHl4RlFVRkRMRmRCUVZjc1IwRkRkRUk3TzBGQlNsUXNRVUZOU1N4eFFrRk9hVUlzUTBGTmFrSXNWMEZCVnl4RFFVRkRPMFZCUTFJc1QwRkJUeXhGUVVGRExFbEJRVWs3UlVGRFdpeFRRVUZUTEVWQlFVTXNTVUZCU1R0RlFVTmtMRTFCUVUwc1JVRkJReXhEUVVGRExFTkJRVU1zUzBGQllTeEhRVU42UWpzN1FVRldUQ3hCUVZkSkxIRkNRVmhwUWl4RFFWZHFRaXhWUVVGVkxFTkJRVU03UlVGRFVDeExRVUZMTEVWQlFVTXNSMEZCUnp0RlFVTlVMRTlCUVU4c1JVRkJReXhEUVVGRExFTkJRVU1zU1VGQldUdEZRVU4wUWl4UFFVRlBMRVZCUVVNc1NVRkJTU3hIUVhORlpqdEZRWEJHVEN4QlFXVlJMSEZDUVdaaExFTkJWMnBDTEZWQlFWVXNRMEZKVGl4clFrRkJhMElzUTBGQlF6dEpRVU5tTEZWQlFWVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eHJRa0ZCYTBJN1NVRkRka01zVFVGQlRTeEZRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJWenRKUVVOMFFpeFBRVUZQTEVWQlFVTXNTVUZCU1R0SlFVTmFMRWxCUVVrc1JVRkJReXhEUVVGRE8wbEJRMDRzWTBGQll5eEZRVUZETEUxQlFVMHNSMEZWZUVJN1NVRTVRbFFzUVVGelFtZENMSEZDUVhSQ1N5eERRVmRxUWl4VlFVRlZMRU5CU1U0c2EwSkJRV3RDTEVGQlRXSXNUVUZCVFN4RFFVTklMR3RDUVVGclFpeERRVUZETzAxQlEyWXNaMEpCUVdkQ0xFVlNOMGQ0UWl4UFFVRnBRanROVVRoSFZDeExRVUZMTEVWQlFVTXNTVUZCU1N4SFFVTmlPMGxCZWtKcVFpeEJRVEpDV1N4eFFrRXpRbE1zUTBGWGFrSXNWVUZCVlN4RFFVbE9MR3RDUVVGclFpeERRVmxrTEd0Q1FVRnJRaXhEUVVGRE8wMUJRMllzVFVGQlRTeEZRVUZETEZGQlFWRXNSMEZEYkVJN1JVRTNRbUlzUVVFclFsRXNjVUpCTDBKaExFTkJWMnBDTEZWQlFWVXNRMEZ2UWs0c1pVRkJaU3hEUVVGRE8wbEJRMW9zVDBGQlR5eEZRVUZETEdOQlFXTTdTVUZEZEVJc1QwRkJUeXhGUVVGRExFbEJRVWs3U1VGRFdpeFhRVUZYTEVWQlFVTXNWVUZCVlR0SlFVTjBRaXhKUVVGSkxFVkJRVU1zUTBGQlF5eEhRV1ZVTzBsQmJFUlVMRUZCYjBOWkxIRkNRWEJEVXl4RFFWZHFRaXhWUVVGVkxFTkJiMEpPTEdWQlFXVXNRMEZMV0N4bFFVRmxMRU5CUVVNN1RVRkRXaXhKUVVGSkxFVkJRVU1zUTBGQlF5eEhRVU5VTzBsQmRFTmlMRUZCZFVOWkxIRkNRWFpEVXl4RFFWZHFRaXhWUVVGVkxFTkJiMEpPTEdWQlFXVXNRMEZSV0N4bFFVRmxMRU5CUVVNN1RVRkRXaXhOUVVGTkxFVkJRVU1zVTBGQlV5eEhRVU51UWp0SlFYcERZaXhCUVRCRFdTeHhRa0V4UTFNc1EwRlhha0lzVlVGQlZTeERRVzlDVGl4bFFVRmxMRU5CVjFnc2JVSkJRVzFDTEVOQlFVTTdUVUZEYUVJc1UwRkJVeXhGUVVGRExFbEJRVWs3VFVGRFpDeE5RVUZOTEVWQlFVTXNUMEZCVHp0TlFVTmtMRXRCUVVzc1JVRkJReXhQUVVGaExFZEJTWFJDTzAxQmFrUmlMRUZCT0VOblFpeHhRa0U1UTBzc1EwRlhha0lzVlVGQlZTeERRVzlDVGl4bFFVRmxMRU5CVjFnc2JVSkJRVzFDTEVOQlNXWXNRMEZCUXl4RFFVRkRPMUZCUTBVc1RVRkJUU3hGUVVGRExFTkJRVU1zUjBGRFdEdEZRV2hFYWtJc1FVRnRSRkVzY1VKQmJrUmhMRU5CVjJwQ0xGVkJRVlVzUTBGM1EwNHNaVUZCWlN4RFFVRkRPMGxCUTFvc1MwRkJTeXhGUVVGRExFbEJRVWs3U1VGRFZpeE5RVUZOTEVWQlFVTXNWVUZCVlN4SFFVbHdRanRKUVhwRVZDeEJRWE5FV1N4eFFrRjBSRk1zUTBGWGFrSXNWVUZCVlN4RFFYZERUaXhsUVVGbExFTkJSMWdzUTBGQlF5eERRVUZETzAxQlEwVXNUMEZCVHl4RlFVRkRMRWxCUVVrc1IwRkRaanRGUVhoRVlpeEJRVEJFVVN4eFFrRXhSR0VzUTBGWGFrSXNWVUZCVlN4RFFTdERUaXhyUWtGQmEwSXNRMEZCUXp0SlFVTm1MR2RDUVVGblFpeEZRVUZETEU5QlFXRTdTVUZET1VJc1RVRkJUU3hGUVVGRExFbEJRVWs3U1VGRFdDeFJRVUZSTEVWQlFVTXNVVUZCVVR0SlFVTnFRaXhWUVVGVkxFVkJRVU1zWTBGQll6dEpRVU42UWl4UFFVRlBMRVZCUVVNc1NVRkJTU3hIUVc5Q1pqdEpRVzVHVkN4QlFXZEZXU3h4UWtGb1JWTXNRMEZYYWtJc1ZVRkJWU3hEUVN0RFRpeHJRa0ZCYTBJc1EwRk5aQ3hsUVVGbExFTkJRVU03VFVGRFdpeFBRVUZQTEVWQlFVTXNUVUZCVFN4SFFVMXFRanROUVhaRllpeEJRVzFGYjBJc2NVSkJia1ZETEVOQlYycENMRlZCUVZVc1EwRXJRMDRzYTBKQlFXdENMRU5CVFdRc1pVRkJaU3hEUVVWWUxGVkJRVlVzUTBGRFRpeERRVUZETEVOQlFVTTdVVUZEUlN4TFFVRkxMRVZCUVVNc1QwRkJUeXhIUVVOb1FqdEpRWEpGY2tJc1FVRjNSVmtzY1VKQmVFVlRMRU5CVjJwQ0xGVkJRVlVzUTBFclEwNHNhMEpCUVd0Q0xFTkJZMlFzV1VGQldTeERRVUZETzAxQlExUXNVVUZCVVN4RlFVRkRMRTFCUVUwc1IwRlRiRUk3VFVGc1JtSXNRVUV3UldkQ0xIRkNRVEZGU3l4RFFWZHFRaXhWUVVGVkxFTkJLME5PTEd0Q1FVRnJRaXhEUVdOa0xGbEJRVmtzUTBGRlVpeFBRVUZQTEVOQlFVTTdVVUZEU2l4UFFVRlBMRVZCUVVNc1RVRkJUVHRSUVVOa0xFdEJRVXNzUlVGQlF5eFBRVUZQTEVkQlEyaENPMDFCTjBWcVFpeEJRVGhGWjBJc2NVSkJPVVZMTEVOQlYycENMRlZCUVZVc1EwRXJRMDRzYTBKQlFXdENMRU5CWTJRc1dVRkJXU3hEUVUxU0xHbENRVUZwUWl4RFFVRkRPMUZCUTJRc1NVRkJTU3hGUVVGRExFTkJRVU03VVVGRFRpeExRVUZMTEVWQlFVTXNRMEZCUXl4SFFVTldPenRCUVdwR2FrSXNRVUZ4Umtrc2NVSkJja1pwUWl4RFFYRkdha0lzWjBKQlFXZENMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVU1zWlVGQlpTeEhRVU14UWpzN1FVRjJSa3dzUVVGM1Jra3NjVUpCZUVacFFpeERRWGRHYWtJc2QwSkJRWGRDTEVOQlFVTTdSVUZEY2tJc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeFBRVUZQTEVWQlFVVXNVMEZCVXl4SFFWZHlRanRGUVhKSFRDeEJRVEpHVVN4eFFrRXpSbUVzUTBGM1JtcENMSGRDUVVGM1FpeERRVWR3UWl4VlFVRlZMRVZCTTBac1FpeHhRa0ZCY1VJc1EwRjNSbXBDTEhkQ1FVRjNRaXhEUkhaRU5VSXNVVUZCVVN4RFFUUkdTaXhoUVVGaExFTkJkVU5VTEVsQlFVa3NRMEZ0UWtFc1RVRkJUU3hCUVVGQkxFbEJRVXNzUlVGQlFTeEJRVUZCTEZGQlFVTXNRVUZCUVN4SlFYUktlRUlzVVVGQlVTeERRVFJHU2l4aFFVRmhMRU5CZFVOVUxFbEJRVWtzUTBOd1Mxb3NjVUpCUVhGQ0xFTkJkMFpxUWl4M1FrRkJkMElzUTBRclJtaENMRTFCUVUwc1FVRkJRU3hKUVVGTExFVkJRVUVzUVVGQlFTeFJRVUZETEVGQlFVRXNSME0xUmt3N1NVRkRVQ3huUWtGQlowSXNSVUZCUlN4SlFVRkpMRWRCUTNwQ08wVkJOMFpVTEVGQk9FWlJMSEZDUVRsR1lTeERRWGRHYWtJc2QwSkJRWGRDTEVOQlRYQkNMRXRCUVVzc1EwRkJRenRKUVVOR0xFMUJRVTBzUlVGQlJTeERRVUZETzBsQlExUXNZMEZCWXl4RlFVRkZMRTFCUVUwc1IwRkpla0k3U1VGd1IxUXNRVUZwUjFrc2NVSkJha2RUTEVOQmQwWnFRaXgzUWtGQmQwSXNRMEZOY0VJc1MwRkJTeXhEUVVkRUxFTkJRVU1zUTBGQlF6dE5RVU5GTEdOQlFXTXNSVUZCUlN4TlFVRk5MRWRCUTNwQ096dEJRVWRVTEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVGMFIzaERMRUZCZDBaSkxIRkNRWGhHYVVJc1EwRjNSbXBDTEhkQ1FVRjNRaXhEUVdWTE8wbEJRM0pDTEV0QlFVc3NSVUZCUlN4SlFVRkpPMGxCUTFnc1QwRkJUeXhGUVVGRkxFOUJRVThzUjBGRGJrSTdPMEZCUlV3c1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFUVkhlRU1zUVVGWFNTeHhRa0ZZYVVJc1EwRlhha0lzVlVGQlZTeERRV3RIU3p0SlFVTlFMRXRCUVVzc1JVRkJReXhuUWtGQlowSXNSMEZEZWtJN08wRkJSVXdzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVdwSWRrTXNRVUZYU1N4eFFrRllhVUlzUTBGWGFrSXNWVUZCVlN4RFFYVkhTenRKUVVOUUxFdEJRVXNzUlVGQlF5eEhRVUZITEVkQlExbzdPMEZCU1ZRc1pVRkJaVHRCUVVObUxFRkJRMGtzY1VKQlJHbENMRU5CUTJwQ0xHVkJRV1VzUTBGQlF6dEZRVU5hTEVsQlFVa3NSVUZCUXl4RFFVRkRPMFZCUTA0c1QwRkJUeXhGUVVGRExFTkJRVU1zUTFJNVRWSXNTVUZCU1N4SFVXOVBVanRGUVhwQ1RDeEJRVWxSTEhGQ1FVcGhMRU5CUTJwQ0xHVkJRV1VzUTBGSFdDeGxRVUZsTEVOQlFVTTdTVUZEV2l4UFFVRlBMRVZCUVVNc1NVRkJTVHRKUVVOYUxGZEJRVmNzUlVGQlF5eE5RVUZOTzBsQlEyeENMRWxCUVVrc1JVRkJReXhEUVVGRExFZEJRMVE3UlVGU1ZDeEJRVk5STEhGQ1FWUmhMRU5CUTJwQ0xHVkJRV1VzUTBGUldDeGxRVUZsTEVOQlFVTTdTVUZEV2l4aFFVRmhMRVZTY2s1b1FpeEpRVUZKTzBsUmMwNUVMRXRCUVVzc1JVRkJReXhIUVVGSExFZEJTVm83U1VGbVZDeEJRVmxaTEhGQ1FWcFRMRU5CUTJwQ0xHVkJRV1VzUTBGUldDeGxRVUZsTEVOQlIxZ3NNRUpCUVRCQ0xFTkJRVU03VFVGRGRrSXNZMEZCWXl4RlFVRkZMRTFCUVUwc1IwRkRla0k3UlVGa1lpeEJRV2RDVVN4eFFrRm9RbUVzUTBGRGFrSXNaVUZCWlN4RFFXVllMSE5DUVVGelFpeERRVUZETzBsQlEyNUNMRWxCUVVrc1JVRkJReXhEUVVGRE8wbEJRMDRzWVVGQllTeEZVamRPYUVJc1NVRkJTU3hIVVRoT1NqdEZRVzVDVkN4QlFXOUNVU3h4UWtGd1FtRXNRMEZEYWtJc1pVRkJaU3hEUVcxQ1dDeHRRa0ZCYlVJc1EwRkJRenRKUVVOb1FpeExRVUZMTEVWQlFVTXNTMEZCU3p0SlFVTllMRlZCUVZVc1JVRkJReXhMUVVGTE8wbEJRMmhDTEdGQlFXRXNSVUZCUXl4SlFVRkpMRWRCUTNKQ096dEJRWGhDVkN4QlFUQkNTU3h4UWtFeFFtbENMRU5CTUVKcVFpeGxRVUZsTEVOQlFVTTdSVUZEV2l4TlFVRk5MRVZCUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOU2RFOVlMRWxCUVVrN1JWRjFUMHdzUzBGQlN5eEZRVUZETEV0QlFVczdSVUZEV0N4TFFVRkxMRVZCUVVNc1EwRkJReXhIUVVOV096dEJRVGxDVEN4QlFTdENTU3h4UWtFdlFtbENMRU5CSzBKcVFpeHJRa0ZCYTBJc1EwRkJRenRGUVVObUxFdEJRVXNzUlVGQlF5eERRVUZETzBWQlExQXNTMEZCU3l4RlFVRkRMRXRCUVVzc1IwRlJaRHRGUVhwRFRDeEJRV3REVVN4eFFrRnNRMkVzUTBFclFtcENMR3RDUVVGclFpeEhRVWRhTEVOQlFVTXNRMEZCUXp0SlFVTkJMRTlCUVU4c1JVRkJReXhKUVVGSkxFZEJRMlk3UlVGd1ExUXNRVUZ4UTFFc2NVSkJja05oTEVOQkswSnFRaXhyUWtGQmEwSXNRMEZOWkN4bFFVRmxMRU5CUVVNN1NVRkRXaXhKUVVGSkxFVkJRVU1zUTBGQlF6dEpRVU5PTEU5QlFVOHNSVUZCUXl4RFFVRkRMRU5TYkZCYUxFbEJRVWtzUjFGdFVFbzdPMEZCZUVOVUxFRkJORU5STEhGQ1FUVkRZU3hEUVRKRGFrSXNWVUZCVlN4RFFVTk9MR3RDUVVGclFpeERRVUZETzBWQlEyWXNUVUZCVFN4RlFVRkRMRWRCUVVjc1EwRkJReXhMUVVGTExFTkJRVU1zVDBGQllUdEZRVU01UWl4TlFVRk5MRVZCUVVNc1VVRkJVVHRGUVVObUxFOUJRVThzUlVGQlF5eEpRVUZKTzBWQlExb3NWVUZCVlN4RlFVRkRMRWxCUVVrc1IwRkxiRUk3UlVGeVJGUXNRVUZwUkZrc2NVSkJha1JUTEVOQk1rTnFRaXhWUVVGVkxFTkJRMDRzYTBKQlFXdENMRWRCUzFvc1EwRkJReXhEUVVGRE8wbEJRMEVzVDBGQlR5eEZRVUZETEVsQlFVazdTVUZEV2l4WFFVRlhMRVZCUVVNc1RVRkJUU3hIUVVOeVFqczdRVUZ3UkdJc1FVRnpSRkVzY1VKQmRFUmhMRU5CTWtOcVFpeFZRVUZWTEVOQlYwNHNaVUZCWlN4RFFVRkRPMFZCUTFvc1QwRkJUeXhGUVVGRExFbEJRVWs3UlVGRFdpeE5RVUZOTEVWQlFVTXNTVUZCU1R0RlFVTllMRmRCUVZjc1JVRkJReXhOUVVGTkxFZEJRM0pDT3p0QlFURkVWQ3hCUVRKRVVTeHhRa0V6UkdFc1EwRXlRMnBDTEZWQlFWVXNRMEZuUWs0c1pVRkJaU3hEUVVGRE8wVkJRMW9zUzBGQlN5eEZRVUZETEVsQlFVazdSVUZEVml4TlFVRk5MRVZCUVVNc1ZVRkJWU3hIUVVOd1FqczdRVUU1UkZRc1FVRXJSRkVzY1VKQkwwUmhMRU5CTWtOcVFpeFZRVUZWTEVOQmIwSk9MR3RDUVVGclFpeERRVUZETzBWQlEyWXNWMEZCVnl4RlFVRkRMRTlCUVU4c1IwRmhkRUk3UlVFM1JWUXNRVUZ0Ulc5Q0xIRkNRVzVGUXl4RFFUSkRha0lzVlVGQlZTeERRVzlDVGl4clFrRkJhMElzUTBGRlpDeGxRVUZsTEVOQlExZ3NWVUZCVlN4RFFVTk9MRU5CUVVNc1EwRkJRenRKUVVORkxFdEJRVXNzUlVGQlF5eFBRVUZoTEVkQlEzUkNPMFZCY2tWeVFpeEJRWGxGWjBJc2NVSkJla1ZMTEVOQk1rTnFRaXhWUVVGVkxFTkJiMEpPTEd0Q1FVRnJRaXhEUVZOa0xGbEJRVmtzUTBGRFVpeFBRVUZQTEVOQlFVTTdTVUZEU2l4UFFVRlBMRVZCUVVNc1VVRkJVU3hIUVVOdVFqczdRVUV6UldwQ0xFRkJLMFZaTEhGQ1FTOUZVeXhEUVRKRGFrSXNWVUZCVlN4RFFXMURUaXh6UWtGQmMwSXNRMEZEYkVJc1EwRkJReXhEUVVGRE8wVkJRMFVzVjBGQlZ5eEZRVUZETEVkQlFVYzdSVUZEWml4VlFVRlZMRVZCUVVNc1IwRkJSenRGUVVOa0xGRkJRVkVzUlVGQlF5eE5RVUZOTzBWQlEyWXNUMEZCVHl4RlFVRkRMRXRCUVVzN1JVRkRZaXhQUVVGUExFVkJRVU1zVjBGQlZ6dEZRVU51UWl4clFrRkJhMElzUlVGQlF5eERRVUZETzBWQlEzQkNMR3RDUVVGclFpeEZRVUZETEZGQlFWRTdSVUZETTBJc1lVRkJZU3hGUVVGRExGRkJRVkU3UlVGRGRFSXNTMEZCU3l4RlFVRkRMRWxCUVVrc1IwRkRZanM3UVVGNlJtSXNRVUV5UmxFc2NVSkJNMFpoTEVOQk1rTnFRaXhWUVVGVkxFTkJaMFJPTEcxQ1FVRnRRaXhEUVVGRE8wVkJRMmhDTEZOQlFWTXNSVUZCUXl4SlFVRkpMRWRCUTJwQ096dEJRVGRHVkN4QlFTdEdTU3h4UWtFdlJtbENMRU5CSzBacVFpeG5Ra0ZCWjBJc1EwRkJRenRGUVVOaUxFOUJRVThzUlVGQlF5eEpRVUZKTzBWQlExb3NVMEZCVXl4RlFVRkRMRWxCUVVrc1IwRTJRMnBDTzBWQk9VbE1MRUZCYTBkUkxIRkNRV3hIWVN4RFFTdEdha0lzWjBKQlFXZENMRWRCUjFZc1EwRkJReXhEUVVGRE8wbEJRMEVzVDBGQlR5eEZRVUZETEVsQlFVa3NSMEZEWmp0RlFYQkhWQ3hCUVhGSFVTeHhRa0Z5UjJFc1EwRXJSbXBDTEdkQ1FVRm5RaXhEUVUxYUxHMUNRVUZ0UWl4RFFVRkRPMGxCUTJoQ0xFdEJRVXNzUlZKNlZFd3NUMEZCWVR0SlVUQlVZaXhsUVVGbExFVkJRVVVzU1VGQlNUdEpRVU55UWl4UFFVRlBMRVZCUVVVc1dVRkJXVHRKUVVOeVFpeFhRVUZYTEVWQlFVVXNTVUZCU1R0SlFVTnFRaXhQUVVGUExFVkJRVVVzVVVGQlVUdEpRVU5xUWl4TlFVRk5MRVZCUVVVc1RVRkJUVHRKUVVOa0xGZEJRVmNzUlVGQlJTeE5RVUZOTEVkQmFVTjBRanRKUVRkSlZDeEJRVFpIV1N4eFFrRTNSMU1zUTBFclJtcENMR2RDUVVGblFpeERRVTFhTEcxQ1FVRnRRaXhEUVZGbUxGVkJRVlVzUTBGQlF6dE5RVU5RTEU5QlFVOHNSVUZCUlN4SlFVRkpPMDFCUTJJc1VVRkJVU3hGUVVGRkxGRkJRVkU3VFVGRGJFSXNTMEZCU3l4RlFVRkZMRWRCUVVjN1RVRkRWaXhOUVVGTkxFVkJRVVVzU1VGQlNUdE5RVU5hTEdOQlFXTXNSVUZCUlN4TlFVRk5PMDFCUTNSQ0xFMUJRVTBzUlVGQlJTeFZRVUZWTzAxQlEyeENMR05CUVdNc1JVRkJSU3hKUVVGSkxFZEJWM1pDTzAxQkwwaGlMRUZCY1VoblFpeHhRa0Z5U0Vzc1EwRXJSbXBDTEdkQ1FVRm5RaXhEUVUxYUxHMUNRVUZ0UWl4RFFWRm1MRlZCUVZVc1FVRlJUQ3hSUVVGUkxFTkJRVU03VVVGRFRpeFBRVUZQTEVWQlFVVXNSVUZCUlR0UlFVTllMRkZCUVZFc1JVRkJSU3hSUVVGUk8xRkJRMnhDTEVsQlFVa3NSVUZCUlN4SFFVRkhPMUZCUTFRc1IwRkJSeXhGUVVGRkxFZEJRVWM3VVVGRFVpeFRRVUZUTEVWQlFVVXNNRUpCUVRCQ08xRkJRM0pETEZkQlFWY3NSVUZCUlN4eFFrRkJjVUk3VVVGRGJFTXNXVUZCV1N4RlFVRkZMSEZDUVVGeFFqdFJRVU51UXl4aFFVRmhMRVZCUVVVc2MwSkJRWE5DTEVkQlEzaERPMGxCT1VocVFpeEJRV2RKV1N4eFFrRm9TVk1zUTBFclJtcENMR2RDUVVGblFpeERRVTFhTEcxQ1FVRnRRaXhCUVRKQ1pDeFBRVUZQTEVOQlFVTTdUVUZEVEN4WFFVRlhMRVZCUVVVc1IwRkJSenROUVVOb1FpeFZRVUZWTEVWQlFVVXNUMEZCWVN4SFFWVTFRanROUVRWSllpeEJRVzFKWjBJc2NVSkJia2xMTEVOQkswWnFRaXhuUWtGQlowSXNRMEZOV2l4dFFrRkJiVUlzUVVFeVFtUXNUMEZCVHl4RFFVZEtMRlZCUVZVc1EwRkJRenRSUVVOUUxFOUJRVThzUlVGQlJTeFpRVUZaTEVkQlEzaENPMDFCY2tscVFpeEJRWFZKYjBJc2NVSkJka2xETEVOQkswWnFRaXhuUWtGQlowSXNRMEZOV2l4dFFrRkJiVUlzUVVFeVFtUXNUMEZCVHl4QlFVMUlMRmxCUVZrc1EwRkRWQ3hWUVVGVkxFRkJRVUVzVVVGQlVTeERRVUZETzFGQlEyWXNWVUZCVlN4RlFVRkZMSE5DUVVGelFqdFJRVU5zUXl4aFFVRmhMRVZCUVVVc1EwRkJReXhIUVVOdVFqczdRVUV4U1hKQ0xFRkJLMGxKTEhGQ1FTOUphVUlzUTBFclNXcENMSGRDUVVGM1FpeERRVUZETzBWQlEzSkNMRTlCUVU4c1JVRkJSU3hsUVVGbExFZEJRek5DT3p0QlFVTkVMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEUxQlFVMDdSVUZzU25oRExFRkJNRUpKTEhGQ1FURkNhVUlzUTBFd1FtcENMR1ZCUVdVc1EwRjVTRXM3U1VGRFdpeE5RVUZOTEVWQlFVTXNRMEZCUXp0SlFVTlNMRXRCUVVzc1JVRkJReXhKUVVGSkxFZEJTV0k3U1VGNlNsUXNRVUZ6U2xrc2NVSkJkRXBUTEVOQmJVcGlMR1ZCUVdVc1EwRkhXQ3hEUVVGRExFTkJRVU03VFVGRFJTeFBRVUZQTEVWQlFVTXNTVUZCU1N4SFFVTm1PMFZCZUVwaUxFRkJLMEpKTEhGQ1FTOUNhVUlzUTBFclFtcENMR3RDUVVGclFpeERRVEpJU3p0SlFVTm1MRXRCUVVzc1JVRkJReXhMUVVGTE8wbEJRMWdzVDBGQlR5eEZRVUZETEVOQlFVTXNSMEZEV2p0RlFUZEtWQ3hCUVZOUkxIRkNRVlJoTEVOQlEycENMR1ZCUVdVc1EwRlJXQ3hsUVVGbExFTkJjMHBMTzBsQlExb3NTMEZCU3l4RlFVRkRMRWRCUVVjc1IwRkRXanRGUVdwTFlpeEJRVzlDVVN4eFFrRndRbUVzUTBGRGFrSXNaVUZCWlN4RFFXMUNXQ3h0UWtGQmJVSXNRMEU0U1VzN1NVRkRhRUlzWVVGQllTeEZRVUZETEVsQlFVazdTVUZEYkVJc1MwRkJTeXhGUVVGRExFdEJRVXNzUjBGRFpEdEZRWEpMWWl4QlFYRkhVU3h4UWtGeVIyRXNRMEVyUm1wQ0xHZENRVUZuUWl4RFFVMWFMRzFDUVVGdFFpeERRVzFGU3p0SlFVTm9RaXhQUVVGUExFVkJRVVVzVlVGQlZUdEpRVU51UWl4TlFVRk5MRVZCUVVVc1VVRkJVU3hIUVVOdVFqczdRVUZIVkN4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQk9VdDJReXhCUVVOSkxIRkNRVVJwUWl4RFFVTnFRaXhsUVVGbExFTkJPRXRMTzBsQlExb3NUMEZCVHl4RlFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERVak5ZYUVJc1NVRkJTU3hIVVcxWlNqdEpRWGhNVkN4QlFWTlJMSEZDUVZSaExFTkJRMnBDTEdWQlFXVXNRMEZSV0N4bFFVRmxMRU5CZDB0TE8wMUJRMW9zU1VGQlNTeEZRVUZETEVOQlFVTTdUVUZEVGl4TFFVRkxMRVZCUVVNc1NVRkJTU3hIUVVOaU8wbEJjRXhpTEVGQlowSlJMSEZDUVdoQ1lTeERRVU5xUWl4bFFVRmxMRU5CWlZnc2MwSkJRWE5DTEVOQmNVdExPMDFCUTI1Q0xFOUJRVThzUlVGQlF5eEpRVUZKTEVkQlEyWTdPMEZCUzJJc1FVRkZVU3hyUWtGR1ZTeERRVU5rTEZWQlFWVXNRMEZEVGl4RFFVRkRMRU5CUVVNN1JVRkRSU3hUUVVGVExFVkJRVU1zZDBKQlFYZENMRU5CUVVNc1kwRkJZeXhIUVVOd1JEczdRVUZKVkN4QlFVRkJMREJDUVVFd1FpeERRVUZETzBWQlEzWkNMRTlCUVU4c1JVRkJSU3hKUVVGSkxFZEJNRU5vUWp0RlFUTkRSQ3hCUVVWSkxEQkNRVVp6UWl4RFFVVjBRaXhMUVVGTExFTkJRVU03U1VGRFJpeFJRVUZSTEVWQlFVVXNVVUZCVVR0SlFVTnNRaXhqUVVGakxFVkJRVVVzUjBGQlJ6dEpRVU51UWl4UFFVRlBMRVZCUVVVc1EwRkJRenRKUVVOV0xFbEJRVWtzUlVGQlJTeFBRVUZQTEVkQmFVTm9RanRKUVhaRFRDeEJRVTlSTERCQ1FWQnJRaXhEUVVWMFFpeExRVUZMTEVkQlMwTXNTMEZCU3l4RFFVRkRPMDFCUTBvc1VVRkJVU3hGUVVGRkxGRkJRVkU3VFVGRGJFSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1RVRkRWQ3haUVVGWkxFVkJRVVVzUjBGQlJ6dE5RVU5xUWl4TlFVRk5MRVZCUVVVc1QwRkJUenROUVVObUxFOUJRVThzUlVGQlJTeExRVUZMTzAxQlEyUXNWVUZCVlN4RlFVRkZMRWRCUVVjN1RVRkRaaXhUUVVGVExFVkJRVVVzU1VGQlNTeEhRVlZzUWp0TlFYaENWQ3hCUVdWWkxEQkNRV1pqTEVOQlJYUkNMRXRCUVVzc1IwRkxReXhMUVVGTExFRkJVVVlzVVVGQlVTeERRVUZETzFGQlJVNHNVVUZCVVN4RlFVRkZMRkZCUVZFN1VVRkRiRUlzVTBGQlV5eEZRVUZGTEVkQlFVYzdVVUZEWkN4WFFVRlhMRVZCUVVVc1EwRkJRenRSUVVOa0xFbEJRVWtzUlVGQlJTeERRVUZETzFGQlExQXNSMEZCUnl4RlFVRkZMRU5CUVVNN1VVRkRUaXhQUVVGUExFVkJRVVVzZVVKQlFYbENMRWRCUTNKRE8wbEJka0ppTEVGQk1rSm5RaXd3UWtFelFsVXNRMEZGZEVJc1MwRkJTeXhCUVhWQ1FTeFJRVUZSTEVkQlEwZ3NTMEZCU3l4QlFVTkdMRkZCUVZFc1EwRkJRenROUVVOT0xFOUJRVThzUlVGQlJTeFhRVUZYTzAxQlEzQkNMRXRCUVVzc1JWSm9ZbUlzVDBGQmFVSXNSMUZwWWxvN1NVRTVRbXBDTEVGQmEwTlpMREJDUVd4RFl5eERRVVYwUWl4TFFVRkxMRUZCSzBKQkxGTkJRVk1zUjBGRFNpeExRVUZMTEVOQlFVTTdUVUZEU2l4UFFVRlBMRVZCUVVVc1JVRkJSVHROUVVOWUxFMUJRVTBzUlVGQlJTeFhRVUZYTEVkQlEzUkNPMFZCUjFRc1FVRkJRU3hqUVVGakxFTkJlRU5zUWl3d1FrRkJNRUlzUTBGM1EwdzdTVUZEWWl4UFFVRlBMRVZCUVVVc1dVRkJXU3hIUVVONFFqczdRVU5zWTB3c1FVRkRTU3hsUVVSWExFTkJRMWdzVTBGQlV5eERRVUZETzBWQlEwNHNTMEZCU3l4RlFVRkRMRXRCUVVzc1IwRlJaRHRGUVZaTUxFRkJSMUVzWlVGSVR5eERRVU5ZTEZOQlFWTXNRMEZGVEN4alFVRmpMRU5CUVVNN1NVRkRXQ3hQUVVGUExFVkJRVU1zUTBGQlF5eEhRVXRhTzBsQlZGUXNRVUZMV1N4bFFVeEhMRU5CUTFnc1UwRkJVeXhEUVVWTUxHTkJRV01zUTBGRlZpeFBRVUZQTEVOQlFVTTdUVUZEU2l4UFFVRlBMRVZCUVVNc1NVRkJTVHROUVVOYUxFMUJRVTBzUlVGQlF5eERRVUZETEVkQlExZzdPMEZCU1dJc1FVRkJRU3huUWtGQlowSXNRMEZCUXp0RlFVTmlMRXRCUVVzc1JVRkJReXhKUVVGSk8wVkJRMVlzWlVGQlpTeEZRVUZETEZGQlFWRTdSVUZEZUVJc1ZVRkJWU3hGUVVGRExFbEJRVWtzUjBGNVJHeENPMFZCTlVSRUxFRkJTVWtzWjBKQlNsa3NRMEZKV2l4RlFVRkZPMFZCU2s0c1owSkJRV2RDTEVOQlMxb3NSVUZCUlN4RFFVRkRPMGxCUTBNc1QwRkJUeXhGUVVGRExHZENRVUZuUWp0SlFVTjRRaXhUUVVGVExFVkJRVU1zU1VGQlNUdEpRVU5rTEZkQlFWY3NSVUZCUXl4SFFVRkhMRWRCU1d4Q08wbEJXa3dzUVVGVFVTeG5Ra0ZVVVN4RFFVbGFMRVZCUVVVc1FVRkxSeXhaUVVGWk8wbEJWSEpDTEdkQ1FVRm5RaXhEUVV0YUxFVkJRVVVzUVVGSlJ5eFpRVUZaTEVOQlFVTTdUVUZEVml4WlFVRlpMRVZCUVVNc1NVRkJTU3hIUVVOd1FqdEZRVmhVTEVGQllVa3NaMEpCWWxrc1EwRmhXaXhGUVVGRkxFTkJRVU03U1VGRFF5eFZRVUZWTEVWQlFVTXNUMEZCWVR0SlFVTjRRaXhYUVVGWExFVkJRVU1zUjBGQlJ6dEpRVU5tTEdOQlFXTXNSVUZCUXl4VFFVRlRPMGxCUTNoQ0xGVkJRVlVzUlVGQlF5eEpRVUZKTEVkQlMyeENPMGxCZEVKTUxFRkJhMEpSTEdkQ1FXeENVU3hEUVdGYUxFVkJRVVVzUTBGTFJTeFBRVUZQTEVOQlFVTTdUVUZEU2l4alFVRmpMRVZCUVVNc1NVRkJTVHROUVVOdVFpeFhRVUZYTEVWQlFVTXNSMEZCUnl4SFFVTnNRanRGUVhKQ1ZDeEJRWFZDU1N4blFrRjJRbGtzUTBGMVFsb3NSVUZCUlN4RFFVRkRPMGxCUTBNc1MwRkJTeXhGUVVGRExFOUJRV0VzUjBGUmRFSTdTVUZvUTB3c1FVRjVRbEVzWjBKQmVrSlJMRU5CZFVKYUxFVkJRVVVzUTBGRlJTeERRVUZETEVOQlFVTTdUVUZEUlN4TlFVRk5MRVZCUVVNc1EwRkJRenROUVVOU0xGZEJRVmNzUlVGQlF5eFBRVUZQTEVkQlEzUkNPMGxCTlVKVUxFRkJOa0pSTEdkQ1FUZENVU3hEUVhWQ1dpeEZRVUZGTEVGQlRVY3NZMEZCWXl4RFFVRkRPMDFCUTFvc1UwRkJVeXhGUVVGRExFbEJRVWtzUjBGRGFrSTdSVUV2UWxRc1FVRnBRMGtzWjBKQmFrTlpMRU5CYVVOYUxHbENRVUZwUWl4RFFVRkRPMGxCUTJRc1ZVRkJWU3hGUVVGRExFdEJRVXNzUjBGRGJrSTdSVUZ1UTB3c1FVRnhRMUVzWjBKQmNrTlJMRU5CYjBOYUxFdEJRVXNzUTBGRFJDeEZRVUZGTEVOQlFVTTdTVUZEUXl4aFFVRmhMRVZCUVVNc1IwRkJSeXhEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZoTEVkQlNYaERPMGxCTVVOVUxFRkJkVU5aTEdkQ1FYWkRTU3hEUVc5RFdpeExRVUZMTEVOQlEwUXNSVUZCUlN4QlFVVkhMRmRCUVZjc1EwRkJRenROUVVOVUxHRkJRV0VzUlVGQlF5eEpRVUZKTEVkQlEzSkNPMFZCZWtOaUxFRkJOa05STEdkQ1FUZERVU3hEUVRSRFdpeExRVUZMTEVOQlFVRXNRVUZCUVN4SlFVRkRMRU5CUVVzc1ZVRkJWU3hCUVVGbUxFbEJRMEVzUzBGQlN5eERRVUZETzBsQlEwb3NVVUZCVVN4RlFVRkRMRTFCUVUwN1NVRkRaaXhYUVVGWExFVkJRVU1zVFVGQlRTeEhRVmR5UWp0SlFURkVWQ3hCUVdkRVdTeG5Ra0ZvUkVrc1EwRTBRMW9zUzBGQlN5eERRVUZCTEVGQlFVRXNTVUZCUXl4RFFVRkxMRlZCUVZVc1FVRkJaaXhKUVVOQkxFdEJRVXNzUVVGSFJpeFJRVUZSTEVOQlFVTTdUVUZEVGl4WFFVRlhMRVZCUVVNc1EwRkJReXhIUVVOb1FqdEpRVU5FTEVGQlFVRXNZMEZCWXl4RFFXNUVNVUlzWjBKQlFXZENMRU5CTkVOYUxFdEJRVXNzUTBGQlFTeEJRVUZCTEVsQlFVTXNRMEZCU3l4VlFVRlZMRUZCUVdZc1NVRkRRU3hMUVVGTExFTkJUV003VFVGRFlpeFBRVUZQTEVWQlFVTXNXVUZCV1R0TlFVTndRaXhMUVVGTExFVkJRVU1zUjBGQlJ6dE5RVU5VTEUxQlFVMHNSVUZCUXl4SFFVRkhPMDFCUTFZc1RVRkJUU3hGUVVGRExFTkJRVU03VFVGRFVpeFBRVUZQTEVWQlFVTXNXVUZCV1N4SFFVTjJRanM3UVVGSllpeEJRVUZCTEdkQ1FVRm5RaXhEUVVGRE8wVkJRMklzVDBGQlR5eEZRVUZETEVsQlFVazdSVUZEV2l4TlFVRk5MRVZCUVVNc1MwRkJTenRGUVVOYUxGVkJRVlVzUlVGQlF5eE5RVUZOTEVkQlEzQkNPenRCUlRkRlJEczdPenRIUVVsSE8wRkJRMGdzUVVGQlFTeG5RMEZCWjBNc1EwRkJRenRGUVVNdlFpeFZRVUZWTEVWQlFVVXNTVUZCU1N4SFFVTnFRanM3UVVGRFJDeEJRVUZCTEdkRFFVRm5ReXhCUVVGQkxHTkJRV01zUTBGQlF6dEZRVU0zUXl4UFFVRlBMRVZCUVVVc1MwRkJTenRGUVVOa0xFMUJRVTBzUlVGQlJTeExRVUZMTzBWQlEySXNUMEZCVHl4RlFVRkZMRWRCUVVjN1JVRkRXaXhMUVVGTExFVkJRVVVzU1VGQlNTeEhRVU5hT3p0QlFVTkVMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRVU4wUWl4QlFVRkJMR2REUVVGblF5eEJRVUZCTEdOQlFXTXNRVUZCUVN4bFFVRmxMRU5CUVVNN1NVRkROVVFzUzBGQlN5eEZRVUZGTEVsQlFVa3NSMEZEV2pzN1FVRkZTQ3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZLZEVJc1FVRkJRU3huUTBGQlowTXNRVUZCUVN4alFVRmpMRUZCUVVFc1pVRkJaU3hEUVV0RE8wbEJRelZFTEV0QlFVc3NSVUZCUlN4SlFVRkpMRWRCUTFvN08wRkJSVWdzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZCVkhaQ0xFRkJRVUVzWjBOQlFXZERMRUZCUVVFc1kwRkJZeXhCUVVGQkxHVkJRV1VzUTBGVlF6dEpRVU0xUkN4TFFVRkxMRVZCUVVVc1NVRkJTU3hIUVVOYU96dEJRVVZJTEVGQlFVRXNaME5CUVdkRExFRkJRVUVzWTBGQll5eEJRVUZCTEU5QlFVODdRVUZEY2tRc1owTkJRV2RETEVGQlFVRXNZMEZCWXl4QlFVRkJMRTFCUVUwc1EwRkJRenRGUVVOdVJDeFBRVUZQTEVWQlFVVXNSVUZCUlR0RlFVTllMRTlCUVU4c1JVRkJSU3haUVVGWk8wVkJRM0pDTEZGQlFWRXNSVUZCUlN4UlFVRlJMRWRCUTI1Q096dEJRVU5FTEVGQlFVRXNaME5CUVdkRExFRkJRVUVzWTBGQll5eEJRVUZCTEU5QlFVOHNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRNMFFzVjBGQlZ5eEZRVUZGTEhGQ1FVRnhRanRGUVVOc1F5eFpRVUZaTEVWQlFVVXNjVUpCUVhGQ08wVkJRMjVETEdGQlFXRXNSVUZCUlN4alFVRmpPMFZCUXpkQ0xHMUNRVUZ0UWl4RlFVRkZMR3RDUVVGclFqdEZRVU4yUXl4SFFVRkhMRVZCUVVVc1NVRkJTVHRGUVVOVUxFbEJRVWtzUlVGQlJTeEhRVUZITEVkQlExWTdPMEZCUTBRc1FVRkJRU3huUTBGQlowTXNRVUZCUVN4alFVRmpMRUZCUVVFc1QwRkJUeXhCUVVGQkxFMUJRVTBzUTBGQlF6dEZRVU14UkN4WFFVRlhMRVZCUVVVc2NVSkJRWEZDTzBWQlEyeERMRmxCUVZrc1JVRkJSU3h4UWtGQmNVSTdSVUZEYmtNc1lVRkJZU3hGUVVGRkxHVkJRV1U3UlVGRE9VSXNSMEZCUnl4RlFVRkZMRWxCUVVrN1JVRkRWQ3hKUVVGSkxFVkJRVVVzUjBGQlJ5eEhRVU5XT3p0QlFVTkVMRUZCUVVFc1owTkJRV2RETEVGQlFVRXNZMEZCWXl4QlFVRkJMRWxCUVVrc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGVFUXNWMEZCVnl4RlFVRkZMSEZDUVVGeFFqdEZRVU5zUXl4WlFVRlpMRVZCUVVVc2NVSkJRWEZDTzBWQlEyNURMRlZCUVZVc1JVRkJSU3hqUVVGak8wVkJRekZDTEdkQ1FVRm5RaXhGUVVGRkxHdENRVUZyUWp0RlFVTndReXhOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEVsQlFVa3NSVUZCUlN4SFFVRkhMRWRCUTFZN08wRkJRMFFzUVVGQlFTeG5RMEZCWjBNc1FVRkJRU3hqUVVGakxFRkJRVUVzU1VGQlNTeEJRVUZCTEUxQlFVMHNRMEZCUXp0RlFVTjJSQ3hYUVVGWExFVkJRVVVzY1VKQlFYRkNPMFZCUTJ4RExGbEJRVmtzUlVGQlJTeHhRa0ZCY1VJN1JVRkRia01zVlVGQlZTeEZRVUZGTEdWQlFXVTdSVUZETTBJc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeEpRVUZKTEVWQlFVVXNSMEZCUnl4SFFVTldPenRCUVVORUxFRkJRVUVzWjBOQlFXZERMRUZCUVVFc1kwRkJZeXhCUVVGQkxGZEJRVmNzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZETDBRc1NVRkJTU3hGUVVGRkxFbEJRVWs3UlVGRFZpeExRVUZMTEVWQlFVVXNSMEZCUnl4SFFVTllPenRCUVVORUxFRkJRVUVzWjBOQlFXZERMRUZCUVVFc1kwRkJZeXhCUVVGQkxGZEJRVmNzUVVGQlFTeE5RVUZOTEVOQlFVTTdSVUZET1VRc1NVRkJTU3hGUVVGRkxFbEJRVWs3UlVGRFZpeExRVUZMTEVWQlFVVXNSMEZCUnl4SFFVTllPenRCUVVORUxFRkJRVUVzWjBOQlFXZERMRU5CUVVNc1kwRkJZeXhEUVVGRE8wVkJRemxETEUxQlFVMHNSVUZCUlN4RFFVRkRMRWRCUTFZN08wRkJRMFFzUVVGQlFTeG5RMEZCWjBNc1EwRkJReXhEUVVGRExFTkJRVUVzUVVGQlFTeFhRVUZETEVGQlFVRXNSVUZCWVR0RlFVTTVReXhQUVVGUExFVkJRVVVzUzBGQlN5eEhRVU5tT3p0QlFVTkVMRUZCUVVFc1owTkJRV2RETEVOQlFVTXNRMEZCUXl4RFFVRkJMRUZCUVVFc1YwRkJReXhCUVVGQkxFTkJRVmtzVDBGQlR5eERRVUZETzBWQlEzSkVMRlZCUVZVc1JVRkJSU3hKUVVGSkxFZEJRMnBDT3p0QlFVTkVMRUZCUVVFc1owTkJRV2RETEVOQlFVTXNaMEpCUVdkQ08wRkJRMnBFTEdkRFFVRm5ReXhEUVVGRExHdENRVUZyUWp0QlFVTnVSQ3huUTBGQlowTXNRMEZCUXl4clFrRkJhMElzUTBGQlF6dEZRVU5zUkN4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxGZEJRVmNzUlVGQlJTeEpRVUZKTzBWQlEycENMRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJRMmhDTEUxQlFVMHNSVUZCUlN4RFFVRkRMRWRCUTFZN08wRkJRMFFzUVVGQlFTeG5RMEZCWjBNc1EwRkJReXhOUVVGTkxFTkJRVUVzUVVGQlFTeFhRVUZETEVGQlFVRXNSVUZCWVR0RlFVTnVSQ3hQUVVGUExFVkJRVVVzUjBGQlJ5eEhRVU5pT3p0QlFVTkVMRUZCUVVFc1owTkJRV2RETEVOQlFVTXNTVUZCU1N4RFFVRkJMRUZCUVVFc1YwRkJReXhEUVVGWkxHZENRVUZuUWl4QlFVRTFRaXhEUVVFMlFpeFBRVUZQTEVOQlFVTTdSVUZEZWtVc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNTMEZCU3l4RlFVRkZMRWRCUVVjN1JVRkRWaXhOUVVGTkxFVkJRVVVzUjBGQlJ6dEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeFJRVUZSTEVWQlFVVXNUVUZCVFR0RlFVTm9RaXhKUVVGSkxFVkJRVVVzWjBKQlFXZENPMFZCUTNSQ0xFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNUMEZCVHl4RlFVRkZMR2xDUVVGcFFpeEhRVU16UWpzN1FVRkRSQ3hCUVVGQkxHZERRVUZuUXl4RFFVRkRMRWxCUVVrc1EwRkJRU3hCUVVGQkxGZEJRVU1zUTBGQldTeHJRa0ZCYTBJc1FVRkJPVUlzUTBGQkswSXNUMEZCVHl4RFFVRkRPMFZCUXpORkxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVkQlFVYzdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzU1VGQlNTeEZRVUZGTEdkQ1FVRm5RanRGUVVOMFFpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRTlCUVU4c1JVRkJSU3h0UWtGQmJVSXNSMEZETjBJN08wRkJRMFFzUVVGQlFTeG5RMEZCWjBNc1EwRkJReXhKUVVGSkxFTkJRVUVzUVVGQlFTeFhRVUZETEVOQlFWa3NaMEpCUVdkQ0xFRkJRVFZDTEVOQlFUWkNMRTlCUVU4c1EwRkJRenRGUVVONlJTeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhMUVVGTExFVkJRVVVzUjBGQlJ6dEZRVU5XTEUxQlFVMHNSVUZCUlN4SFFVRkhPMFZCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRkZCUVZFc1JVRkJSU3hOUVVGTk8wVkJRMmhDTEVsQlFVa3NSVUZCUlN4blFrRkJaMEk3UlVGRGRFSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hQUVVGUExFVkJRVVVzYVVKQlFXbENMRWRCUXpOQ096dEJRVU5FTEVGQlFVRXNaME5CUVdkRExFTkJRVU1zU1VGQlNTeERRVUZCTEVGQlFVRXNWMEZCUXl4RFFVRlpMR3RDUVVGclFpeEJRVUU1UWl4RFFVRXJRaXhQUVVGUExFTkJRVU03UlVGRE0wVXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzUzBGQlN5eEZRVUZGTEVkQlFVYzdSVUZEVml4TlFVRk5MRVZCUVVVc1IwRkJSenRGUVVOWUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhSUVVGUkxFVkJRVVVzVFVGQlRUdEZRVU5vUWl4SlFVRkpMRVZCUVVVc1owSkJRV2RDTzBWQlEzUkNMRTFCUVUwc1JVRkJSU3hEUVVGRE8wVkJRMVFzVDBGQlR5eEZRVUZGTEcxQ1FVRnRRaXhIUVVNM1FqczdRVUZEUkN4QlFVRkJMR2REUVVGblF5eERRVUZETEVsQlFVa3NRMEZCUVN4QlFVRkJMRmRCUVVNc1EwRkJXU3hYUVVGWExFRkJRWFpDTEVOQlFYZENMRTlCUVU4c1EwRkJRenRGUVVOd1JTeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhMUVVGTExFVkJRVVVzUjBGQlJ6dEZRVU5XTEUxQlFVMHNSVUZCUlN4SFFVRkhPMFZCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRkZCUVZFc1JVRkJSU3hOUVVGTk8wVkJRMmhDTEVsQlFVa3NSVUZCUlN4blFrRkJaMEk3UlVGRGRFSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hQUVVGUExFVkJRVVVzV1VGQldTeEhRVU4wUWpzN1FVRkRSQ3hCUVVGQkxHZERRVUZuUXl4RFFVRkRMRWxCUVVrc1EwRkJRU3hCUVVGQkxGZEJRVU1zUTBGQldTeGhRVUZoTEVGQlFYcENMRU5CUVRCQ0xFOUJRVThzUTBGQlF6dEZRVU4wUlN4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeExRVUZMTEVWQlFVVXNSMEZCUnp0RlFVTldMRTFCUVUwc1JVRkJSU3hIUVVGSE8wVkJRMWdzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xGRkJRVkVzUlVGQlJTeE5RVUZOTzBWQlEyaENMRWxCUVVrc1JVRkJSU3huUWtGQlowSTdSVUZEZEVJc1RVRkJUU3hGUVVGRkxFTkJRVU03UlVGRFZDeFBRVUZQTEVWQlFVVXNZMEZCWXl4SFFVTjRRanM3UVVGRFJDeEJRVUZCTEdkRFFVRm5ReXhEUVVGRExFbEJRVWtzUTBGQlFTeEJRVUZCTEZkQlFVTXNRMEZCV1N4alFVRmpMRUZCUVRGQ0xFTkJRVEpDTEU5QlFVOHNRMEZCUXp0RlFVTjJSU3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TFFVRkxMRVZCUVVVc1IwRkJSenRGUVVOV0xFMUJRVTBzUlVGQlJTeEhRVUZITzBWQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhQUVVGUExFVkJRVVVzUTBGQlF6dEZRVU5XTEZGQlFWRXNSVUZCUlN4TlFVRk5PMFZCUTJoQ0xFbEJRVWtzUlVGQlJTeG5Ra0ZCWjBJN1JVRkRkRUlzVFVGQlRTeEZRVUZGTEVOQlFVTTdSVUZEVkN4UFFVRlBMRVZCUVVVc1kwRkJZeXhIUVVONFFqczdRVUZEUkN4QlFVRkJMR2REUVVGblF5eERRVUZETEVsQlFVa3NRMEZCUVN4QlFVRkJMRmRCUVVNc1EwRkJXU3hQUVVGUExFRkJRVzVDTEVOQlFXOUNMRTlCUVU4c1EwRkJRenRGUVVOb1JTeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhMUVVGTExFVkJRVVVzUjBGQlJ6dEZRVU5XTEUxQlFVMHNSVUZCUlN4SFFVRkhPMFZCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRkZCUVZFc1JVRkJSU3hOUVVGTk8wVkJRMmhDTEVsQlFVa3NSVUZCUlN4blFrRkJaMEk3UlVGRGRFSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hQUVVGUExFVkJRVVVzYTBKQlFXdENMRWRCUXpWQ096dEJRVU5FTEVGQlFVRXNaME5CUVdkRExFTkJRVU1zU1VGQlNTeERRVUZCTEVGQlFVRXNWMEZCUXl4RFFVRlpMRTlCUVU4c1FVRkJia0lzUTBGQmIwSXNUMEZCVHl4RFFVRkRPMFZCUTJoRkxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVkQlFVYzdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzU1VGQlNTeEZRVUZGTEdkQ1FVRm5RanRGUVVOMFFpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRTlCUVU4c1JVRkJSU3gxUWtGQmRVSXNSMEZEYWtNN08wRkJRMFFzUVVGQlFTeG5RMEZCWjBNc1EwRkJReXhqUVVGakxFTkJRVU03UlVGRE9VTXNWVUZCVlN4RlFVRkZMRTFCUVUwc1IwRkRia0k3TzBGQlEwUXNRVUZCUVN4blEwRkJaME1zUTBGQlF5eGpRVUZqTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNKRUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVkQlFVYzdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzU1VGQlNTeEZRVUZGTEdkQ1FVRm5RanRGUVVOMFFpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRTlCUVU4c1JVRkJSU3c0UWtGQk9FSXNSMEZEZUVNN08wRkJRMFFzUVVGQlFTeG5RMEZCWjBNc1EwRkJReXhqUVVGakxFTkJRVU1zUlVGQlJTeERRVUZETzBWQlEycEVMRTlCUVU4c1JVRkJSU3hEUVVGRE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVOQlFVTTdSVUZEVkN4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NWMEZCVnl4RlFVRkZMRTlCUVU4c1IwRkRja0k3TzBGQlEwUXNRVUZCUVN4blEwRkJaME1zUTBGQlF5eGpRVUZqTEVOQlFVTXNSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJRenRGUVVOMFJDeFhRVUZYTEVWQlFVVXNSMEZCUnp0RlFVTm9RaXhOUVVGTkxFVkJRVVVzUzBGQlN6dEZRVU5pTEV0QlFVc3NSVUZCUlN4SlFVRkpMRWRCUTFvN08wRkJRMFFzUVVGQlFTeG5RMEZCWjBNc1EwRkJReXhMUVVGTExFTkJRVU03UlVGRGNrTXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hOUVVGTkxFVkJRVVVzUTBGQlF5eEhRVU5XT3p0QlFVTkVMRUZCUVVFc1owTkJRV2RETEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVN1FVRkRla01zWjBOQlFXZERMRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRVVVzUTBGQlF6dEZRVU40UXl4VlFVRlZMRVZCUVVVc1RVRkJUVHRGUVVOc1FpeGhRVUZoTEVWQlFVVXNSMEZCUnl4SFFVTnVRanM3UVVGRFJDeEJRVUZCTEdkRFFVRm5ReXhEUVVGRExFdEJRVXNzUTBGQlF5eEZRVUZGTEVOQlFVTTdSVUZEZUVNc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFhRVUZYTEVWQlFVVXNTVUZCU1R0RlFVTnFRaXhMUVVGTExFVkJRVVVzU1VGQlNTeEhRVU5hT3p0QlFVTkVMRUZCUVVFc1owTkJRV2RETEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVc1FVRkJRU3hqUVVGakxFTkJRVU03UlVGRGRFUXNTMEZCU3l4RlFVRkZMRXRCUVVzc1IwRkRZanM3UVVGRFJDeEJRVUZCTEdkRFFVRm5ReXhEUVVGRExFdEJRVXNzUTBGQlF5eEZRVUZGTEVGQlFVRXNVMEZCVXp0QlFVTnNSQ3huUTBGQlowTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1JVRkJSU3hCUVVGQkxGTkJRVk1zUVVGQlFTeE5RVUZOTEVOQlFVTTdSVUZEZGtRc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UlVGRGFFSXNTMEZCU3l4RlFVRkZMRTlCUVU4N1JVRkRaQ3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEhRVU53UWpzN1FVRkRSQ3hCUVVGQkxHZERRVUZuUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRkxFRkJRVUVzUzBGQlN5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTndSQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TFFVRkxMRVZCUVVVc1IwRkJSenRGUVVOV0xFMUJRVTBzUlVGQlJTeEhRVUZITzBWQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhQUVVGUExFVkJRVVVzUTBGQlF6dEZRVU5XTEZGQlFWRXNSVUZCUlN4TlFVRk5PMFZCUTJoQ0xFbEJRVWtzUlVGQlJTeG5Ra0ZCWjBJN1JVRkRkRUlzVFVGQlRTeEZRVUZGTEVOQlFVTTdSVUZEVkN4UFFVRlBMRVZCUVVVc1owSkJRV2RDTEVkQlF6RkNPenRCUVVORUxFRkJRVUVzWjBOQlFXZERMRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRVVVzUVVGQlFTeExRVUZMTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNCRUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVkQlFVYzdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzU1VGQlNTeEZRVUZGTEdkQ1FVRm5RanRGUVVOMFFpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRTlCUVU4c1JVRkJSU3haUVVGWkxFZEJRM1JDT3p0QlFVTkVMRUZCUVVFc1owTkJRV2RETEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRkxFRkJRVUVzV1VGQldTeERRVUZETEVWQlFVVXNRMEZCUXp0RlFVTTNSQ3hOUVVGTkxFVkJRVVVzVDBGQlR5eEhRVU5vUWpzN1FVRkRSQ3hCUVVGQkxHZERRVUZuUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJTeEJRVUZCTEZsQlFWa3NRMEZCUXl4RlFVRkZMRUZCUVVFc1RVRkJUU3hEUVVGRE8wVkJRMjVGTEZWQlFWVXNSVUZCUlN4UFFVRlBMRWRCUTNCQ096dEJRVU5FTEVGQlFVRXNaME5CUVdkRExFTkJRVU1zUzBGQlN5eERRVUZETEVWQlFVVXNRMEZCUXp0RlFVTjRReXhOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEZkQlFWY3NSVUZCUlN4SlFVRkpPMFZCUTJwQ0xFdEJRVXNzUlVGQlJTeEpRVUZKTEVkQlExbzdPMEZCUTBRc1FVRkJRU3huUTBGQlowTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1JVRkJSU3hCUVVGQkxFZEJRVWNzUTBGQlF6dEZRVU16UXl4VFFVRlRMRVZCUVVVc1NVRkJTVHRGUVVObUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NWMEZCVnl4RlFVRkZMRWxCUVVrN1JVRkRha0lzUzBGQlN5eEZRVUZGTEU5QlFVOHNSMEZEWmpzN1FVRkRSQ3hCUVVGQkxHZERRVUZuUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRkxFRkJRVUVzU1VGQlNTeERRVUZETzBWQlF6VkRMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVjBGQlZ5eEZRVUZGTEVsQlFVazdSVUZEYWtJc1MwRkJTeXhGUVVGRkxFbEJRVWtzUjBGRFdqczdRVUZEUkN4QlFVRkJMR2REUVVGblF5eERRVUZETEV0QlFVc3NRMEZCUXl4RlFVRkZMRUZCUVVFc1NVRkJTU3hCUVVGQkxFMUJRVTA3UVVGRGJrUXNaME5CUVdkRExFTkJRVU1zUzBGQlN5eERRVUZETEVWQlFVVXNRVUZCUVN4TFFVRkxMRUZCUVVFc1RVRkJUVHRCUVVOd1JDeG5RMEZCWjBNc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJTeEJRVUZCTEU5QlFVOHNRVUZCUVN4TlFVRk5PMEZCUTNSRUxHZERRVUZuUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRkxFRkJRVUVzVDBGQlR5eEJRVUZCTEUxQlFVMHNRMEZCUXp0RlFVTnlSQ3hWUVVGVkxFVkJRVVVzVDBGQlR6dEZRVU51UWl4TlFVRk5MRVZCUVVVc1QwRkJUeXhIUVVOb1FqczdRVUZEUkN4QlFVRkJMR2REUVVGblF5eERRVUZETEV0QlFVc3NRMEZCUXl4RlFVRkZMRUZCUVVFc1NVRkJTVHRCUVVNM1F5eG5RMEZCWjBNc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJTeEJRVUZCTEVsQlFVa3NRMEZCUXp0RlFVTTFReXhMUVVGTExFVkJRVVVzVDBGQlR5eEhRVU5tT3p0QlFVTkVMRUZCUVVFc1owTkJRV2RETEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVc1FVRkJRU3hOUVVGTkxFTkJRVU03UlVGRE9VTXNVVUZCVVN4RlFVRkZMRkZCUVZFc1IwRkRia0k3TzBGQlEwUXNRVUZCUVN4blEwRkJaME1zUTBGQlF5eExRVUZMTEVOQlFVTXNSVUZCUlN4QlFVRkJMRTFCUVUwc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGNrUXNUMEZCVHl4RlFVRkZMRVZCUVVVN1JVRkRXQ3hQUVVGUExFVkJRVVVzV1VGQldUdEZRVU55UWl4TlFVRk5MRVZCUVVVc2FVSkJRV2xDTzBWQlEzcENMRmxCUVZrc1JVRkJSU3hYUVVGWE8wVkJRM3BDTEcxQ1FVRnRRaXhGUVVGRkxFOUJRVTg3UlVGRE5VSXNaMEpCUVdkQ0xFVkJRVVVzYTBKQlFXdENPMFZCUTNCRExGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRTFCUVUwc1JVRkJSU3hIUVVGSE8wVkJRMWdzUzBGQlN5eEZRVUZGTEVkQlFVY3NSMEZEV0RzN1FVRkRSQ3hCUVVGQkxHZERRVUZuUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRkxFRkJRVUVzVDBGQlR6dEJRVU5vUkN4blEwRkJaME1zUTBGQlF5eExRVUZMTEVOQlFVTXNSVUZCUlN4QlFVRkJMRTlCUVU4c1FVRkJRU3hOUVVGTkxFTkJRVU03UlVGRGNrUXNaMEpCUVdkQ0xFVkJRVVVzVDBGQlR6dEZRVU42UWl4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxGZEJRVmNzUlVGQlJTeERRVUZETEVOQlFVVXNTVUZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXh0UWtGQmJVSXNSMEZETVVNN08wRkJRMFFzUVVGQlFTeG5RMEZCWjBNc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJTeEJRVUZCTEU5QlFVOHNRVUZCUVN4TlFVRk5MRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRelZFTEcxQ1FVRnRRaXhGUVVGRkxFbEJRVWtzUjBGRE1VSTdPMEZCUTBRc1FVRkJRU3huUTBGQlowTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1JVRkJSU3hCUVVGQkxGTkJRVk03UVVGRGJFUXNaME5CUVdkRExFTkJRVU1zUzBGQlN5eERRVUZETEVWQlFVVXNRVUZCUVN4VFFVRlRMRUZCUVVFc1RVRkJUU3hEUVVGRE8wVkJRM1pFTEZWQlFWVXNSVUZCUlN4SlFVRkpPMFZCUTJoQ0xFdEJRVXNzUlVGQlJTeFBRVUZQTzBWQlEyUXNUVUZCVFN4RlFVRkZMRmRCUVZjc1IwRkRjRUk3TzBGQlEwUXNRVUZCUVN4blEwRkJaME1zUTBGQlF5eExRVUZMTEVOQlFVTXNSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJRenRGUVVNM1F5eFBRVUZQTEVWQlFVVXNXVUZCV1R0RlFVTnlRaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1YwRkJWeXhGUVVGRkxFbEJRVWs3UlVGRGFrSXNUVUZCVFN4RlFVRkZMRk5CUVZNN1JVRkRha0lzVFVGQlRTeEZRVUZGTEU5QlFVODdSVUZEWml4aFFVRmhMRVZCUVVVc1IwRkJSeXhIUVVOdVFqczdRVUZEUkN4QlFVRkJMR2REUVVGblF5eERRVUZETEV0QlFVc3NRMEZCUXl4RlFVRkZMRU5CUVVNc1NVRkJTU3hCUVVGQkxFMUJRVTBzUTBGQlF6dEZRVU51UkN4VlFVRlZMRVZCUVVVc1QwRkJUeXhIUVVOd1FqczdRVUZEUkN4QlFVRkJMR2REUVVGblF5eERRVUZETEV0QlFVc3NRMEZCUXl4RlFVRkZMRU5CUVVNc1NVRkJTU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU53UkN4blFrRkJaMElzUlVGQlJTeFBRVUZQTzBWQlEzcENMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVjBGQlZ5eEZRVUZGTEVOQlFVTXNRMEZCUlN4SlFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExHMUNRVUZ0UWl4SFFVTXhRenM3UVVGRFJDeEJRVUZCTEdkRFFVRm5ReXhEUVVGRExFdEJRVXNzUTBGQlF5eEZRVUZGTEVOQlFVTXNTVUZCU1N4QlFVRkJMRWxCUVVrc1EwRkJRenRGUVVOcVJDeExRVUZMTEVWQlFVVXNUMEZCVHl4SFFVTm1PenRCUVVORUxFRkJRVUVzWjBOQlFXZERMRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRVVVzUTBGQlF5eEpRVUZKTEVGQlFVRXNVMEZCVXp0QlFVTjJSQ3huUTBGQlowTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1JVRkJSU3hEUVVGRExFbEJRVWtzUVVGQlFTeFRRVUZUTEVGQlFVRXNUVUZCVFN4RFFVRkRPMFZCUXpWRUxGVkJRVlVzUlVGQlJTeEpRVUZKTzBWQlEyaENMRXRCUVVzc1JVRkJSU3hQUVVGUE8wVkJRMlFzVFVGQlRTeEZRVUZGTEZkQlFWY3NSMEZEY0VJN08wRkJRMFFzUVVGQlFTeG5RMEZCWjBNc1FVRkJRU3hqUVVGakxFTkJRVU1zUlVGQlJTeEJRVUZCTEV0QlFVc3NRMEZCUXp0RlFVTnlSQ3hOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEZkQlFWY3NSVUZCUlN4SlFVRkpMRWRCUTJ4Q096dEJRVU5FTEVGQlFVRXNaME5CUVdkRExFRkJRVUVzVFVGQlRTeERRVUZETzBWQlEzSkRMRXRCUVVzc1JVRkJSU3hKUVVGSkxFZEJRMW83TzBGQlEwUXNRVUZCUVN4blEwRkJaME1zUTBGQlF5eHRRa0ZCYlVJc1EwRkJReXhQUVVGUExFTkJRVU03UlVGRE0wUXNWMEZCVnl4RlFVRkZMR2RDUVVGblFpeEhRVU01UWpzN1FVRkRSQ3hCUVVGQkxGbEJRVmtzUVVGQlFTeExRVUZMTEVOQlFVTXNhMEpCUVd0Q0xFTkJRVU03UlVGRGJrTXNUVUZCVFN4RlFVRkZMRTlCUVU4c1IwRkRhRUk3TzBGQlEwUXNRVUZCUVN4UlFVRlJMRU5CUVVNN1JVRkRVQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TFFVRkxMRVZCUVVVc1IwRkJSenRGUVVOV0xFMUJRVTBzUlVGQlJTeEhRVUZITzBWQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhQUVVGUExFVkJRVVVzUTBGQlF6dEZRVU5XTEZGQlFWRXNSVUZCUlN4TlFVRk5PMFZCUTJoQ0xFbEJRVWtzUlVGQlJTeG5Ra0ZCWjBJN1JVRkRkRUlzVFVGQlRTeEZRVUZGTEVOQlFVTXNSMEZEVmpzN1FVUnVXRVFzUVVGRFJTeHRRa0ZFYVVJc1FVRkRhRUlzVVVGQlVTeERRVUZETzBWQlExSXNUMEZCVHl4RlFVRkZMSEZDUVVGeFFpeEhRVU12UWpzN1FVRkZTQ3hCUVVORkxHOUNRVVJyUWl4QlFVTnFRaXhSUVVGUkxFTkJRVU03UlVGRFVpeFBRVUZQTEVWQlFVVXNjMEpCUVhOQ0xFZEJRMmhET3p0QlFVVklMRUZCUTBVc2FVSkJSR1VzUVVGRFpDeFJRVUZSTEVOQlFVTTdSVUZEVWl4UFFVRlBMRVZCUVVVc2JVSkJRVzFDTEVkQlF6ZENPenRCUVVWSUxFRkJRMFVzYlVKQlJHbENMRUZCUTJoQ0xGRkJRVkVzUTBGQlF6dEZRVU5TTEU5QlFVOHNSVUZCUlN4eFFrRkJjVUlzUjBGREwwSTdPMEZCUlVnc1FVRkRSU3h0UWtGRWFVSXNRVUZEYUVJc1VVRkJVU3hEUVVGRE8wVkJRMUlzVDBGQlR5eEZRVUZGTEdGQlFXRXNSMEZEZGtJN08wRkJSVWdzUVVGRFJTeDFRa0ZFY1VJc1FVRkRjRUlzVVVGQlVTeERRVUZETzBWQlExSXNUMEZCVHl4RlFVRkZMRTlCUVU4c1IwRkRha0k3TzBGQllrZ3NRVUZEUlN4dFFrRkVhVUlzUVVGRGFFSXNVVUZCVVN4RFFXVkRPMFZCUTFJc1QwRkJUeXhGUVVGRkxIRkNRVUZ4UWl4SFFVTXZRanM3UVVGRlNDeEJRVU5GTEc5Q1FVUnJRaXhCUVVOcVFpeFJRVUZSTEVOQlFVTTdSVUZEVWl4UFFVRlBMRVZCUVVVc1VVRkJVU3hIUVVOc1FqczdRVUZGU0N4QlFVTkZMRzlDUVVSclFpeEJRVU5xUWl4UlFVRlJMRU5CUVVNN1JVRkRVaXhQUVVGUExFVkJRVVVzVDBGQlR5eEhRVU5xUWpzN1FVRkZTQ3hCUVVORkxHOUNRVVJyUWl4QlFVTnFRaXhSUVVGUkxFTkJRVU03UlVGRFVpeFBRVUZQTEVWQlFVVXNZVUZCWVN4SFFVTjJRanM3UVVGSFNDeEJRVUZCTEdWQlFXVXNRMEZCUXp0RlFVTmtMR0ZCUVdFc1JVRkJSU3hKUVVGSk8wVkJRMjVDTEZGQlFWRXNSVUZCUlN4UlFVRlJMRWRCZFVSdVFqdEZRWHBFUkN4QlFVZEZMR1ZCU0dFc1EwRkhZaXhaUVVGWkxFTkJRVU03U1VGRFdDeEpRVUZKTEVWQlFVVXNRMEZCUXl4SFFVTlNPMFZCVEVnc1FVRk5SU3hsUVU1aExFTkJUV0lzWlVGQlpTeERRVUZETzBsQlEyUXNUMEZCVHl4RlFVRkZMRU5CUVVNN1NVRkRWaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEpRVU5zUWl4TFFVRkxMRVZCUVVVc1EwRkJRenRKUVVOU0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBsQlExZ3NSMEZCUnl4RlFVRkZMRWRCUVVjN1NVRkRVaXhOUVVGTkxFVkJRVVVzU1VGQlNUdEpRVU5hTEZWQlFWVXNSVUZCUlN4TFFVRkxPMGxCUTJwQ0xFMUJRVTBzUlVGQlJTeERRVUZETzBsQlExUXNWVUZCVlN4RlFVRkZMRmRCUVZjN1NVRkRka0lzWTBGQll5eEZRVUZGTEVsQlFVazdTVUZEY0VJc1ZVRkJWU3hGUVVGRkxGbEJRVms3U1VGRGVFSXNTMEZCU3l4RlFVRkZMRTlCUVU4c1IwRlBaanRKUVhwQ1NDeEJRVzFDU1N4bFFXNUNWeXhEUVUxaUxHVkJRV1VzUTBGaFlpeERRVUZETEVOQlFVTTdUVUZEUVN4alFVRmpMRVZCUVVVc1RVRkJUU3hIUVVOMlFqdEpRWEpDVEN4QlFYTkNTU3hsUVhSQ1Z5eERRVTFpTEdWQlFXVXNRVUZuUWxvc1RVRkJUU3hEUVVGRE8wMUJRMDRzVDBGQlR5eEZRVUZGTEVsQlFVa3NSMEZEWkR0RlFYaENUQ3hCUVRCQ1JTeGxRVEZDWVN4RFFUQkNZaXhUUVVGVExFTkJRVU03U1VGRFVpeFJRVUZSTEVWQlFVVXNVVUZCVVR0SlFVTnNRaXhOUVVGTkxFVkJRVVVzVVVGQlVTeEhRV05xUWp0SlFURkRTQ3hCUVRaQ1NTeGxRVGRDVnl4RFFUQkNZaXhUUVVGVExFTkJSMUFzUzBGQlN5eERRVUZCTEVGQlFVRXNTVUZCUXl4RFFVRkxMRTFCUVUwc1FVRkJXQ3hGUVVGaE8wMUJRMnBDTEUxQlFVMHNSVUZCUlN4RFFVRkRPMDFCUTFRc1lVRkJZU3hGUVVGRkxFZEJRVWM3VFVGRGJFSXNUVUZCVFN4RlFVRkZMRTlCUVU4c1IwRkRhRUk3U1VGcVEwd3NRVUZyUTBrc1pVRnNRMWNzUTBFd1FtSXNVMEZCVXl4RFFWRlFMRmRCUVZjc1EwRkJRenROUVVOV0xGRkJRVkVzUlVGQlJTeFJRVUZSTzAxQlEyeENMRXRCUVVzc1JVRkJSU3hEUVVGRE8wMUJRMUlzUjBGQlJ5eEZRVUZGTEVkQlFVYzdUVUZEVWl4VFFVRlRMRVZCUVVVc1owSkJRV2RDTzAxQlF6TkNMRTlCUVU4c1JVRkJSU3hWUVVGVk8wMUJRMjVDTEdOQlFXTXNSVUZCUlN4SlFVRkpMRWRCUTNKQ08wVkJla05NTEVGQk1rTkZMR1ZCTTBOaExFTkJNa05pTEcxQ1FVRnRRaXhEUVVGRE8wbEJRMnhDTEZGQlFWRXNSVUZCUlN4UlFVRlJPMGxCUTJ4Q0xFbEJRVWtzUlVGQlJTeE5RVUZOTzBsQlExb3NSMEZCUnl4RlFVRkZMRTFCUVUwN1NVRkRXQ3hMUVVGTExFVkJRVVVzWTBGQll6dEpRVU55UWl4TlFVRk5MRVZCUVVVc1kwRkJZenRKUVVOMFFpeFZRVUZWTEVWQlFVVXNUVUZCVFN4SFFVTnVRanRGUVd4RVNDeEJRVzlFU1N4bFFYQkVWeXhCUVcxRVdpeGhRVUZoTEVOQlExb3NaVUZCWlN4RFFVRkRPMGxCUTJRc1QwRkJUeXhGUVVGRkxFTkJRVU03U1VGRFZpeGpRVUZqTEVWQlFVVXNUMEZCVHl4SFFVTjRRaUlLZlE9PSAqLyIsIi8qIFJvYm90byAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by0zMDAuZW90Jyk7XG4gIHNyYzogdXJsKCcuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTMwMC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgIGxvY2FsKCdSb2JvdG8gTGlnaHQnKSxcbiAgICAgICBsb2NhbCgnUm9ib3RvLTMwMCcpLFxuICAgICAgIHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by0zMDAud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgdXJsKCcuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTMwMC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgdXJsKCcuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTMwMC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgICAgdXJsKCcuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTMwMC5zdmcjUm9ib3RvJykgZm9ybWF0KCdzdmcnKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by1yZWd1bGFyLmVvdCcpO1xuICBzcmM6IHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by1yZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgbG9jYWwoJ1JvYm90bycpLFxuICAgICAgIGxvY2FsKCdSb2JvdG8tcmVndWxhcicpLFxuICAgICAgIHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by1yZWd1bGFyLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgIHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by1yZWd1bGFyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICB1cmwoJy4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tcmVndWxhci50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgICAgdXJsKCcuLi9mb250cy9Sb2JvdG8vUm9ib3RvLXJlZ3VsYXIuc3ZnI1JvYm90bycpIGZvcm1hdCgnc3ZnJyk7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNTAwLmVvdCcpO1xuICBzcmM6IHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by01MDAuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICBsb2NhbCgnUm9ib3RvIE1lZGl1bScpLFxuICAgICAgIGxvY2FsKCdSb2JvdG8tNTAwJyksXG4gICAgICAgdXJsKCcuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTUwMC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICB1cmwoJy4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNTAwLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICB1cmwoJy4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNTAwLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICAgICB1cmwoJy4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNTAwLnN2ZyNSb2JvdG8nKSBmb3JtYXQoJ3N2ZycpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKCcuLi9mb250cy9Sb2JvdG8vUm9ib3RvLTcwMC5lb3QnKTtcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNzAwLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgbG9jYWwoJ1JvYm90byBCb2xkJyksXG4gICAgICAgbG9jYWwoJ1JvYm90by03MDAnKSxcbiAgICAgICB1cmwoJy4uL2ZvbnRzL1JvYm90by9Sb2JvdG8tNzAwLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgIHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by03MDAud29mZicpIGZvcm1hdCgnd29mZicpLFxuICAgICAgIHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by03MDAudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLFxuICAgICAgIHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by03MDAuc3ZnI1JvYm90bycpIGZvcm1hdCgnc3ZnJyk7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL1JvYm90by9Sb2JvdG8taXRhbGljLmVvdCcpO1xuICBzcmM6IHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by1pdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICBsb2NhbCgnUm9ib3RvJyksXG4gICAgICAgbG9jYWwoJ1JvYm90by1pdGFsaWMnKSxcbiAgICAgICB1cmwoJy4uL2ZvbnRzL1JvYm90by9Sb2JvdG8taXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgIHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by1pdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxuICAgICAgIHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by1pdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLFxuICAgICAgIHVybCgnLi4vZm9udHMvUm9ib3RvL1JvYm90by1pdGFsaWMuc3ZnI1JvYm90bycpIGZvcm1hdCgnc3ZnJyk7XG59XG5cbi8qIG1hdGVyaWFsIGljb25zICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdNYXRlcmlhbCBJY29ucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL01hdGVyaWFsSWNvbnMtUmVndWxhci5lb3QnKTsgLyogRm9yIElFNi04ICovXG4gIHNyYzogbG9jYWwoJ01hdGVyaWFsIEljb25zJyksXG4gICAgICAgbG9jYWwoJ01hdGVyaWFsSWNvbnMtUmVndWxhcicpLFxuICAgICAgIHVybCgnLi4vZm9udHMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgIHVybCgnLi4vZm9udHMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICB1cmwoJy4uL2ZvbnRzL01hdGVyaWFsSWNvbnMtUmVndWxhci50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG59XG4ubWF0ZXJpYWwtaWNvbnMge1xuICBmb250LWZhbWlseTogJ01hdGVyaWFsIEljb25zJztcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IDI0cHg7ICAvKiBQcmVmZXJyZWQgaWNvbiBzaXplICovXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBsZXR0ZXItc3BhY2luZzogbm9ybWFsO1xuICB3b3JkLXdyYXA6IG5vcm1hbDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgZGlyZWN0aW9uOiBsdHI7XG5cbiAgLyogU3VwcG9ydCBmb3IgYWxsIFdlYktpdCBicm93c2Vycy4gKi9cbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC8qIFN1cHBvcnQgZm9yIFNhZmFyaSBhbmQgQ2hyb21lLiAqL1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xuXG4gIC8qIFN1cHBvcnQgZm9yIEZpcmVmb3guICovXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG5cbiAgLyogU3VwcG9ydCBmb3IgSUUuICovXG4gIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogJ2xpZ2EnO1xufVxuIiwiLy9jb2xvcnNcbiR0ZXh0Q29sb3I6IGhzbCgwLCAwLCAyNSk7XG4kYmdDb2xvcjogaHNsKDAsIDAsIDk2KTtcbiRwYW5lbEJnOiBoc2woMCwgMCwgMTAwKTtcbiRwYW5lbExpZ2h0Q29sb3I6IGhzbCgyMTgsIDE5LCA3NSk7XG4kbGlua0NvbG9yOiBoc2woMTk0LCAxMDAsIDM5KTtcbiRoaWdobGlnaHRDb2xvcjogaHNsKDM0MCwgODIsIDU5KTtcblxuLy92YWx1ZXNcbiRndXR0ZXI6IDIwcHg7XG4kcGFuZWxGb250U2l6ZTogMTNweDtcbiRidG5IZWlnaHQ6IDM2cHg7XG4kaW5wdXRIZWlnaHQ6IDMycHg7XG5cbiRiYXNlRm9udDogJ1JvYm90bycsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG5cbiVjbGVhcmZpeCB7XG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICBkaXNwbGF5OnRhYmxlO1xuICAgICAgICBjbGVhcjpib3RoO1xuICAgICAgICBjb250ZW50OlwiXCI7XG4gICAgfVxufVxuXG4lbWF0ZXJpYWwtaWNvbnMge1xuICAgIGZvbnQtZmFtaWx5OiAnTWF0ZXJpYWwgSWNvbnMnO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBsZXR0ZXItc3BhY2luZzogbm9ybWFsO1xuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHdvcmQtd3JhcDogbm9ybWFsO1xuICAgIGRpcmVjdGlvbjogbHRyO1xuICAgIC13ZWJraXQtZm9udC1mZWF0dXJlLXNldHRpbmdzOiAnbGlnYSc7XG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG59XG5cbi8vcmVzcG9uc2l2ZSBicmVha3BvaW50c1xuJGJyZWFrLWxnOjEyMDBweDtcbiRicmVhay1tZDo5OTJweDtcbiRicmVhay1zbTo3NjhweDtcbiRicmVhay14czo0ODBweDtcblxuXG4lZmFkZUluIHtcbiAgICBhbmltYXRpb246ZmFkZUluIDM1MG1zIGVhc2Utb3V0O1xufVxuQGtleWZyYW1lcyBmYWRlSW4ge1xuICAgIGZyb20ge1xuICAgICAgICBvcGFjaXR5OjA7XG4gICAgfVxuICAgIHRvcCB7XG4gICAgICAgIG9wYWNpdHk6MTtcbiAgICB9XG59XG4iLCIubmwtZ3JpZCB7XG4gICAgZGlzcGxheTpmbGV4O1xuICAgIGZsZXgtd3JhcDp3cmFwO1xuICAgIG1hcmdpbi1sZWZ0Oi0kZ3V0dGVyO1xuICAgIG1hcmdpbi1yaWdodDotJGd1dHRlcjtcbiAgICA+IFtjbGFzc149J2NvbC0nXSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDokZ3V0dGVyO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiRndXR0ZXI7XG4gICAgICAgIGZsZXg6MCAwIDEwMCU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgICAuY29sLXh4czEge1xuICAgICAgICBmbGV4OjAgMCA4LjMzMzMzMzMzMzMlO1xuICAgICAgICBtYXgtd2lkdGg6IDguMzMzMzMzMzMzMyU7XG4gICAgfVxuICAgIC5jb2wteHhzMiB7XG4gICAgICAgIGZsZXg6MCAwIDE2LjY2NjY2NjY2NyU7XG4gICAgICAgIG1heC13aWR0aDogMTYuNjY2NjY2NjY3JTtcbiAgICB9XG4gICAgLmNvbC14eHMzIHtcbiAgICAgICAgZmxleDowIDAgMjUlO1xuICAgICAgICBtYXgtd2lkdGg6IDI1JTtcbiAgICB9XG4gICAgLmNvbC14eHM0IHtcbiAgICAgICAgZmxleDowIDAgMzMuMzMzMzMzMzMzJTtcbiAgICAgICAgbWF4LXdpZHRoOiAzMy4zMzMzMzMzMzMlO1xuICAgIH1cbiAgICAuY29sLXh4czUge1xuICAgICAgICBmbGV4OjAgMCA0MS42NjY2NjY2NjclO1xuICAgICAgICBtYXgtd2lkdGg6IDQxLjY2NjY2NjY2NyU7XG4gICAgfVxuICAgIC5jb2wteHhzNiB7XG4gICAgICAgIGZsZXg6MCAwIDUwJTtcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgfVxuICAgIC5jb2wteHhzNyB7XG4gICAgICAgIGZsZXg6MCAwIDU4LjMzMzMzMzMzMyU7XG4gICAgICAgIG1heC13aWR0aDogNTguMzMzMzMzMzMzJTtcbiAgICB9XG4gICAgLmNvbC14eHM4IHtcbiAgICAgICAgZmxleDowIDAgNjYuNjY2NjY2NjY2JTtcbiAgICAgICAgbWF4LXdpZHRoOiA2Ni42NjY2NjY2NjYlO1xuICAgIH1cbiAgICAuY29sLXh4czkge1xuICAgICAgICBmbGV4OjAgMCA3NSU7XG4gICAgICAgIG1heC13aWR0aDogNzUlO1xuICAgIH1cbiAgICAuY29sLXh4czEwIHtcbiAgICAgICAgZmxleDowIDAgODMuMzMzMzMzMzMzJTtcbiAgICAgICAgbWF4LXdpZHRoOiA4My4zMzMzMzMzMzMlO1xuICAgIH1cbiAgICAuY29sLXh4czExIHtcbiAgICAgICAgZmxleDowIDAgOTEuNjY2NjY2NjY2JTtcbiAgICAgICAgbWF4LXdpZHRoOiA5MS42NjY2NjY2NjYlO1xuICAgIH1cbiAgICAuY29sLXh4czEyIHtcbiAgICAgICAgZmxleDowIDAgMTAwJTtcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDokYnJlYWsteHMpIHtcbiAgICAgICAgLmNvbC14czEge1xuICAgICAgICAgICAgZmxleDowIDAgOC4zMzMzMzMzMzMzJTtcbiAgICAgICAgICAgIG1heC13aWR0aDogOC4zMzMzMzMzMzMzJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLXhzMiB7XG4gICAgICAgICAgICBmbGV4OjAgMCAxNi42NjY2NjY2NjclO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxNi42NjY2NjY2NjclO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wteHMzIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDI1JTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMjUlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wteHM0IHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDMzLjMzMzMzMzMzMyU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDMzLjMzMzMzMzMzMyU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC14czUge1xuICAgICAgICAgICAgZmxleDowIDAgNDEuNjY2NjY2NjY3JTtcbiAgICAgICAgICAgIG1heC13aWR0aDogNDEuNjY2NjY2NjY3JTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLXhzNiB7XG4gICAgICAgICAgICBmbGV4OjAgMCA1MCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDUwJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLXhzNyB7XG4gICAgICAgICAgICBmbGV4OjAgMCA1OC4zMzMzMzMzMzMlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA1OC4zMzMzMzMzMzMlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wteHM4IHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDY2LjY2NjY2NjY2NiU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDY2LjY2NjY2NjY2NiU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC14czkge1xuICAgICAgICAgICAgZmxleDowIDAgNzUlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA3NSU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC14czEwIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDgzLjMzMzMzMzMzMyU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDgzLjMzMzMzMzMzMyU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC14czExIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDkxLjY2NjY2NjY2NiU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDkxLjY2NjY2NjY2NiU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC14czEyIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDokYnJlYWstc20pIHtcbiAgICAgICAgLmNvbC1zMSB7XG4gICAgICAgICAgICBmbGV4OjAgMCA4LjMzMzMzMzMzMzMlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA4LjMzMzMzMzMzMzMlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtczIge1xuICAgICAgICAgICAgZmxleDowIDAgMTYuNjY2NjY2NjY3JTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMTYuNjY2NjY2NjY3JTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLXMzIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDI1JTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMjUlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtczQge1xuICAgICAgICAgICAgZmxleDowIDAgMzMuMzMzMzMzMzMzJTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMzMuMzMzMzMzMzMzJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLXM1IHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDQxLjY2NjY2NjY2NyU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDQxLjY2NjY2NjY2NyU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC1zNiB7XG4gICAgICAgICAgICBmbGV4OjAgMCA1MCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDUwJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLXM3IHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDU4LjMzMzMzMzMzMyU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDU4LjMzMzMzMzMzMyU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC1zOCB7XG4gICAgICAgICAgICBmbGV4OjAgMCA2Ni42NjY2NjY2NjYlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA2Ni42NjY2NjY2NjYlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtczkge1xuICAgICAgICAgICAgZmxleDowIDAgNzUlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA3NSU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC1zMTAge1xuICAgICAgICAgICAgZmxleDowIDAgODMuMzMzMzMzMzMzJTtcbiAgICAgICAgICAgIG1heC13aWR0aDogODMuMzMzMzMzMzMzJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLXMxMSB7XG4gICAgICAgICAgICBmbGV4OjAgMCA5MS42NjY2NjY2NjYlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA5MS42NjY2NjY2NjYlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtczEyIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDokYnJlYWstbWQpIHtcbiAgICAgICAgLmNvbC1tMSB7XG4gICAgICAgICAgICBmbGV4OjAgMCA4LjMzMzMzMzMzMzMlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA4LjMzMzMzMzMzMzMlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtbTIge1xuICAgICAgICAgICAgZmxleDowIDAgMTYuNjY2NjY2NjY3JTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMTYuNjY2NjY2NjY3JTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLW0zIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDI1JTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMjUlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtbTQge1xuICAgICAgICAgICAgZmxleDowIDAgMzMuMzMzMzMzMzMzJTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMzMuMzMzMzMzMzMzJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLW01IHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDQxLjY2NjY2NjY2NyU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDQxLjY2NjY2NjY2NyU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC1tNiB7XG4gICAgICAgICAgICBmbGV4OjAgMCA1MCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDUwJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLW03IHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDU4LjMzMzMzMzMzMyU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDU4LjMzMzMzMzMzMyU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC1tOCB7XG4gICAgICAgICAgICBmbGV4OjAgMCA2Ni42NjY2NjY2NjYlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA2Ni42NjY2NjY2NjYlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtbTkge1xuICAgICAgICAgICAgZmxleDowIDAgNzUlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA3NSU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC1tMTAge1xuICAgICAgICAgICAgZmxleDowIDAgODMuMzMzMzMzMzMzJTtcbiAgICAgICAgICAgIG1heC13aWR0aDogODMuMzMzMzMzMzMzJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLW0xMSB7XG4gICAgICAgICAgICBmbGV4OjAgMCA5MS42NjY2NjY2NjYlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA5MS42NjY2NjY2NjYlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtbTEyIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDokYnJlYWstbGcpIHtcbiAgICAgICAgLmNvbC1sMSB7XG4gICAgICAgICAgICBmbGV4OjAgMCA4LjMzMzMzMzMzMzMlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA4LjMzMzMzMzMzMzMlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtbDIge1xuICAgICAgICAgICAgZmxleDowIDAgMTYuNjY2NjY2NjY3JTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMTYuNjY2NjY2NjY3JTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLWwzIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDI1JTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMjUlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtbDQge1xuICAgICAgICAgICAgZmxleDowIDAgMzMuMzMzMzMzMzMzJTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMzMuMzMzMzMzMzMzJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLWw1IHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDQxLjY2NjY2NjY2NyU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDQxLjY2NjY2NjY2NyU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC1sNiB7XG4gICAgICAgICAgICBmbGV4OjAgMCA1MCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDUwJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLWw3IHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDU4LjMzMzMzMzMzMyU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDU4LjMzMzMzMzMzMyU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC1sOCB7XG4gICAgICAgICAgICBmbGV4OjAgMCA2Ni42NjY2NjY2NjYlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA2Ni42NjY2NjY2NjYlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtbDkge1xuICAgICAgICAgICAgZmxleDowIDAgNzUlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA3NSU7XG4gICAgICAgIH1cbiAgICAgICAgLmNvbC1sMTAge1xuICAgICAgICAgICAgZmxleDowIDAgODMuMzMzMzMzMzMzJTtcbiAgICAgICAgICAgIG1heC13aWR0aDogODMuMzMzMzMzMzMzJTtcbiAgICAgICAgfVxuICAgICAgICAuY29sLWwxMSB7XG4gICAgICAgICAgICBmbGV4OjAgMCA5MS42NjY2NjY2NjYlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA5MS42NjY2NjY2NjYlO1xuICAgICAgICB9XG4gICAgICAgIC5jb2wtbDEyIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJodG1sLFxuYm9keSB7XG4gICAgaGVpZ2h0OjEwMCU7XG59XG5cbi5ubC1ydWxlcyB7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG59XG5cbi5sYXlvdXRzLWNvbnRyb2xzIHtcbiAgICBtYXJnaW46MCAwIDFlbTtcbiAgICB0ZXh0LWFsaWduOnJpZ2h0O1xuICAgIC5zb3J0aW5nLXNob3cge1xuICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgfVxuICAgIC5sYXlvdXQtZXhwb3J0ICYge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn1cblxuLmV4cG9ydC1sYXlvdXRzLWNvbnRyb2xzIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtYXJnaW46MCAwIDFlbTtcbiAgICB0ZXh0LWFsaWduOnJpZ2h0O1xuICAgIC5sYXlvdXQtZXhwb3J0ICYge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG59XG5cbi5uZy1sYXlvdXRzLWFwcCB7XG4gICAgKiB7XG4gICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICB9XG4gICAgJi5hamF4LWxvYWRpbmcsXG4gICAgJi5hamF4LWxvYWRpbmcgKiB7XG4gICAgICAgIGN1cnNvcjp3YWl0ICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIGRpc3BsYXk6ZmxleDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiRiZ0NvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiRiYXNlRm9udDtcbiAgICBmb250LXNpemU6MTZweDtcbiAgICBsaW5lLWhlaWdodDoxLjU7XG4gICAgY29sb3I6JHRleHRDb2xvcjtcbiAgICBtaW4taGVpZ2h0OjEwMCU7XG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgICBhOm5vdCgubmwtYnRuKSB7XG4gICAgICAgIGNvbG9yOiRsaW5rQ29sb3I7XG4gICAgfVxuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOjEuNjI1ZW07XG4gICAgICAgIG1hcmdpbjoxZW0gMCAzZW07XG4gICAgfVxuICAgIC5uZy1sYXlvdXRzLWNvbnRhaW5lciB7XG4gICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgIG1heC13aWR0aDoxMjAwcHg7XG4gICAgICAgIHdpZHRoOjk4JTtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgIH1cbiAgICAubGF5b3V0cy1zaWRlYmFyIHtcbiAgICAgICAgd2lkdGg6MjAlO1xuICAgICAgICBiYWNrZ3JvdW5kOmhzbCgwLCAwLCA5MCk7XG4gICAgICAgIC5tYWluLW1lbnUge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6JGd1dHRlcioyO1xuICAgICAgICAgICAgPiB1bCB7XG4gICAgICAgICAgICAgICAgbGlzdC1zdHlsZS10eXBlOm5vbmU7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgID4gbGkge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOjFweCBzb2xpZCBoc2xhKDAsIDAsIDAsIDAuMDIpO1xuICAgICAgICAgICAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci10b3A6MXB4IHNvbGlkIGhzbGEoMCwgMCwgMCwgMC4wMik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPiBhIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MTBweCAxNXB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTowLjg3NWVtO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6MzAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XG4gICAgICAgICAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOmhzbGEoMCwgMCwgMCwgMC4wMik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgJi5jdXJyZW50IHtcbiAgICAgICAgICAgICAgICAgICAgICAgID4gYSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDokYmdDb2xvcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjokaGlnaGxpZ2h0Q29sb3I7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOmRlZmF1bHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmxheW91dHMtY29udGVudCB7XG4gICAgICAgIGZsZXg6MTtcbiAgICAgICAgcGFkZGluZzokZ3V0dGVyKjEuNTtcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgfVxuICAgICYuc29ydGluZyB7XG4gICAgICAgIC5sYXlvdXRzLWNvbnRyb2xzIHtcbiAgICAgICAgICAgIC5zb3J0aW5nLXNob3cge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5zb3J0aW5nLWhpZGUsXG4gICAgICAgICAgICAubmwtZmlsdGVyLWRyb3Bkb3duIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLmpzLWFkZC1ydWxlIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgICAgLm5sLW5vLWZpbHRlcmVkLWl0ZW1zIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAubXVsdGllbnRyeS1pdGVtcyB7XG4gICAgICAgIC5tdWx0aWVudHJ5LWl0ZW0ge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICAuaWNvbi1jbG9zZSB7XG4gICAgICAgICAgICAgICAgQGV4dGVuZCAlbWF0ZXJpYWwtaWNvbnM7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgcmlnaHQ6NnB4O1xuICAgICAgICAgICAgICAgIHRvcDo5cHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6MThweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MThweDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDoxOHB4O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxNHB4O1xuICAgICAgICAgICAgICAgIGN1cnNvcjpwb2ludGVyO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246YmFja2dyb3VuZCAwLjE1cztcbiAgICAgICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OlwiY2xlYXJcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6cmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbnB1dFt0eXBlPXRleHRdIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OjNlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQ6bnRoLWxhc3QtY2hpbGQoMSkge1xuICAgICAgICAgICAgICAgIC5pY29uLWNsb3NlIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLm11bHRpZW50cnlbZGF0YS1sYXN0X2l0ZW1fY2FuX2JlX3JlbW92ZWQ9XCJ0cnVlXCJdIHtcbiAgICAgICAgLm11bHRpZW50cnktaXRlbXMge1xuICAgICAgICAgICAgLm11bHRpZW50cnktaXRlbSB7XG4gICAgICAgICAgICAgICAgLmljb24tY2xvc2Uge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAubXVsdGllbnRyeSB7XG4gICAgICAgIC5uby1pdGVtcy1tc2cge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IC41ZW07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjFmMWYxO1xuICAgICAgICAgICAgbWFyZ2luOiAwIDAgMWVtO1xuICAgICAgICB9XG4gICAgICAgICYuc2hvdy1tZXNzYWdlIHtcbiAgICAgICAgICAgIC5uby1pdGVtcy1tc2cge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4ubGF5b3V0cy1oZWFkZXIge1xuICAgIG1hcmdpbjowIDAgMmVtO1xuICAgIC5sYXlvdXRzLXRpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOjIxcHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OjQwMDtcbiAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIGZsb2F0OmxlZnQ7XG4gICAgfVxuICAgIC5sYXlvdXRzLWNvbnRyb2xzIHtcbiAgICAgICAgZmxvYXQ6cmlnaHQ7XG4gICAgICAgIC5ubC1kcm9wZG93biB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OlwiXCI7XG4gICAgICAgIGRpc3BsYXk6dGFibGU7XG4gICAgICAgIGNsZWFyOmJvdGg7XG4gICAgfVxuICAgIHAge1xuICAgICAgICBjbGVhcjpib3RoO1xuICAgICAgICBmb250LXNpemU6MTRweDtcbiAgICB9XG59XG4iLCIubmwtbW9kYWwtbWFzayB7XG4gICAgJG1vZGFsQm9yZGVyUmFkaXVzOjBweDtcbiAgICBwb3NpdGlvbjpmaXhlZDtcbiAgICB6LWluZGV4OjEwMDA7XG4gICAgYmFja2dyb3VuZDpoc2xhKDAsIDAsIDAsIDAuNSk7XG4gICAgdG9wOjA7XG4gICAgbGVmdDowO1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OjEwMCU7XG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgIHBhZGRpbmc6MTVweDtcbiAgICBhbmltYXRpb246bWFza0ZhZGVJbiAwLjJzO1xuICAgICoge1xuICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgfVxuICAgIC5ubC1tb2RhbCB7XG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICB0b3A6NTAlO1xuICAgICAgICBsZWZ0OjUwJTtcbiAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgYmFja2dyb3VuZDojZmZmO1xuICAgICAgICBib3JkZXItcmFkaXVzOiRtb2RhbEJvcmRlclJhZGl1cztcbiAgICAgICAgd2lkdGg6NTAwcHg7XG4gICAgICAgIG1heC13aWR0aDo5OCU7XG4gICAgICAgIG1heC1oZWlnaHQ6OTglO1xuICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcbiAgICAgICAgYW5pbWF0aW9uOm1vZGFsU2xpZGUgMC40cyBlYXNlLW91dDtcbiAgICAgICAgLmNsb3NlLW1vZGFsIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgcmlnaHQ6MTVweDtcbiAgICAgICAgICAgIHRvcDoxNnB4O1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIGNvbG9yOiNmZmY7XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZToyNHB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XG4gICAgICAgICAgICBAZXh0ZW5kICVtYXRlcmlhbC1pY29ucztcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgY29udGVudDpcImNsZWFyXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLm5sLW1vZGFsLWJvZHkge1xuICAgICAgICAgICAgcGFkZGluZzoyNXB4IDE1cHg7XG4gICAgICAgICAgICBvdmVyZmxvdy15OmF1dG87XG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIH1cbiAgICAgICAgLm5sLW1vZGFsLWhlYWQge1xuICAgICAgICAgICAgcGFkZGluZzoxNXB4IDM1cHggMTVweCAxNXB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDpoc2woMCwgMCwgMjUpO1xuICAgICAgICAgICAgY29sb3I6I2ZmZjtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6JG1vZGFsQm9yZGVyUmFkaXVzICRtb2RhbEJvcmRlclJhZGl1cyAwIDA7XG4gICAgICAgICAgICBmb250LXNpemU6MjBweDtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6NThweDtcbiAgICAgICAgfVxuICAgICAgICAubmwtbW9kYWwtYWN0aW9ucyB7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgjMDAwLCAuMSk7XG4gICAgICAgICAgICAubmwtYnRuIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogLjVlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuZXJyb3JzIHtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTpub25lO1xuICAgICAgICAgICAgbWFyZ2luOi0wLjVlbSAwIDEuNWVtO1xuICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgZm9udC1zaXplOjE1cHg7XG4gICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgY29sb3I6cmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZvcm0ge1xuICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6bm9ybWFsO1xuICAgICAgICAgICAgZm9udC1zaXplOjE0cHg7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDRweDtcbiAgICAgICAgfVxuICAgICAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgICAgICAgaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcbiAgICAgICAgaW5wdXRbdHlwZT1cInVybFwiXSxcbiAgICAgICAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuICAgICAgICB0ZXh0YXJlYSB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAxZW07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOjJweDtcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICBwYWRkaW5nOjAgMC43NWVtO1xuICAgICAgICAgICAgZm9udC1zaXplOjE0cHg7XG4gICAgICAgICAgICBoZWlnaHQ6NDRweDtcbiAgICAgICAgICAgIGJvcmRlcjoxcHggc29saWQgaHNsKDAsIDAsIDcwKTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgICAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICAgICAgICAgICAgY29sb3I6aHNsKDAsIDAsIDcwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0ZXh0YXJlYSB7XG4gICAgICAgICAgICBoZWlnaHQ6YXV0bztcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6MTIwcHg7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDowLjM3NWVtO1xuICAgICAgICAgICAgcmVzaXplOnZlcnRpY2FsO1xuICAgICAgICB9XG4gICAgICAgIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6LTk5OTllbTtcbiAgICAgICAgICAgICsgbGFiZWwge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowLjM4NDYxNTM4NDZlbSAwLjM4NDYxNTM4NDZlbSAwLjM4NDYxNTM4NDZlbSAyZW0gIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDAuNWVtO1xuICAgICAgICAgICAgICAgIGN1cnNvcjpwb2ludGVyO1xuICAgICAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgIEBleHRlbmQgJW1hdGVyaWFsLWljb25zO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MjRweDtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDpcImNoZWNrX2JveF9vdXRsaW5lX2JsYW5rXCI7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OjA7XG4gICAgICAgICAgICAgICAgICAgIHRvcDowLjFlbTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6aHNsKDAsIDAsIDQwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOmNoZWNrZWQge1xuICAgICAgICAgICAgICAgICsgbGFiZWwge1xuICAgICAgICAgICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDpcImNoZWNrX2JveFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6JGxpbmtDb2xvcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICY6aW5kZXRlcm1pbmF0ZSB7XG4gICAgICAgICAgICAgICAgKyBsYWJlbCB7XG4gICAgICAgICAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OlwiaW5kZXRlcm1pbmF0ZV9jaGVja19ib3hcIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAuZm9ybS1hY3Rpb25zIHtcbiAgICAgICAgdGV4dC1hbGlnbjpyaWdodDtcbiAgICB9XG4gICAgLm5sLW1vZGFsLWxvYWRlciB7XG4gICAgICAgIGNvbG9yOiNmZmY7XG4gICAgICAgIGZvbnQtc2l6ZToxNHB4O1xuICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgdG9wOjUwJTtcbiAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgICAgPiBzcGFuIHtcbiAgICAgICAgICAgIEBleHRlbmQgLmxvYWRpbmctbmctaWNvbjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAmLm1vZGFsLWxvYWRpbmcge1xuICAgICAgICAubmwtbW9kYWwtbG9hZGVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIH1cbiAgICAgICAgLm5sLW1vZGFsIHtcbiAgICAgICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbkBrZXlmcmFtZXMgbWFza0ZhZGVJbiB7XG4gICAgZnJvbSB7XG4gICAgICAgIG9wYWNpdHk6MDtcbiAgICB9XG4gICAgdG8ge1xuICAgICAgICBvcGFjaXR5OjE7XG4gICAgfVxufVxuQGtleWZyYW1lcyBtb2RhbFNsaWRlIHtcbiAgICBmcm9tIHtcbiAgICAgICAgbWFyZ2luLXRvcDo1MHB4O1xuICAgICAgICBvcGFjaXR5OjA7XG4gICAgfVxuICAgIHRvcCB7XG4gICAgICAgIG1hcmdpbi10b3A6MDtcbiAgICAgICAgb3BhY2l0eToxO1xuICAgIH1cbn1cbiIsIi5ubC10b29sdGlwIHtcbiAgICBkaXNwbGF5Om5vbmU7XG4gICAgcG9zaXRpb246Zml4ZWQ7XG4gICAgd2lkdGg6MzAwcHg7XG4gICAgei1pbmRleDoxMDEwO1xuICAgIC5ubC10b29sdGlwLWlubmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDpoc2xhKDAsIDAsIDIwLCAwLjkpO1xuICAgICAgICBjb2xvcjojZmZmO1xuICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgZm9udC1zaXplOjEwcHg7XG4gICAgICAgIHBhZGRpbmc6MC41ZW0gMWVtO1xuICAgICAgICBmb250LXdlaWdodDoyMDA7XG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICBib3JkZXItcmFkaXVzOjJweDtcbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6XCJcIjtcbiAgICAgICAgICAgIHdpZHRoOjA7XG4gICAgICAgICAgICBoZWlnaHQ6MDtcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgfVxuICAgIH1cbiAgICAmLm5sLXRvb2x0aXAtdG9wLFxuICAgICYubmwtdG9vbHRpcC1ib3R0b20ge1xuICAgICAgICAubmwtdG9vbHRpcC1pbm5lciB7XG4gICAgICAgICAgICBsZWZ0OjA7XG4gICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6NHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodDo0cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi5ubC10b29sdGlwLXRvcCB7XG4gICAgICAgIC5ubC10b29sdGlwLWlubmVyIHtcbiAgICAgICAgICAgIGJvdHRvbToxMHB4O1xuICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICB0b3A6MTAwJTtcbiAgICAgICAgICAgICAgICBib3JkZXItdG9wOjZweCBzb2xpZCBoc2xhKDAsIDAsIDIwLCAwLjkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgICYubmwtdG9vbHRpcC1ib3R0b20ge1xuICAgICAgICAubmwtdG9vbHRpcC1pbm5lciB7XG4gICAgICAgICAgICB0b3A6MTBweDtcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgYm90dG9tOjEwMCU7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTo2cHggc29saWQgaHNsYSgwLCAwLCAyMCwgMC45KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAmLm5sLXRvb2x0aXAtbGVmdCxcbiAgICAmLm5sLXRvb2x0aXAtcmlnaHQge1xuICAgICAgICAubmwtdG9vbHRpcC1pbm5lciB7XG4gICAgICAgICAgICB0b3A6MDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICB0b3A6NTAlO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3A6NHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206NHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgICYubmwtdG9vbHRpcC1sZWZ0IHtcbiAgICAgICAgLm5sLXRvb2x0aXAtaW5uZXIge1xuICAgICAgICAgICAgcmlnaHQ6MTBweDtcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgbGVmdDoxMDAlO1xuICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OjZweCBzb2xpZCBoc2xhKDAsIDAsIDIwLCAwLjkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgICYubmwtdG9vbHRpcC1yaWdodCB7XG4gICAgICAgIC5ubC10b29sdGlwLWlubmVyIHtcbiAgICAgICAgICAgIGxlZnQ6MTBweDtcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgcmlnaHQ6MTAwJTtcbiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQ6NnB4IHNvbGlkIGhzbGEoMCwgMCwgMjAsIDAuOSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi5ubC10b29sdGlwLWFjdGl2ZSB7XG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIGFuaW1hdGlvbjpzaG93VFQgMjAwbXMgZWFzZS1vdXQ7XG4gICAgfVxufVxuQGtleWZyYW1lcyBzaG93VFQge1xuICAgIGZyb20ge1xuICAgICAgICBvcGFjaXR5OjA7XG4gICAgfVxuICAgIHRvcCB7XG4gICAgICAgIG9wYWNpdHk6MTtcbiAgICB9XG59XG4iLCIubmwtZHJvcGRvd24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAmW2RhdGEtcG9zaXRpb249J3JpZ2h0J10ge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgLm5sLWRyb3Bkb3duLW1lbnUge1xuICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICB9XG4gICAgfVxuICAgIC5ubC1kcm9wZG93bi1tZW51IHtcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogMTAwJTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgICAgYmFja2dyb3VuZDogaHNsKDAsIDAsIDI1KTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIHotaW5kZXg6IC0xMDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAuNWVtIDA7XG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgPiBhLFxuICAgICAgICAgICAgPiBzcGFuLFxuICAgICAgICAgICAgPiBidXR0b24ge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNmVtIDFlbTtcbiAgICAgICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4ycyBlYXNlO1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBpbmhlcml0O1xuICAgICAgICAgICAgICAgICZbZGlzYWJsZWRdIHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogLjI7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICA+IGEsXG4gICAgICAgICAgICA+IGJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICAgICAgICAgICAgJjpob3Zlcjpub3QoW2Rpc2FibGVkXSkge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBoc2xhKDAsIDAsIDEwMCwgLjA1KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm5vdGUge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAuNjkyMzA3NjkyM2VtO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogaHNsKDAsIDAsIDY1KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi5ubC1kcm9wZG93bi1hY3RpdmUge1xuICAgICAgICAubmwtZHJvcGRvd24tbWVudSB7XG4gICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgICAgICAgICAgei1pbmRleDogMTAwMDtcbiAgICAgICAgICAgIHRvcDogMTAwJTtcbiAgICAgICAgICAgIGJvdHRvbTogYXV0bztcbiAgICAgICAgICAgIGFuaW1hdGlvbjogc2hvd0Ryb3Bkb3duIDIwMG1zIGVhc2Utb3V0O1xuICAgICAgICB9XG4gICAgICAgICYubmwtZHJvcGRvd24tdG9wIHtcbiAgICAgICAgICAgIC5ubC1kcm9wZG93bi1tZW51IHtcbiAgICAgICAgICAgICAgICB0b3A6IGF1dG87XG4gICAgICAgICAgICAgICAgYm90dG9tOiAxMDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5ubC1kcm9wZG93bi10b2dnbGUsXG4gICAgICAgIC5ubC1kcm9wZG93bi10b2dnbGU6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogaHNsKDAsIDAsIDI1KTtcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICB9XG4gICAgfVxuICAgIC5jaGVja2JveCB7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIHBhZGRpbmc6IDAgMWVtO1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIGxhYmVsIHtcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmZpbHRlci1jaGVja2VkLWFtb3VudCB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogMWVtO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICAgICAgcGFkZGluZzogLjVlbTtcbiAgICAgICAgbWluLXdpZHRoOiAyZW07XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTUwJSwgMCk7XG4gICAgICAgIGJhY2tncm91bmQ6ICNGMzU5MEE7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MDBlbTtcbiAgICAgICAgei1pbmRleDogMjtcbiAgICB9XG59XG5cbkBrZXlmcmFtZXMgc2hvd0Ryb3Bkb3duIHtcbiAgICBmcm9tIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG4gICAgdG9wIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG59XG4iLCIubmwtYnRuIHtcbiAgICBiYWNrZ3JvdW5kOjAgMDtcbiAgICBib3JkZXI6bm9uZTtcbiAgICBib3JkZXItcmFkaXVzOjJweDtcbiAgICBjb2xvcjokdGV4dENvbG9yO1xuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgIGhlaWdodDokYnRuSGVpZ2h0O1xuICAgIG1hcmdpbjowO1xuICAgIG1pbi13aWR0aDo2NHB4O1xuICAgIHBhZGRpbmc6MCAxMnB4O1xuICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgIGZvbnQtZmFtaWx5OiRiYXNlRm9udDtcbiAgICBmb250LXNpemU6MTNweDtcbiAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgd2lsbC1jaGFuZ2U6Ym94LXNoYWRvdztcbiAgICB0cmFuc2l0aW9uOmJveC1zaGFkb3cgLjJzIGN1YmljLWJlemllciguNCwwLDEsMSksIGJhY2tncm91bmQtY29sb3IgLjJzIGN1YmljLWJlemllciguNCwwLC4yLDEpLCBjb2xvciAuMnMgY3ViaWMtYmV6aWVyKC40LDAsLjIsMSk7XG4gICAgb3V0bGluZTpub25lO1xuICAgIGN1cnNvcjpwb2ludGVyO1xuICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiRidG5IZWlnaHQ7XG4gICAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOmhzbGEoMCwgMCwgNjIsIDAuMik7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgIH1cbiAgICAmOmZvY3VzOm5vdCg6YWN0aXZlKSB7XG4gICAgICAgIGJhY2tncm91bmQ6aHNsYSgwLCAwLCA2MiwgMC4zKTtcbiAgICB9XG4gICAgJjphY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kOmhzbGEoMCwgMCwgNjIsIDAuNCk7XG4gICAgfVxuXG4gICAgJi5ubC1idG4tbGluayB7XG4gICAgICAgIGNvbG9yOiRsaW5rQ29sb3I7XG4gICAgfVxuXG4gICAgJi5ubC1idG4taWNvbiB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6NTAlO1xuICAgICAgICB3aWR0aDokYnRuSGVpZ2h0O1xuICAgICAgICBtaW4td2lkdGg6JGJ0bkhlaWdodDtcbiAgICAgICAgcGFkZGluZzowO1xuICAgICAgICBmb250LXNpemU6MjRweDtcbiAgICAgICAgaSB7XG4gICAgICAgICAgICBmb250LXNpemU6aW5oZXJpdDtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLm5sLWJ0bi1wcmltYXJ5IHtcbiAgICAgICAgYmFja2dyb3VuZDokbGlua0NvbG9yO1xuICAgICAgICBjb2xvcjojZmZmO1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ZGFya2VuKCRsaW5rQ29sb3IsIDQlKTtcbiAgICAgICAgfVxuICAgICAgICAmOmZvY3VzOm5vdCg6YWN0aXZlKSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOmRhcmtlbigkbGlua0NvbG9yLCA1JSk7XG4gICAgICAgIH1cbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgYmFja2dyb3VuZDpkYXJrZW4oJGxpbmtDb2xvciwgNiUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi5ubC1idG4td2hpdGUge1xuICAgICAgICBiYWNrZ3JvdW5kOiNmZmY7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDpoc2xhKDAsIDAsIDYyLCAwLjIpO1xuICAgICAgICB9XG4gICAgICAgICY6Zm9jdXM6bm90KDphY3RpdmUpIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6aHNsYSgwLCAwLCA2MiwgMC4zKTtcbiAgICAgICAgfVxuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOmhzbGEoMCwgMCwgNjIsIDAuNCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpIHtcbiAgICAgICAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xuICAgICAgICBmb250LXNpemU6MTVweDtcbiAgICB9XG5cbiAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgb3BhY2l0eTowLjU7XG4gICAgfVxuICAgIC5ubC1kcm9wZG93bi1hY3RpdmUgPiAmIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4IDJweCAwIDA7XG4gICAgfVxufVxuXG4ubmwtc2VsZWN0IHtcbiAgICBib3JkZXI6bm9uZTtcbiAgICBjb2xvcjokdGV4dENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiRiYXNlRm9udDtcbiAgICBib3JkZXItcmFkaXVzOjJweDtcbiAgICBoZWlnaHQ6JGJ0bkhlaWdodDtcbiAgICBwYWRkaW5nOjRweCAzMnB4IDRweCAxMHB4O1xuICAgIGZvbnQtc2l6ZTokcGFuZWxGb250U2l6ZTtcbiAgICBhcHBlYXJhbmNlOm5vbmU7XG4gICAgY3Vyc29yOnBvaW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjpoc2woMCwgMCwgOTYpO1xuICAgIHRyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAuMnMgY3ViaWMtYmV6aWVyKC40LDAsLjIsMSksIGNvbG9yIC4ycyBjdWJpYy1iZXppZXIoLjQsMCwuMiwxKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOlxuICAgICAgICBsaW5lYXItZ3JhZGllbnQoNDVkZWcsIHRyYW5zcGFyZW50IDUwJSwgZ3JheSA1MCUpLFxuICAgICAgICBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCBncmF5IDUwJSwgdHJhbnNwYXJlbnQgNTAlKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOlxuICAgICAgICBjYWxjKDEwMCUgLSAxNnB4KSA1MCUsXG4gICAgICAgIGNhbGMoMTAwJSAtIDExcHgpIDUwJTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6XG4gICAgICAgIDRweCA1cHgsXG4gICAgICAgIDVweCA1cHg7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjpoc2woMCwgMCwgOTQpO1xuICAgIH1cbiAgICAmOmZvY3VzOm5vdCg6YWN0aXZlKSB7XG4gICAgICAgIG91dGxpbmU6bm9uZTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjpoc2woMCwgMCwgOTIpO1xuICAgIH1cbn1cblxuLmxheW91dC1pY29uIHtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIHdpZHRoOjUwcHg7XG4gICAgaGVpZ2h0Ojc1cHg7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246NTAlIDUwJTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6Y29udGFpbjtcbiAgICAubmdjYiAucHJldmlldy1wYW5lbCAmIHtcbiAgICAgICAgd2lkdGg6OTAlO1xuICAgICAgICBoZWlnaHQ6MDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206MTMwJTtcbiAgICAgICAgbWFyZ2luOjFlbSBhdXRvIDA7XG4gICAgICAgIGJvcmRlcjoycHggc29saWQgaHNsKDAsIDAsIDYzKTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOjk1JTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czozcHg7XG4gICAgfVxufVxuXG4ubG9hZGluZy1uZy1pY29uIHtcbiAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOnJlbGF0aXZlO1xuICBmb250LXNpemU6MWVtO1xuICB3aWR0aDoxLjM3NWVtO1xuICBoZWlnaHQ6Mi4zNzVlbTtcbiAgbWFyZ2luOjBlbSAxLjVlbSAtMC4zZW07XG4gIHRyYW5zZm9ybTpyb3RhdGUoLTQ4ZGVnKTtcbiAgYW5pbWF0aW9uOmxvYWRSb3RhdGUgMS41cyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoMC40NSwgMC4wNSwgMC41NSwgMC45NSk7XG4gICY6OmJlZm9yZSxcbiAgJjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6XCJcIjtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIGJhY2tncm91bmQ6Y3VycmVudENvbG9yO1xuICAgIGJvcmRlci1yYWRpdXM6NTAlO1xuICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgIGxlZnQ6NTAlO1xuICB9XG4gICY6OmJlZm9yZSB7XG4gICAgd2lkdGg6MWVtO1xuICAgIGhlaWdodDoxZW07XG4gICAgbWFyZ2luLWxlZnQ6LTAuNWVtO1xuICAgIGJvdHRvbToxLjM3NWVtO1xuICAgIGFuaW1hdGlvbjpsb2FkQm91bmNlVG9wU3F1YXNoIDAuNzVzIGFsdGVybmF0ZSBpbmZpbml0ZSBlYXNlLCBsb2FkQm91bmNlVG9wRmxvdyAwLjc1cyBhbHRlcm5hdGUgaW5maW5pdGUgZWFzZTtcbiAgfVxuICAmOjphZnRlciB7XG4gICAgd2lkdGg6MS4zNzVlbTtcbiAgICBoZWlnaHQ6MS4zNzVlbTtcbiAgICBtYXJnaW4tbGVmdDotMC42ODc1ZW07XG4gICAgYm90dG9tOjA7XG4gICAgYW5pbWF0aW9uOmxvYWRCb3VuY2VCb3R0b21TcXVhc2ggMC43NXMgYWx0ZXJuYXRlIGluZmluaXRlIGVhc2UsIGxvYWRCb3VuY2VCb3R0b21GbG93IDAuNzVzIGFsdGVybmF0ZSBpbmZpbml0ZSBlYXNlO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGxvYWRCb3VuY2VUb3BTcXVhc2gge1xuICAwJSB7XG4gICAgaGVpZ2h0OjAuMzc1ZW07XG4gICAgYm9yZGVyLXJhZGl1czozLjc1ZW0gMy43NWVtIDEuMjVlbSAxLjI1ZW07XG4gICAgdHJhbnNmb3JtOnNjYWxlWCgyKTtcbiAgfVxuICAxNSUge1xuICAgIGhlaWdodDoxZW07XG4gICAgYm9yZGVyLXJhZGl1czo1MCU7XG4gICAgdHJhbnNmb3JtOnNjYWxlWCgxKTtcbiAgfVxuICAxMDAlIHtcbiAgICBoZWlnaHQ6MWVtO1xuICAgIGJvcmRlci1yYWRpdXM6NTAlO1xuICAgIHRyYW5zZm9ybTpzY2FsZVgoMSk7XG4gIH1cbn1cbkBrZXlmcmFtZXMgbG9hZEJvdW5jZUJvdHRvbVNxdWFzaCB7XG4gIDAlIHtcbiAgICBoZWlnaHQ6MWVtO1xuICAgIGJvcmRlci1yYWRpdXM6MS4yNWVtIDEuMjVlbSAzLjc1ZW0gMy43NWVtO1xuICAgIHRyYW5zZm9ybTpzY2FsZVgoMS41KTtcbiAgfVxuICAxNSUge1xuICAgIGhlaWdodDoxLjM3NWVtO1xuICAgIGJvcmRlci1yYWRpdXM6NTAlO1xuICAgIHRyYW5zZm9ybTpzY2FsZVgoMSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgaGVpZ2h0OjEuMzc1ZW07XG4gICAgYm9yZGVyLXJhZGl1czo1MCU7XG4gICAgdHJhbnNmb3JtOnNjYWxlWCgxKTtcbiAgfVxufVxuQGtleWZyYW1lcyBsb2FkQm91bmNlVG9wRmxvdyB7XG4gIDAlIHtcbiAgICBib3R0b206MS4xMjVlbTtcbiAgfVxuICA1MCUge1xuICAgIGJvdHRvbToyLjI1ZW07XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMC41NSwgMC4wNiwgMC42OCwgMC4xOSk7XG4gIH1cbiAgOTAlIHtcbiAgICBib3R0b206MS43NWVtO1xuICB9XG4gIDEwMCUge1xuICAgIGJvdHRvbToxLjc1ZW07XG4gIH1cbn1cbkBrZXlmcmFtZXMgbG9hZEJvdW5jZUJvdHRvbUZsb3cge1xuICAwJSB7XG4gICAgYm90dG9tOjAuMTg3NWVtO1xuICB9XG4gIDUwJSB7XG4gICAgYm90dG9tOi0wLjkzNzVlbTtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLjU1LCAwLjA2LCAwLjY4LCAwLjE5KTtcbiAgfVxuICA5MCUge1xuICAgIGJvdHRvbTowZW07XG4gIH1cbiAgMTAwJSB7XG4gICAgYm90dG9tOjBlbTtcbiAgfVxufVxuQGtleWZyYW1lcyBsb2FkUm90YXRlIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTpyb3RhdGUoLTIyOGRlZyk7XG4gIH1cbiAgNDklIHtcbiAgICB0cmFuc2Zvcm06cm90YXRlKC00OGRlZyk7XG4gIH1cbiAgNTElIHtcbiAgICB0cmFuc2Zvcm06cm90YXRlKC00OGRlZyk7XG4gIH1cbiAgOTIlIHtcbiAgICB0cmFuc2Zvcm06cm90YXRlKDEzMmRlZyk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOnJvdGF0ZSgxMzJkZWcpO1xuICB9XG59XG4iLCIjcnVsZXMge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBpbnB1dFt0eXBlPSdjaGVja2JveCddIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAtOTk5OWVtO1xuICAgICAgICArIGxhYmVsIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgcGFkZGluZzogMCAwIDAgMS43NWVtO1xuICAgICAgICAgICAgbWFyZ2luOiAuNWVtIDAgMWVtO1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS40O1xuICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBAZXh0ZW5kICVtYXRlcmlhbC1pY29ucztcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnY2hlY2tfYm94X291dGxpbmVfYmxhbmsnO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJjpjaGVja2VkIHtcbiAgICAgICAgICAgICsgbGFiZWwge1xuICAgICAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICdjaGVja19ib3gnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLm5sLXJ1bGVzLWhlYWQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGNvbG9yOiBoc2woMCwgMCwgMzQpO1xuICAgIHBhZGRpbmc6IDAgMCAycHg7XG4gICAgLm5sLXJ1bGVzLWhlYWQtd3JhcHBlciB7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHBhZGRpbmctbGVmdDogJGd1dHRlcjtcbiAgICB9XG4gICAgLnJ1bGUtcHJpb3JpdHkge1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIH1cbn1cblxuLm5sLXJ1bGUtY2VsbCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDRweCAkZ3V0dGVyIDRweCAwO1xuICAgICYucnVsZS1wcmlvcml0eSB7XG4gICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgfVxuICAgICYucnVsZS1sYXlvdXQge1xuICAgICAgICB3aWR0aDogMjUlO1xuICAgIH1cbiAgICAmLnJ1bGUtdGFyZ2V0cyB7XG4gICAgICAgIHdpZHRoOiAyNSU7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG4gICAgJi5ydWxlLWNvbmRpdGlvbnMge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIG1pbi13aWR0aDogMDtcbiAgICAgICAgdWwge1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQuMmVtO1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgICAgICAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDM7XG4gICAgICAgICAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgICAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICYubmwtaW5saW5lIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICA+IGxpIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDJweDtcbiAgICAgICAgICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJywnO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLm5sLWVsbGlwc2lzIHtcbiAgICAgICAgICAgICAgICA+IGxpIHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICAgICAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHAge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHVsIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgID4gbGkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICAgIC51bmlxdWUge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgICAgIGNvbG9yOiBoc2woMCwgMCwgMjApO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4ubmwtcnVsZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtYXJnaW46IDAgMCAxMHB4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAmLm5sLXJ1bGUtaGlkZGVuIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgLnJ1bGUtcHJpb3JpdHkge1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgcGFkZGluZy10b3A6ICRndXR0ZXI7XG4gICAgfVxuICAgICYuc2hvdy1ib2R5IHtcbiAgICAgICAgLm5sLXJ1bGUtYm9keSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIEBleHRlbmQgJWZhZGVJbjtcbiAgICAgICAgfVxuICAgICAgICAucnVsZS1kZXRhaWxzIHtcbiAgICAgICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiAna2V5Ym9hcmRfYXJyb3dfdXAnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgICYuc2hvdy1hY3Rpb25zIHtcbiAgICAgICAgLm5sLXJ1bGUtYWN0aW9ucyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIEBleHRlbmQgJWZhZGVJbjtcbiAgICAgICAgfVxuICAgICAgICAmLnNob3ctYm9keSB7XG4gICAgICAgICAgICAubmwtcnVsZS1hY3Rpb25zIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBoc2woMCwgMCwgOTApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnJ1bGUtZGV0YWlscyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgcGFkZGluZzogJGd1dHRlciAxMnB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiBoc2woMCwgMCwgOTApO1xuICAgICAgICBsaW5lLWhlaWdodDogMS42NjY2NjY2NjY3O1xuICAgICAgICBjb2xvcjogaHNsKDAsIDAsIDIwKTtcbiAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICAgICAgbWFyZ2luOiAxcHggMCAwIC4xMjVlbTtcbiAgICAgICAgICAgIEBleHRlbmQgJW1hdGVyaWFsLWljb25zO1xuICAgICAgICAgICAgY29udGVudDogJ2tleWJvYXJkX2Fycm93X2Rvd24nO1xuICAgICAgICB9XG4gICAgfVxuICAgIC5ubC1ydWxlLWhlYWQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICRndXR0ZXI7XG4gICAgICAgIGNvbG9yOiBoc2woMCwgMCwgNDApO1xuICAgICAgICAucnVsZS1sYXlvdXQge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgICAgIGNvbG9yOiBoc2woMCwgMCwgMjApO1xuICAgICAgICB9XG4gICAgICAgIC5ubC1kcm9wZG93biB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgICAgICAgICAubmwtZHJvcGRvd24tdG9nZ2xlIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgICAgICAgIG1pbi13aWR0aDogYXV0bztcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMCAuNzVlbTtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgICAgICAgICAgIGkge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5uby1sYXlvdXQge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgICAgIGNvbG9yOiBoc2woMCwgMCwgNjApO1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkIGhzbCgwLCAwLCA5MCk7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogLjZlbSAuNmVtIC42ZW0gMWVtO1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBpIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IGhzbCgwLCAwLCA3MCk7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLjI1ZW07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC5ubC1ydWxlLWJvZHkge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICBwYWRkaW5nOiAkZ3V0dGVyO1xuICAgICAgICBiYWNrZ3JvdW5kOiBoc2woMCwgMCwgOTApO1xuICAgICAgICBoNCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICAgICAgbWFyZ2luOiAwIDAgMS42NjY2NjY2NjY3ZW07XG4gICAgICAgIH1cbiAgICAgICAgcC5ub3RlIHtcbiAgICAgICAgICAgIG1hcmdpbjogMS41ZW0gMCAwO1xuICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgICAgICB9XG4gICAgICAgIC5ydWxlLWxheW91dC1pbmZvIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgICAgIC5ydWxlLWxheW91dC1pbmZvLWljb24ge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTJweDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBoc2woMCwgMCwgNjMpO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDJweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogNTZweDtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAuNjU7XG4gICAgICAgICAgICAgICAgLmxheW91dC1pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNTAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5ydWxlLWxheW91dC1pbmZvLXRleHQge1xuICAgICAgICAgICAgICAgIG1pbi13aWR0aDogODBweDtcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgICAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvcm0ge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogaHNsKDAsIDAsIDk2KTtcbiAgICAgICAgICAgIHBhZGRpbmc6IC44ZW07XG4gICAgICAgICAgICBtYXJnaW46IC41ZW0gMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgICAgIGxhYmVsIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgMCAuMjVlbTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlucHV0W3R5cGU9J3RleHQnXSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IC41ZW07XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIDAgMWVtO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxlY3Q6bm90KFttdWx0aXBsZV0pIHtcbiAgICAgICAgICAgICAgICBAZXh0ZW5kIC5ubC1zZWxlY3Q7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgMCAxZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxlY3RbbXVsdGlwbGVdIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIDAgMWVtO1xuICAgICAgICAgICAgICAgIG9wdGlvbiB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IC4yNWVtO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5mb3JtLWFjdGlvbnMge1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLm5sLWJ0biB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyOHB4O1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuanMtaW5wdXQtYnJvd3NlIHtcbiAgICAgICAgICAgICAgICAuanMtY2xlYXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCBoc2woMCwgMCwgOTYpO1xuICAgICAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGhzbCgwLCAwLCA5OCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmpzLXRyaWdnZXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAkaW5wdXRIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgICAgICAgICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAkaW5wdXRIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJGxpbmtDb2xvcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6ICRpbnB1dEhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjE1cyBlYXNlLCBjb2xvciAuMTVzIGVhc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGRhcmtlbigkbGlua0NvbG9yLCA0JSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5lcnJvcnMge1xuICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IC0uNWVtIDAgMWVtO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2YwMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsYWJlbCArIC5lcnJvcnMge1xuICAgICAgICAgICAgICAgIG1hcmdpbjogLjI1ZW0gMCAuMTI1ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cbiAgICAubmwtcnVsZS1hY3Rpb25zIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIGhzbGEoMCwgMCwgMCwgLjA3NSk7XG4gICAgICAgIHBhZGRpbmc6ICRndXR0ZXI7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIH1cbiAgICAuc2V0dGluZ3MtbG9hZGVyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgY29sb3I6IGhzbCgwLCAwLCA3NSk7XG4gICAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICAgICAgcGFkZGluZzogMWVtIDA7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gICAgLnNldHRpbmdzLWxpc3Qge1xuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAuNWVtIDIuNWVtIC41ZW0gMWVtO1xuICAgICAgICAgICAgbWFyZ2luOiAwIDAgLjVlbTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGhzbGEoMCwgMCwgMTAwLCAuNSk7XG4gICAgICAgICAgICAucmVtb3ZlLXNldHRpbmcge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICByaWdodDogNnB4O1xuICAgICAgICAgICAgICAgIHRvcDogN3B4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxOHB4O1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDE4cHg7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgY29sb3I6IGhzbCgzMzAsIDEwMCwgNTApO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjE1cztcbiAgICAgICAgICAgICAgICBpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjMzMzMzMzMzMzNlbTtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIC4wOCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5zZXR0aW5ncy12YWx1ZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgICAgJi5lZGl0YWJsZS12YWx1ZSB7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgaHNsYSgwLCAwLCAwLCAuMik7XG4gICAgICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICBAZXh0ZW5kICVtYXRlcmlhbC1pY29ucztcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJ2VkaXQnO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMTY2NjY2NjY2N2VtO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGxpbmtDb2xvcjtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIDAgMnB4IC41ZW07XG4gICAgICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC5kaXNhYmxlZC1sYWJlbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgcGFkZGluZzogLjVlbSAxLjI1ZW07XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgbWFyZ2luOiAwICRndXR0ZXI7XG4gICAgICAgIGJhY2tncm91bmQ6ICRoaWdobGlnaHRDb2xvcjtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgfVxuXG4gICAgLnNvcnRpbmcgJiB7XG4gICAgICAgIC5ubC1ydWxlLWNvbnRlbnQge1xuICAgICAgICAgICAgY3Vyc29yOiBtb3ZlO1xuICAgICAgICAgICAgY3Vyc29yOiBncmFiO1xuICAgICAgICAgICAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG4gICAgICAgICAgICBib3gtc2hhZG93OiAwIDJweCA0cHggaHNsYSgwLCAwLCAwLCAuMyk7XG4gICAgICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBncmFiYmluZztcbiAgICAgICAgICAgICAgICBjdXJzb3I6IC13ZWJraXQtZ3JhYmJpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLm5sLXJ1bGUtaGVhZCB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoJ2RhdGE6IGltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFNQUFBQURDQVlBQUFCV0tMVy9BQUFBRjBsRVFWUUlXMk5rWUdENHo4REF3TWdBSTBBTURBNEFJM0VCQkNLck9uUUFBQUFBU1VWT1JLNUNZSUk9JykgcmVwZWF0O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA4cHg7XG4gICAgICAgICAgICAgICAgbGVmdDogNHB4O1xuICAgICAgICAgICAgICAgIHRvcDogOHB4O1xuICAgICAgICAgICAgICAgIGJvdHRvbTogOHB4O1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IC4yNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5ubC1kcm9wZG93biB7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogLjM7XG4gICAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLm5sLXJ1bGUtYWN0aW9ucyxcbiAgICAgICAgLnJlbW92ZS1zZXR0aW5nLFxuICAgICAgICAuc2V0dGluZ3MtYWN0aW9uLFxuICAgICAgICBhLmpzLWxpbmstbGF5b3V0LFxuICAgICAgICAuanMtb3Blbi1ibSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICAgICAgLmVkaXRhYmxlLXZhbHVlIHtcbiAgICAgICAgICAgIGJvcmRlcjogMCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmLm5sLXJ1bGUtaGlkZGVuIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi51aS1zb3J0YWJsZS1wbGFjZWhvbGRlciB7XG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2libGUgIWltcG9ydGFudDtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIG91dGxpbmU6IDFweCBkYXNoZWQgJHBhbmVsTGlnaHRDb2xvcjtcbiAgICAgICAgb3V0bGluZS1vZmZzZXQ6IDRweDtcbiAgICAgICAgKiB7XG4gICAgICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5ubC1ydWxlLWNvbnRlbnQge1xuICAgIGZsZXg6IDE7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3gtc2hhZG93OiAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAuMik7XG59XG5cbi5ubC1ydWxlcyB7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDE2NHB4O1xuICAgIGJvdHRvbTogJGd1dHRlciAqIDEuNTtcbiAgICBwYWRkaW5nOiA0cHggJGd1dHRlciAqIDEuNSAkZ3V0dGVyICogNCAkZ3V0dGVyICogMS41O1xuICAgIC5ubC1ydWxlLWJldHdlZW4ge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbjogLjc1ZW0gMDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAuc29ydGluZyAmIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgICAgaSB7XG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjc1ZW07XG4gICAgICAgIH1cbiAgICAgICAgLmhpZGRlbi1hbW91bnQge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC01MCUsIDApO1xuICAgICAgICAgICAgZm9udC1zaXplOiAuOGVtO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLm5sLW5vLWl0ZW1zLFxuLm5sLW5vLWZpbHRlcmVkLWl0ZW1zIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgbWFyZ2luOiAzZW0gMDtcbiAgICAmOjpiZWZvcmUsXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnLSc7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgbWFyZ2luOiAwIC41ZW07XG4gICAgfVxufVxuLm5vLWZpbHRlcmVkLWl0ZW1zIHtcbiAgICAubmwtcnVsZS1iZXR3ZWVuIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgLm5sLW5vLWZpbHRlcmVkLWl0ZW1zIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxufVxuXG4ubmwtbWFwcGluZ3MtZmlsdGVyIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuIiwiI2xheW91dHMge1xuICAgIGRpc3BsYXk6bm9uZTtcbn1cblxuLmpzLWNoYW5nZS1sYXlvdXRzLXZpZXcge1xuICAgICY6OmJlZm9yZSB7XG4gICAgICAgIEBleHRlbmQgJW1hdGVyaWFsLWljb25zO1xuICAgICAgICBjb250ZW50Olwidmlld19jb21meVwiO1xuICAgICAgICBsaW5lLWhlaWdodDppbmhlcml0O1xuICAgICAgICBmb250LXNpemU6MjRweDtcbiAgICB9XG59XG5cbi5ubC1sYXlvdXQtaWNvbiB7XG4gICAgYm9yZGVyOjFweCBzb2xpZCBoc2woMCwgMCwgNjMpO1xuICAgIHBhZGRpbmc6MXB4O1xuICAgIG9wYWNpdHk6MC42NTtcbiAgICAubGF5b3V0LWljb24ge1xuICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICBoZWlnaHQ6MDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206MTUwJTtcbiAgICB9XG59XG4ubmwtbGF5b3V0LWluZm8ge1xuICAgIC5ubC1sYXlvdXQtZGVzY3JpcHRpb24ge1xuICAgICAgICBwIHtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gICAgICAgIH1cbiAgICB9XG59XG4ubmwtbGF5b3V0LWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQ6I2ZmZjtcbiAgICBjb2xvcjpoc2woMCwgMCwgNDApO1xuICAgIGZvbnQtc2l6ZToxMnB4O1xuICAgIC5ubC1sYXlvdXQtbmFtZSB7XG4gICAgICAgIGNvbG9yOmhzbCgwLCAwLCAyMCk7XG4gICAgICAgIGZvbnQtc2l6ZToxNHB4O1xuICAgICAgICBmb250LXdlaWdodDo3MDA7XG4gICAgICAgIGEge1xuICAgICAgICAgICAgY29sb3I6aW5oZXJpdDtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgICAgICB9XG4gICAgfVxuICAgIC51bnB1Ymxpc2hlZC1sYWJlbCB7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcbiAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICBtYXJnaW46MCAxZW07XG4gICAgICAgIHBhZGRpbmc6MC41ZW0gMC43ZW07XG4gICAgICAgIGZvbnQtc2l6ZTo4cHg7XG4gICAgICAgIGNvbG9yOiNmZmY7XG4gICAgICAgIGJhY2tncm91bmQ6aHNsKDIwMCwgMjAsIDUwKTtcbiAgICAgICAgbGluZS1oZWlnaHQ6MS4zNzU7XG4gICAgICAgIGZvbnQtd2VpZ2h0OjcwMDtcbiAgICB9XG59XG4ubmwtbGF5b3V0LWFjdGlvbnMge1xuICAgIGFsaWduLWl0ZW1zOnN0cmV0Y2g7XG4gICAgLm5sLWxheW91dC1kYXRhIHtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICBmbGV4OjE7XG4gICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgLm1ldGEtaW5mbyB7XG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgICAgICBpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6MjBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6MC4yNWVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC5ubC1kcm9wZG93biB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6c3RyZXRjaDtcbiAgICAgICAgLm5sLWJ0biB7XG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgICAgICBoZWlnaHQ6YXV0bztcbiAgICAgICAgICAgIG1pbi13aWR0aDphdXRvO1xuICAgICAgICAgICAgZm9udC1zaXplOjI0cHg7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOjA7XG4gICAgICAgICAgICBpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6aW5oZXJpdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyogZ3JpZCB2aWV3ICovXG4ubmwtbGF5b3V0cy12aWV3LWdyaWQge1xuICAgIC5qcy1jaGFuZ2UtbGF5b3V0cy12aWV3IHtcbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6XCJ2aWV3X2xpc3RcIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAubmwtbGF5b3V0cyB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgZmxleC13cmFwOndyYXA7XG4gICAgICAgIG1hcmdpbjowIC0wLjc1KiRndXR0ZXI7XG4gICAgfVxuICAgIC5ubC1sYXlvdXQge1xuICAgICAgICB3aWR0aDoyNSU7XG4gICAgICAgIHBhZGRpbmc6MCAwLjc1KiRndXR0ZXI7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgLm5sLWxheW91dC1jb250ZW50IHtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6MCAxcHggMnB4IGhzbGEoMCwgMCwgMCAsIC4yKTtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgMS41KiRndXR0ZXI7XG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICBmbGV4OjE7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjpjb2x1bW47XG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAubmwtbGF5b3V0LWFjdGlvbnMge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiRsaW5rQ29sb3I7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiNmZmY7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLnVucHVibGlzaGVkLWxhYmVsIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46MTBweCAwIDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLm5sLWxheW91dC1pbmZvIHtcbiAgICAgICAgICAgIHBhZGRpbmc6MTBweCAxMHB4IDE1cHg7XG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczpmbGV4LXN0YXJ0O1xuICAgICAgICAgICAgZmxleDoxO1xuICAgICAgICAgICAgLm5sLWxheW91dC10ZXh0IHtcbiAgICAgICAgICAgICAgICBmbGV4OjE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAubmwtbGF5b3V0LW5hbWUge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMC41ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAubmwtbGF5b3V0LW1vZGlmaWVkIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6MTFweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46MWVtIDAgMDtcbiAgICAgICAgICAgICAgICBjb2xvcjpoc2woMCwgMCwgNjApO1xuICAgICAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLm5sLWxheW91dC10eXBlIHtcbiAgICAgICAgICAgIHdpZHRoOjQwcHg7XG4gICAgICAgICAgICBtYXJnaW46MCAxMHB4IDAgMDtcbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAubmwtbGF5b3V0LWFjdGlvbnMge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjpoc2woMCwgMCwgODMpO1xuICAgICAgICAgICAgaGVpZ2h0OjMwcHg7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246YmFja2dyb3VuZCAuMnM7XG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICAubmwtbGF5b3V0LWRhdGEge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAxMHB4O1xuICAgICAgICAgICAgICAgIC5tZXRhLWluZm8ge1xuICAgICAgICAgICAgICAgICAgICBpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOmluaGVyaXQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAubmwtZHJvcGRvd24ge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOnN0YXRpYztcbiAgICAgICAgICAgICAgICAubmwtYnRuIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzowIDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOmluaGVyaXQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5ubC1kcm9wZG93bi1tZW51IHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgICAgICAgICByaWdodDowO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAubmwtbGF5b3V0cy1oZWFkIHtcbiAgICAgICAgZGlzcGxheTpub25lICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5sYXlvdXQtc29ydGluZy1jb250cm9scyB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBwYWRkaW5nOiAwIDFlbSAwIDA7XG4gICAgICAgIC5ubC1zZWxlY3Qge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgfVxuICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgICAgICAgaSB7XG4gICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgICAgLmxheW91dC1zb3J0aW5nLWNvbnRyb2xzIHtcbiAgICAgICAgICAgIGZsb2F0OiBub25lO1xuICAgICAgICAgICAgcGFkZGluZzogMWVtIDAgMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNDAwcHgpIHtcbiAgICAgICAgLm5sLWxheW91dCB7XG4gICAgICAgICAgICB3aWR0aDozMy4zMzMzMzMzMzMzMzMlO1xuICAgICAgICB9XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6JGJyZWFrLW1kKSB7XG4gICAgICAgIC5ubC1sYXlvdXQge1xuICAgICAgICAgICAgd2lkdGg6NTAlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vKiBsaXN0IHZpZXcgKi9cbi5ubC1sYXlvdXRzLXZpZXctbGlzdCB7XG4gICAgLm5sLWxheW91dC1pbmZvIHtcbiAgICAgICAgZmxleDoxO1xuICAgICAgICBwYWRkaW5nOjAgJGd1dHRlcjtcbiAgICAgICAgLm5sLWxheW91dC10ZXh0IHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgIGZsZXg6MTtcbiAgICAgICAgfVxuICAgICAgICAubmwtbGF5b3V0LW5hbWUge1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDokZ3V0dGVyO1xuICAgICAgICAgICAgd2lkdGg6MzAlO1xuICAgICAgICAgICAgLm5sLWxheW91dC1leHBvcnQtY2hlY2tib3gge1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLm5sLWxheW91dC1kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICBmbGV4OjE7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiRndXR0ZXI7XG4gICAgICAgIH1cbiAgICAgICAgLm5sLWxheW91dC1tb2RpZmllZCB7XG4gICAgICAgICAgICB3aWR0aDoxODBweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246cmlnaHQ7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OjIwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLm5sLWxheW91dC10eXBlIHtcbiAgICAgICAgbWFyZ2luOjAgMCAwICRndXR0ZXI7XG4gICAgICAgIHdpZHRoOjEwMHB4O1xuICAgICAgICBvcmRlcjoxO1xuICAgIH1cbiAgICAubmwtbGF5b3V0LWFjdGlvbnMge1xuICAgICAgICBvcmRlcjoyO1xuICAgICAgICB3aWR0aDoxODBweDtcbiAgICAgICAgPiAqIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgfVxuICAgICAgICAubmwtbGF5b3V0LWRhdGEge1xuICAgICAgICAgICAgZmxleDoxO1xuICAgICAgICAgICAgcGFkZGluZzowICRndXR0ZXI7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAubmwtbGF5b3V0IHtcbiAgICAgICAgLm5sLWxheW91dC1jb250ZW50IHtcbiAgICAgICAgICAgIGJvcmRlcjoxcHggc29saWQgaHNsKDAsIDAsIDg1KTtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgLTFweDtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6NjBweDtcbiAgICAgICAgICAgID4gKiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAubmwtbGF5b3V0LXR5cGUge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgaGVpZ2h0OjYwcHg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgLm5sLWxheW91dC1pY29uIHtcbiAgICAgICAgICAgIHdpZHRoOjMycHg7XG4gICAgICAgICAgICBtYXJnaW46MCAxMHB4IDAgMDtcbiAgICAgICAgfVxuICAgICAgICAubmwtbGF5b3V0LWFjdGlvbnMge1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6c3RyZXRjaDtcbiAgICAgICAgICAgIC5ubC1sYXlvdXQtZGF0YSB7XG4gICAgICAgICAgICAgICAgLm1ldGEtaW5mbyB7XG4gICAgICAgICAgICAgICAgICAgIGkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6aHNsKDAsIDAsIDYwKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5ubC1kcm9wZG93biB7XG4gICAgICAgICAgICAgICAgLm5sLWJ0biB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwLjc1ZW07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5ubC1sYXlvdXQtZGVzY3JpcHRpb24ge1xuICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6MS41O1xuICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6M2VtO1xuICAgICAgICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6LXdlYmtpdC1ib3g7XG4gICAgICAgICAgICAgICAgLXdlYmtpdC1saW5lLWNsYW1wOjI7XG4gICAgICAgICAgICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsO1xuICAgICAgICAgICAgICAgIHRleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAubmwtbGF5b3V0LW1vZGlmaWVkIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZToxMXB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC5ubC1sYXlvdXRzLWhlYWQge1xuICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgIGZvbnQtc2l6ZToxMnB4O1xuICAgICAgICA+ICoge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICB9XG4gICAgICAgIC5qcy1yZW9yZGVyLWxheW91dHMge1xuICAgICAgICAgICAgY29sb3I6ICR0ZXh0Q29sb3I7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xuICAgICAgICAgICAgbWFyZ2luOiAwIC0xZW07XG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgICAgLnNvcnQtaWNvbiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDZweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEzcHg7XG4gICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgMCAwIC41ZW07XG4gICAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDhweCBzb2xpZCBjdXJyZW50Q29sb3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi5hY3RpdmUge1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogaHNsKDAsIDAsIDkwKTtcbiAgICAgICAgICAgICAgICAuc29ydC1pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAmLnNvcnRpbmctYXNjIHtcbiAgICAgICAgICAgICAgICAgICAgLnNvcnQtaWNvbjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci10b3A6IDhweCBzb2xpZCBjdXJyZW50Q29sb3I7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC5sYXlvdXQtc29ydGluZy1jb250cm9scyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDokYnJlYWstbGcpIHtcbiAgICAgICAgLm5sLWxheW91dC10eXBlIHtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgd2lkdGg6ODBweDtcbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAubmwtbGF5b3V0LWFjdGlvbnMge1xuICAgICAgICAgICAgd2lkdGg6MTQwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgIH1cbiAgICAgICAgLm5sLWxheW91dC1pbmZvIHtcbiAgICAgICAgICAgIC5ubC1sYXlvdXQtbmFtZSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6NDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLm5sLWxheW91dC1tb2RpZmllZCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDoyMHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5ubC1sYXlvdXRzLWhlYWQge1xuICAgICAgICAgICAgLmpzLXJlb3JkZXItbGF5b3V0cyB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogLjVlbSAuNzVlbTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgLS43NWVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6JGJyZWFrLW1kKSB7XG4gICAgICAgIC5ubC1sYXlvdXQtaW5mbyB7XG4gICAgICAgICAgICBwYWRkaW5nOjAgMCAwICRndXR0ZXI7XG4gICAgICAgICAgICAubmwtbGF5b3V0LW5hbWUge1xuICAgICAgICAgICAgICAgIGZsZXg6MTtcbiAgICAgICAgICAgICAgICB3aWR0aDphdXRvO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLm5sLWxheW91dC1kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4ubmwtc2hhcmVkLWxheW91dHMge1xuICAgIC5tZXRhLWluZm8ge1xuICAgICAgICBpIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLCAwLjFlbSwgMCkgcm90YXRlKDIxMGRlZyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5ubC1sYXlvdXQtZXhwb3J0LWNoZWNrYm94IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGlucHV0IHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBwb2ludGVyLWV2ZW50czogYWxsO1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICBsZWZ0OiAtOTk5OWVtO1xuICAgICAgICArIGxhYmVsIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMWVtO1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxZW07XG4gICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIEBleHRlbmQgJW1hdGVyaWFsLWljb25zO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcImNoZWNrX2JveF9vdXRsaW5lX2JsYW5rXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJjpjaGVja2VkIHtcbiAgICAgICAgICAgICsgbGFiZWwge1xuICAgICAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiY2hlY2tfYm94XCI7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkbGlua0NvbG9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgICAgICsgbGFiZWwge1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IC4yO1xuICAgICAgICAgICAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmxheW91dC1leHBvcnQgJiB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG59XG4iLCIubmwtbW9kYWwtY2FjaGUge1xuICAgIC5ubC1tb2RhbCB7XG4gICAgICAgIHdpZHRoOjYwMHB4O1xuICAgICAgICAubmwtbW9kYWwtYm9keSB7XG4gICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICAuZXJyb3JzIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjE1cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4ubmwtY2FjaGVzLXRhYmxlIHtcbiAgICB3aWR0aDoxMDAlO1xuICAgIGJvcmRlci1jb2xsYXBzZTpjb2xsYXBzZTtcbiAgICBtYXJnaW4tdG9wOi0xcHg7XG4gICAgdGgsXG4gICAgdGQge1xuICAgICAgICBwYWRkaW5nOjE1cHggMTVweCAxNHB4IDA7XG4gICAgICAgIGZvbnQtc2l6ZToxMnB4O1xuICAgICAgICBsaW5lLWhlaWdodDoxLjU7XG4gICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OjE1cHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGgge1xuICAgICAgICBiYWNrZ3JvdW5kOmhzbCgwLCAwLCA5NSk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OjcwMDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xuICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgICAgIC5ubC1idG4ge1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OjUwMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0ZCB7XG4gICAgICAgIGNvbG9yOmhzbCgwLCAwLCAzMCk7XG4gICAgICAgIHAge1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDppbmhlcml0O1xuICAgICAgICB9XG4gICAgICAgICYubmwtY2FjaGVzLXR0bCB7XG4gICAgICAgICAgICBmb250LXNpemU6MTRweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAubmwtY2FjaGVzLWFjdGlvbiB7XG4gICAgICAgIHRleHQtYWxpZ246cmlnaHQ7XG4gICAgfVxuICAgIHRib2R5IHtcbiAgICAgICAgdHIge1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbToxcHggc29saWQgaHNsKDAsIDAsIDgyKTtcbiAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTpub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gICAgICAgICsgbGFiZWwge1xuICAgICAgICAgICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgICAgICAgICAgdGV4dC1pbmRlbnQ6LTk5OWVtO1xuICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICB0ZXh0LWluZGVudDowO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLm5sLW1vZGFsLW1hc2sgJiB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgd2lkdGg6MmVtO1xuICAgICAgICAgICAgICAgIGhlaWdodDoyZW07XG4gICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4ubmwtY2FjaGVzLWVtcHR5IHtcbiAgICBwYWRkaW5nOjE1cHg7XG4gICAgbWFyZ2luOjFlbSAwO1xuICAgIHRleHQtYWxpZ246Y2VudGVyO1xufVxuIiwiLyohXG4gKiBEYXRldGltZXBpY2tlciBmb3IgQm9vdHN0cmFwIDNcbiAqIHZlcnNpb24gOiA0LjE3LjQ3XG4gKiBodHRwczovL2dpdGh1Yi5jb20vRW9uYXNkYW4vYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyL1xuICovXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldC5kcm9wZG93bi1tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMnB4IDA7XG4gIHBhZGRpbmc6IDRweDtcbiAgd2lkdGg6IDE5ZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQuZHJvcGRvd24tbWVudS50aW1lcGlja2VyLXNicyB7XG4gICAgd2lkdGg6IDM4ZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldC5kcm9wZG93bi1tZW51LnRpbWVwaWNrZXItc2JzIHtcbiAgICB3aWR0aDogMzhlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldC5kcm9wZG93bi1tZW51LnRpbWVwaWNrZXItc2JzIHtcbiAgICB3aWR0aDogMzhlbTtcbiAgfVxufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQuZHJvcGRvd24tbWVudTpiZWZvcmUsXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldC5kcm9wZG93bi1tZW51OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQuZHJvcGRvd24tbWVudS5ib3R0b206YmVmb3JlIHtcbiAgYm9yZGVyLWxlZnQ6IDdweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJpZ2h0OiA3cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b206IDdweCBzb2xpZCAjY2NjO1xuICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIHRvcDogLTdweDtcbiAgbGVmdDogN3B4O1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQuZHJvcGRvd24tbWVudS5ib3R0b206YWZ0ZXIge1xuICBib3JkZXItbGVmdDogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmlnaHQ6IDZweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWJvdHRvbTogNnB4IHNvbGlkIHdoaXRlO1xuICB0b3A6IC02cHg7XG4gIGxlZnQ6IDhweDtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0LmRyb3Bkb3duLW1lbnUudG9wOmJlZm9yZSB7XG4gIGJvcmRlci1sZWZ0OiA3cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yaWdodDogN3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wOiA3cHggc29saWQgI2NjYztcbiAgYm9yZGVyLXRvcC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBib3R0b206IC03cHg7XG4gIGxlZnQ6IDZweDtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0LmRyb3Bkb3duLW1lbnUudG9wOmFmdGVyIHtcbiAgYm9yZGVyLWxlZnQ6IDZweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJpZ2h0OiA2cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci10b3A6IDZweCBzb2xpZCB3aGl0ZTtcbiAgYm90dG9tOiAtNnB4O1xuICBsZWZ0OiA3cHg7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldC5kcm9wZG93bi1tZW51LnB1bGwtcmlnaHQ6YmVmb3JlIHtcbiAgbGVmdDogYXV0bztcbiAgcmlnaHQ6IDZweDtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0LmRyb3Bkb3duLW1lbnUucHVsbC1yaWdodDphZnRlciB7XG4gIGxlZnQ6IGF1dG87XG4gIHJpZ2h0OiA3cHg7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAubGlzdC11bnN0eWxlZCB7XG4gIG1hcmdpbjogMDtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IGFbZGF0YS1hY3Rpb25dIHtcbiAgcGFkZGluZzogNnB4IDA7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCBhW2RhdGEtYWN0aW9uXTphY3RpdmUge1xuICBib3gtc2hhZG93OiBub25lO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgLnRpbWVwaWNrZXItaG91cixcbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC50aW1lcGlja2VyLW1pbnV0ZSxcbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC50aW1lcGlja2VyLXNlY29uZCB7XG4gIHdpZHRoOiA1NHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiAxLjJlbTtcbiAgbWFyZ2luOiAwO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgYnV0dG9uW2RhdGEtYWN0aW9uXSB7XG4gIHBhZGRpbmc6IDZweDtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5idG5bZGF0YS1hY3Rpb249XCJpbmNyZW1lbnRIb3Vyc1wiXTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJJbmNyZW1lbnQgSG91cnNcIjtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5idG5bZGF0YS1hY3Rpb249XCJpbmNyZW1lbnRNaW51dGVzXCJdOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xuICBjb250ZW50OiBcIkluY3JlbWVudCBNaW51dGVzXCI7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAuYnRuW2RhdGEtYWN0aW9uPVwiZGVjcmVtZW50SG91cnNcIl06OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBwYWRkaW5nOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG4gIGNvbnRlbnQ6IFwiRGVjcmVtZW50IEhvdXJzXCI7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAuYnRuW2RhdGEtYWN0aW9uPVwiZGVjcmVtZW50TWludXRlc1wiXTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJEZWNyZW1lbnQgTWludXRlc1wiO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgLmJ0bltkYXRhLWFjdGlvbj1cInNob3dIb3Vyc1wiXTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJTaG93IEhvdXJzXCI7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAuYnRuW2RhdGEtYWN0aW9uPVwic2hvd01pbnV0ZXNcIl06OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBwYWRkaW5nOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG4gIGNvbnRlbnQ6IFwiU2hvdyBNaW51dGVzXCI7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCAuYnRuW2RhdGEtYWN0aW9uPVwidG9nZ2xlUGVyaW9kXCJdOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xuICBjb250ZW50OiBcIlRvZ2dsZSBBTS9QTVwiO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgLmJ0bltkYXRhLWFjdGlvbj1cImNsZWFyXCJdOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xuICBjb250ZW50OiBcIkNsZWFyIHRoZSBwaWNrZXJcIjtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5idG5bZGF0YS1hY3Rpb249XCJ0b2RheVwiXTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbiAgY29udGVudDogXCJTZXQgdGhlIGRhdGUgdG8gdG9kYXlcIjtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5waWNrZXItc3dpdGNoIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgLnBpY2tlci1zd2l0Y2g6OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBwYWRkaW5nOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG4gIGNvbnRlbnQ6IFwiVG9nZ2xlIERhdGUgYW5kIFRpbWUgU2NyZWVuc1wiO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgLnBpY2tlci1zd2l0Y2ggdGQge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IGF1dG87XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgLnBpY2tlci1zd2l0Y2ggdGQgc3BhbiB7XG4gIGxpbmUtaGVpZ2h0OiAyLjU7XG4gIGhlaWdodDogMi41ZW07XG4gIHdpZHRoOiAxMDAlO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQsXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0aCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGgge1xuICBoZWlnaHQ6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICB3aWR0aDogMjBweDtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRoLnBpY2tlci1zd2l0Y2gge1xuICB3aWR0aDogMTQ1cHg7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0aC5kaXNhYmxlZCxcbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRoLmRpc2FibGVkOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICM3Nzc3Nzc7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0aC5wcmV2OjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xuICBjb250ZW50OiBcIlByZXZpb3VzIE1vbnRoXCI7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0aC5uZXh0OjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAwO1xuICBjb250ZW50OiBcIk5leHQgTW9udGhcIjtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRoZWFkIHRyOmZpcnN0LWNoaWxkIHRoIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGhlYWQgdHI6Zmlyc3QtY2hpbGQgdGg6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZWVlZWVlO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQge1xuICBoZWlnaHQ6IDU0cHg7XG4gIGxpbmUtaGVpZ2h0OiA1NHB4O1xuICB3aWR0aDogNTRweDtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLmN3IHtcbiAgZm9udC1zaXplOiAuOGVtO1xuICBoZWlnaHQ6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBjb2xvcjogIzc3Nzc3Nztcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLmRheSB7XG4gIGhlaWdodDogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIHdpZHRoOiAyMHB4O1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQuZGF5OmhvdmVyLFxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQuaG91cjpob3Zlcixcbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLm1pbnV0ZTpob3Zlcixcbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLnNlY29uZDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNlZWVlZWU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLm9sZCxcbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLm5ldyB7XG4gIGNvbG9yOiAjNzc3Nzc3O1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQudG9kYXkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZC50b2RheTpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBib3JkZXI6IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItd2lkdGg6IDAgMCA3cHggN3B4O1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjMzM3YWI3O1xuICBib3JkZXItdG9wLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiA0cHg7XG4gIHJpZ2h0OiA0cHg7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZC5hY3RpdmUsXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZC5hY3RpdmU6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzM3YWI3O1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IDAgLTFweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZC5hY3RpdmUudG9kYXk6YmVmb3JlIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2ZmZjtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkLmRpc2FibGVkLFxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQuZGlzYWJsZWQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogIzc3Nzc3NztcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkIHNwYW4ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiA1NHB4O1xuICBoZWlnaHQ6IDU0cHg7XG4gIGxpbmUtaGVpZ2h0OiA1NHB4O1xuICBtYXJnaW46IDJweCAxLjVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZCBzcGFuOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2VlZWVlZTtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkIHNwYW4uYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzN2FiNztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiAwIC0xcHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQgdGFibGUgdGQgc3Bhbi5vbGQge1xuICBjb2xvcjogIzc3Nzc3Nztcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IHRhYmxlIHRkIHNwYW4uZGlzYWJsZWQsXG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldCB0YWJsZSB0ZCBzcGFuLmRpc2FibGVkOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICM3Nzc3Nzc7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG59XG4uYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLXdpZGdldC51c2V0d2VudHlmb3VyIHRkLmhvdXIge1xuICBoZWlnaHQ6IDI3cHg7XG4gIGxpbmUtaGVpZ2h0OiAyN3B4O1xufVxuLmJvb3RzdHJhcC1kYXRldGltZXBpY2tlci13aWRnZXQud2lkZXIge1xuICB3aWR0aDogMjFlbTtcbn1cbi5ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXItd2lkZ2V0IC5kYXRlcGlja2VyLWRlY2FkZXMgLmRlY2FkZSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjhlbSAhaW1wb3J0YW50O1xufVxuLmlucHV0LWdyb3VwLmRhdGUgLmlucHV0LWdyb3VwLWFkZG9uIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLnNyLW9ubHkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMDtcbn1cbiIsIkBpbXBvcnQgXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvZW9uYXNkYW4tYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyL2J1aWxkL2Nzcy9ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXJcIjtcblxuLm1hdGVyaWFsLWljb24tbGVmdCB7XG4gICY6OmJlZm9yZSB7XG4gICAgY29udGVudDogJ2tleWJvYXJkX2Fycm93X2xlZnQnO1xuICB9XG59XG4ubWF0ZXJpYWwtaWNvbi1yaWdodCB7XG4gICY6OmJlZm9yZSB7XG4gICAgY29udGVudDogJ2tleWJvYXJkX2Fycm93X3JpZ2h0JztcbiAgfVxufVxuLm1hdGVyaWFsLWljb24tdXAge1xuICAmOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICdrZXlib2FyZF9hcnJvd191cCc7XG4gIH1cbn1cbi5tYXRlcmlhbC1pY29uLWRvd24ge1xuICAmOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICdrZXlib2FyZF9hcnJvd19kb3duJztcbiAgfVxufVxuLm1hdGVyaWFsLWljb24tdGltZSB7XG4gICY6OmJlZm9yZSB7XG4gICAgY29udGVudDogJ2FjY2Vzc190aW1lJztcbiAgfVxufVxuLm1hdGVyaWFsLWljb24tY2FsZW5kYXIge1xuICAmOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICd0b2RheSc7XG4gIH1cbn1cbi5tYXRlcmlhbC1pY29uLWRvd24ge1xuICAmOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICdrZXlib2FyZF9hcnJvd19kb3duJztcbiAgfVxufVxuLm1hdGVyaWFsLWljb24tdHJhc2gge1xuICAmOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICdkZWxldGUnO1xuICB9XG59XG4ubWF0ZXJpYWwtaWNvbi1jbG9zZSB7XG4gICY6OmJlZm9yZSB7XG4gICAgY29udGVudDogJ2Nsb3NlJztcbiAgfVxufVxuLm1hdGVyaWFsLWljb24tdG9kYXkge1xuICAmOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICdteV9sb2NhdGlvbic7XG4gIH1cbn1cblxuLmRhdGV0aW1lcGlja2VyIHtcbiAgcGFkZGluZy1yaWdodDogMnJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAuaW5wdXQtZ3JvdXAge1xuICAgIGZsZXg6IDE7XG4gIH1cbiAgLmpzLWNsZWFyLWlucHV0IHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICB3aWR0aDogMnJlbTtcbiAgICB0b3A6IDUwJTtcbiAgICBoZWlnaHQ6IDJyZW07XG4gICAgbWFyZ2luLXRvcDogLTFyZW07XG4gICAgYm9yZGVyOiAwO1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjI1cztcbiAgICBjb2xvcjogI2QwMDIxYjtcbiAgICBpIHtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgfVxuICAgICY6Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG4gIH1cbiAgLmRhdGV0aW1lIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luOiAwIDAgLjVlbTtcbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAzZW07XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICAgIC5pbnB1dC1pY29uIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICBwYWRkaW5nOiAuMjVlbSAuNWVtO1xuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgfVxuICB9XG4gIC5kYXRldGltZS1mb3JtYXR0ZWQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtOTk5ZW07XG4gICAgdG9wOiAtOTk5ZW07XG4gICAgd2lkdGg6IDBweCAhaW1wb3J0YW50O1xuICAgIGhlaWdodDogMHB4ICFpbXBvcnRhbnQ7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICB9XG4gICYuZGF0ZS1lbnRlcmVkIHtcbiAgICAuanMtY2xlYXItaW5wdXQge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBpbml0aWFsO1xuICAgIH1cbiAgfVxufVxuIl19 */